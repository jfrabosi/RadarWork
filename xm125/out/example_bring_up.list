
out/example_bring_up.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000190  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007520  08000190  08000190  00010190  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003be8  080076b0  080076b0  000176b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b298  0800b298  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  0800b298  0800b298  0001b298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b2a0  0800b2a0  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800b2a0  0800b2a0  0001b2a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  0800b2a8  0800b2a8  0001b2a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  0800b2b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000370  20000090  0800b340  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00001600  20000400  0800b340  00020400  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .comment      0000004c  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00004066  00000000  00000000  0002010c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000b9f  00000000  00000000  00024172  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    0000250f  00000000  00000000  00024d11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000158  00000000  00000000  00027220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000002d8  00000000  00000000  00027378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001699  00000000  00000000  00027650  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000100a  00000000  00000000  00028ce9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000864  00000000  00000000  00029cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000090 	.word	0x20000090
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007694 	.word	0x08007694

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000094 	.word	0x20000094
 80001cc:	08007694 	.word	0x08007694

080001d0 <HAL_NVIC_SetPriority.constprop.0>:
 80001d0:	4b14      	ldr	r3, [pc, #80]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 80001d2:	68db      	ldr	r3, [r3, #12]
 80001d4:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80001d8:	b410      	push	{r4}
 80001da:	f1c3 0407 	rsb	r4, r3, #7
 80001de:	1d1a      	adds	r2, r3, #4
 80001e0:	2c04      	cmp	r4, #4
 80001e2:	bf28      	it	cs
 80001e4:	2404      	movcs	r4, #4
 80001e6:	2a06      	cmp	r2, #6
 80001e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80001ec:	fa02 f204 	lsl.w	r2, r2, r4
 80001f0:	bf8c      	ite	hi
 80001f2:	3b03      	subhi	r3, #3
 80001f4:	2300      	movls	r3, #0
 80001f6:	ea21 0102 	bic.w	r1, r1, r2
 80001fa:	4099      	lsls	r1, r3
 80001fc:	1c43      	adds	r3, r0, #1
 80001fe:	d00a      	beq.n	8000216 <HAL_NVIC_SetPriority.constprop.0+0x46>
 8000200:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8000204:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8000208:	0109      	lsls	r1, r1, #4
 800020a:	b2c9      	uxtb	r1, r1
 800020c:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8000210:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000214:	4770      	bx	lr
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 8000218:	0109      	lsls	r1, r1, #4
 800021a:	b2c9      	uxtb	r1, r1
 800021c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8000220:	e7f6      	b.n	8000210 <HAL_NVIC_SetPriority.constprop.0+0x40>
 8000222:	bf00      	nop
 8000224:	e000ed00 	.word	0xe000ed00

08000228 <UART_WaitOnFlagUntilTimeout.constprop.0>:
 8000228:	b4f0      	push	{r4, r5, r6, r7}
 800022a:	6805      	ldr	r5, [r0, #0]
 800022c:	4f29      	ldr	r7, [pc, #164]	; (80002d4 <UART_WaitOnFlagUntilTimeout.constprop.0+0xac>)
 800022e:	4606      	mov	r6, r0
 8000230:	e001      	b.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000232:	1c58      	adds	r0, r3, #1
 8000234:	d106      	bne.n	8000244 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1c>
 8000236:	69ec      	ldr	r4, [r5, #28]
 8000238:	ea31 0004 	bics.w	r0, r1, r4
 800023c:	d1f9      	bne.n	8000232 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800023e:	2000      	movs	r0, #0
 8000240:	bcf0      	pop	{r4, r5, r6, r7}
 8000242:	4770      	bx	lr
 8000244:	6838      	ldr	r0, [r7, #0]
 8000246:	1a80      	subs	r0, r0, r2
 8000248:	4283      	cmp	r3, r0
 800024a:	d327      	bcc.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024c:	b333      	cbz	r3, 800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024e:	6828      	ldr	r0, [r5, #0]
 8000250:	0744      	lsls	r4, r0, #29
 8000252:	d5f0      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000254:	69e8      	ldr	r0, [r5, #28]
 8000256:	0500      	lsls	r0, r0, #20
 8000258:	d5ed      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 800025a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800025e:	622b      	str	r3, [r5, #32]
 8000260:	e855 3f00 	ldrex	r3, [r5]
 8000264:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8000268:	e845 3200 	strex	r2, r3, [r5]
 800026c:	2a00      	cmp	r2, #0
 800026e:	d1f7      	bne.n	8000260 <UART_WaitOnFlagUntilTimeout.constprop.0+0x38>
 8000270:	6832      	ldr	r2, [r6, #0]
 8000272:	f102 0308 	add.w	r3, r2, #8
 8000276:	e853 3f00 	ldrex	r3, [r3]
 800027a:	f023 0301 	bic.w	r3, r3, #1
 800027e:	f102 0008 	add.w	r0, r2, #8
 8000282:	e840 3100 	strex	r1, r3, [r0]
 8000286:	2900      	cmp	r1, #0
 8000288:	d1f3      	bne.n	8000272 <UART_WaitOnFlagUntilTimeout.constprop.0+0x4a>
 800028a:	2320      	movs	r3, #32
 800028c:	67b3      	str	r3, [r6, #120]	; 0x78
 800028e:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 8000292:	67f3      	str	r3, [r6, #124]	; 0x7c
 8000294:	2003      	movs	r0, #3
 8000296:	f8c6 3080 	str.w	r3, [r6, #128]	; 0x80
 800029a:	e7d1      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 800029c:	e855 3f00 	ldrex	r3, [r5]
 80002a0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80002a4:	e845 3200 	strex	r2, r3, [r5]
 80002a8:	2a00      	cmp	r2, #0
 80002aa:	d1f7      	bne.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 80002ac:	6832      	ldr	r2, [r6, #0]
 80002ae:	f102 0308 	add.w	r3, r2, #8
 80002b2:	e853 3f00 	ldrex	r3, [r3]
 80002b6:	f023 0301 	bic.w	r3, r3, #1
 80002ba:	f102 0008 	add.w	r0, r2, #8
 80002be:	e840 3100 	strex	r1, r3, [r0]
 80002c2:	2900      	cmp	r1, #0
 80002c4:	d1f3      	bne.n	80002ae <UART_WaitOnFlagUntilTimeout.constprop.0+0x86>
 80002c6:	2320      	movs	r3, #32
 80002c8:	67b3      	str	r3, [r6, #120]	; 0x78
 80002ca:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 80002ce:	2003      	movs	r0, #3
 80002d0:	67f3      	str	r3, [r6, #124]	; 0x7c
 80002d2:	e7b5      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 80002d4:	200000ac 	.word	0x200000ac

080002d8 <HAL_DMA_Init.constprop.0>:
 80002d8:	4603      	mov	r3, r0
 80002da:	4a21      	ldr	r2, [pc, #132]	; (8000360 <HAL_DMA_Init.constprop.0+0x88>)
 80002dc:	6800      	ldr	r0, [r0, #0]
 80002de:	4290      	cmp	r0, r2
 80002e0:	bf95      	itete	ls
 80002e2:	4a20      	ldrls	r2, [pc, #128]	; (8000364 <HAL_DMA_Init.constprop.0+0x8c>)
 80002e4:	4a20      	ldrhi	r2, [pc, #128]	; (8000368 <HAL_DMA_Init.constprop.0+0x90>)
 80002e6:	4921      	ldrls	r1, [pc, #132]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 80002e8:	4921      	ldrhi	r1, [pc, #132]	; (8000370 <HAL_DMA_Init.constprop.0+0x98>)
 80002ea:	b430      	push	{r4, r5}
 80002ec:	4402      	add	r2, r0
 80002ee:	6419      	str	r1, [r3, #64]	; 0x40
 80002f0:	2114      	movs	r1, #20
 80002f2:	fbb2 f2f1 	udiv	r2, r2, r1
 80002f6:	0092      	lsls	r2, r2, #2
 80002f8:	645a      	str	r2, [r3, #68]	; 0x44
 80002fa:	2202      	movs	r2, #2
 80002fc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8000300:	6801      	ldr	r1, [r0, #0]
 8000302:	689d      	ldr	r5, [r3, #8]
 8000304:	e9d3 2405 	ldrd	r2, r4, [r3, #20]
 8000308:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800030c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8000310:	432a      	orrs	r2, r5
 8000312:	430a      	orrs	r2, r1
 8000314:	4322      	orrs	r2, r4
 8000316:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800031a:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 800031e:	6002      	str	r2, [r0, #0]
 8000320:	d014      	beq.n	800034c <HAL_DMA_Init.constprop.0+0x74>
 8000322:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8000324:	4a11      	ldr	r2, [pc, #68]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 8000326:	4291      	cmp	r1, r2
 8000328:	bf08      	it	eq
 800032a:	4912      	ldreq	r1, [pc, #72]	; (8000374 <HAL_DMA_Init.constprop.0+0x9c>)
 800032c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800032e:	bf18      	it	ne
 8000330:	4911      	ldrne	r1, [pc, #68]	; (8000378 <HAL_DMA_Init.constprop.0+0xa0>)
 8000332:	f002 001c 	and.w	r0, r2, #28
 8000336:	240f      	movs	r4, #15
 8000338:	680a      	ldr	r2, [r1, #0]
 800033a:	4084      	lsls	r4, r0
 800033c:	ea22 0204 	bic.w	r2, r2, r4
 8000340:	600a      	str	r2, [r1, #0]
 8000342:	685a      	ldr	r2, [r3, #4]
 8000344:	680c      	ldr	r4, [r1, #0]
 8000346:	4082      	lsls	r2, r0
 8000348:	4322      	orrs	r2, r4
 800034a:	600a      	str	r2, [r1, #0]
 800034c:	2000      	movs	r0, #0
 800034e:	2201      	movs	r2, #1
 8000350:	63d8      	str	r0, [r3, #60]	; 0x3c
 8000352:	f883 0024 	strb.w	r0, [r3, #36]	; 0x24
 8000356:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800035a:	bc30      	pop	{r4, r5}
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop
 8000360:	40020407 	.word	0x40020407
 8000364:	bffdfff8 	.word	0xbffdfff8
 8000368:	bffdfbf8 	.word	0xbffdfbf8
 800036c:	40020000 	.word	0x40020000
 8000370:	40020400 	.word	0x40020400
 8000374:	400200a8 	.word	0x400200a8
 8000378:	400204a8 	.word	0x400204a8

0800037c <HAL_RTC_SetAlarm_IT.constprop.0>:
 800037c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000380:	4c65      	ldr	r4, [pc, #404]	; (8000518 <HAL_RTC_SetAlarm_IT.constprop.0+0x19c>)
 8000382:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8000386:	2b01      	cmp	r3, #1
 8000388:	f000 80c2 	beq.w	8000510 <HAL_RTC_SetAlarm_IT.constprop.0+0x194>
 800038c:	6861      	ldr	r1, [r4, #4]
 800038e:	2201      	movs	r2, #1
 8000390:	2302      	movs	r3, #2
 8000392:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8000396:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800039a:	688e      	ldr	r6, [r1, #8]
 800039c:	7802      	ldrb	r2, [r0, #0]
 800039e:	6a05      	ldr	r5, [r0, #32]
 80003a0:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 80003a4:	bf16      	itet	ne
 80003a6:	78c6      	ldrbne	r6, [r0, #3]
 80003a8:	70c6      	strbeq	r6, [r0, #3]
 80003aa:	05b6      	lslne	r6, r6, #22
 80003ac:	2a09      	cmp	r2, #9
 80003ae:	d909      	bls.n	80003c4 <HAL_RTC_SetAlarm_IT.constprop.0+0x48>
 80003b0:	2300      	movs	r3, #0
 80003b2:	3a0a      	subs	r2, #10
 80003b4:	b2d2      	uxtb	r2, r2
 80003b6:	2a09      	cmp	r2, #9
 80003b8:	f103 0301 	add.w	r3, r3, #1
 80003bc:	d8f9      	bhi.n	80003b2 <HAL_RTC_SetAlarm_IT.constprop.0+0x36>
 80003be:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
 80003c2:	b2d2      	uxtb	r2, r2
 80003c4:	7843      	ldrb	r3, [r0, #1]
 80003c6:	2b09      	cmp	r3, #9
 80003c8:	ea4f 4202 	mov.w	r2, r2, lsl #16
 80003cc:	d909      	bls.n	80003e2 <HAL_RTC_SetAlarm_IT.constprop.0+0x66>
 80003ce:	2700      	movs	r7, #0
 80003d0:	3b0a      	subs	r3, #10
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	2b09      	cmp	r3, #9
 80003d6:	f107 0701 	add.w	r7, r7, #1
 80003da:	d8f9      	bhi.n	80003d0 <HAL_RTC_SetAlarm_IT.constprop.0+0x54>
 80003dc:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	f890 e002 	ldrb.w	lr, [r0, #2]
 80003e6:	f1be 0f09 	cmp.w	lr, #9
 80003ea:	ea4f 2803 	mov.w	r8, r3, lsl #8
 80003ee:	d90d      	bls.n	800040c <HAL_RTC_SetAlarm_IT.constprop.0+0x90>
 80003f0:	2700      	movs	r7, #0
 80003f2:	f1ae 0e0a 	sub.w	lr, lr, #10
 80003f6:	fa5f fe8e 	uxtb.w	lr, lr
 80003fa:	f1be 0f09 	cmp.w	lr, #9
 80003fe:	f107 0701 	add.w	r7, r7, #1
 8000402:	d8f6      	bhi.n	80003f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x76>
 8000404:	ea4e 1e07 	orr.w	lr, lr, r7, lsl #4
 8000408:	fa5f fe8e 	uxtb.w	lr, lr
 800040c:	f890 c024 	ldrb.w	ip, [r0, #36]	; 0x24
 8000410:	f1bc 0f09 	cmp.w	ip, #9
 8000414:	d90d      	bls.n	8000432 <HAL_RTC_SetAlarm_IT.constprop.0+0xb6>
 8000416:	2700      	movs	r7, #0
 8000418:	f1ac 0c0a 	sub.w	ip, ip, #10
 800041c:	fa5f fc8c 	uxtb.w	ip, ip
 8000420:	f1bc 0f09 	cmp.w	ip, #9
 8000424:	f107 0701 	add.w	r7, r7, #1
 8000428:	d8f6      	bhi.n	8000418 <HAL_RTC_SetAlarm_IT.constprop.0+0x9c>
 800042a:	ea4c 1c07 	orr.w	ip, ip, r7, lsl #4
 800042e:	fa5f fc8c 	uxtb.w	ip, ip
 8000432:	6943      	ldr	r3, [r0, #20]
 8000434:	6847      	ldr	r7, [r0, #4]
 8000436:	431d      	orrs	r5, r3
 8000438:	432e      	orrs	r6, r5
 800043a:	4332      	orrs	r2, r6
 800043c:	ea48 0302 	orr.w	r3, r8, r2
 8000440:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8000442:	69c6      	ldr	r6, [r0, #28]
 8000444:	25ca      	movs	r5, #202	; 0xca
 8000446:	2053      	movs	r0, #83	; 0x53
 8000448:	624d      	str	r5, [r1, #36]	; 0x24
 800044a:	ea43 0e0e 	orr.w	lr, r3, lr
 800044e:	6248      	str	r0, [r1, #36]	; 0x24
 8000450:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8000454:	ea4e 630c 	orr.w	r3, lr, ip, lsl #24
 8000458:	688a      	ldr	r2, [r1, #8]
 800045a:	ea46 0607 	orr.w	r6, r6, r7
 800045e:	d039      	beq.n	80004d4 <HAL_RTC_SetAlarm_IT.constprop.0+0x158>
 8000460:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000464:	608a      	str	r2, [r1, #8]
 8000466:	68ca      	ldr	r2, [r1, #12]
 8000468:	b2d2      	uxtb	r2, r2
 800046a:	f462 7220 	orn	r2, r2, #640	; 0x280
 800046e:	60ca      	str	r2, [r1, #12]
 8000470:	6825      	ldr	r5, [r4, #0]
 8000472:	e004      	b.n	800047e <HAL_RTC_SetAlarm_IT.constprop.0+0x102>
 8000474:	6820      	ldr	r0, [r4, #0]
 8000476:	1b40      	subs	r0, r0, r5
 8000478:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800047c:	d820      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 800047e:	68ca      	ldr	r2, [r1, #12]
 8000480:	f012 0202 	ands.w	r2, r2, #2
 8000484:	d0f6      	beq.n	8000474 <HAL_RTC_SetAlarm_IT.constprop.0+0xf8>
 8000486:	620b      	str	r3, [r1, #32]
 8000488:	648e      	str	r6, [r1, #72]	; 0x48
 800048a:	688b      	ldr	r3, [r1, #8]
 800048c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000490:	608b      	str	r3, [r1, #8]
 8000492:	688b      	ldr	r3, [r1, #8]
 8000494:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000498:	608b      	str	r3, [r1, #8]
 800049a:	4b20      	ldr	r3, [pc, #128]	; (800051c <HAL_RTC_SetAlarm_IT.constprop.0+0x1a0>)
 800049c:	681a      	ldr	r2, [r3, #0]
 800049e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004a2:	601a      	str	r2, [r3, #0]
 80004a4:	689a      	ldr	r2, [r3, #8]
 80004a6:	26ff      	movs	r6, #255	; 0xff
 80004a8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004ac:	2501      	movs	r5, #1
 80004ae:	2000      	movs	r0, #0
 80004b0:	609a      	str	r2, [r3, #8]
 80004b2:	624e      	str	r6, [r1, #36]	; 0x24
 80004b4:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80004b8:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80004bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004c0:	2303      	movs	r3, #3
 80004c2:	20ff      	movs	r0, #255	; 0xff
 80004c4:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80004c8:	6248      	str	r0, [r1, #36]	; 0x24
 80004ca:	4618      	mov	r0, r3
 80004cc:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80004d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80004d8:	608a      	str	r2, [r1, #8]
 80004da:	68ca      	ldr	r2, [r1, #12]
 80004dc:	b2d2      	uxtb	r2, r2
 80004de:	f462 72c0 	orn	r2, r2, #384	; 0x180
 80004e2:	60ca      	str	r2, [r1, #12]
 80004e4:	6825      	ldr	r5, [r4, #0]
 80004e6:	e004      	b.n	80004f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x176>
 80004e8:	6820      	ldr	r0, [r4, #0]
 80004ea:	1b40      	subs	r0, r0, r5
 80004ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80004f0:	d8e6      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 80004f2:	68ca      	ldr	r2, [r1, #12]
 80004f4:	f012 0201 	ands.w	r2, r2, #1
 80004f8:	d0f6      	beq.n	80004e8 <HAL_RTC_SetAlarm_IT.constprop.0+0x16c>
 80004fa:	61cb      	str	r3, [r1, #28]
 80004fc:	644e      	str	r6, [r1, #68]	; 0x44
 80004fe:	688b      	ldr	r3, [r1, #8]
 8000500:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000504:	608b      	str	r3, [r1, #8]
 8000506:	688b      	ldr	r3, [r1, #8]
 8000508:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800050c:	608b      	str	r3, [r1, #8]
 800050e:	e7c4      	b.n	800049a <HAL_RTC_SetAlarm_IT.constprop.0+0x11e>
 8000510:	2002      	movs	r0, #2
 8000512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000516:	bf00      	nop
 8000518:	200000ac 	.word	0x200000ac
 800051c:	40010400 	.word	0x40010400

08000520 <HAL_RTC_WaitForSynchro.constprop.0>:
 8000520:	4909      	ldr	r1, [pc, #36]	; (8000548 <HAL_RTC_WaitForSynchro.constprop.0+0x28>)
 8000522:	684a      	ldr	r2, [r1, #4]
 8000524:	68d3      	ldr	r3, [r2, #12]
 8000526:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800052a:	60d3      	str	r3, [r2, #12]
 800052c:	6808      	ldr	r0, [r1, #0]
 800052e:	e004      	b.n	800053a <HAL_RTC_WaitForSynchro.constprop.0+0x1a>
 8000530:	680b      	ldr	r3, [r1, #0]
 8000532:	1a1b      	subs	r3, r3, r0
 8000534:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000538:	d804      	bhi.n	8000544 <HAL_RTC_WaitForSynchro.constprop.0+0x24>
 800053a:	68d3      	ldr	r3, [r2, #12]
 800053c:	069b      	lsls	r3, r3, #26
 800053e:	d5f7      	bpl.n	8000530 <HAL_RTC_WaitForSynchro.constprop.0+0x10>
 8000540:	2000      	movs	r0, #0
 8000542:	4770      	bx	lr
 8000544:	2003      	movs	r0, #3
 8000546:	4770      	bx	lr
 8000548:	200000ac 	.word	0x200000ac

0800054c <RTC_ExitInitMode.constprop.0>:
 800054c:	b508      	push	{r3, lr}
 800054e:	4b11      	ldr	r3, [pc, #68]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 8000550:	68da      	ldr	r2, [r3, #12]
 8000552:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8000556:	60da      	str	r2, [r3, #12]
 8000558:	689a      	ldr	r2, [r3, #8]
 800055a:	0692      	lsls	r2, r2, #26
 800055c:	d403      	bmi.n	8000566 <RTC_ExitInitMode.constprop.0+0x1a>
 800055e:	f7ff ffdf 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000562:	b988      	cbnz	r0, 8000588 <RTC_ExitInitMode.constprop.0+0x3c>
 8000564:	bd08      	pop	{r3, pc}
 8000566:	689a      	ldr	r2, [r3, #8]
 8000568:	f022 0220 	bic.w	r2, r2, #32
 800056c:	609a      	str	r2, [r3, #8]
 800056e:	f7ff ffd7 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000572:	b118      	cbz	r0, 800057c <RTC_ExitInitMode.constprop.0+0x30>
 8000574:	4b08      	ldr	r3, [pc, #32]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 8000576:	2003      	movs	r0, #3
 8000578:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800057c:	4a05      	ldr	r2, [pc, #20]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 800057e:	6893      	ldr	r3, [r2, #8]
 8000580:	f043 0320 	orr.w	r3, r3, #32
 8000584:	6093      	str	r3, [r2, #8]
 8000586:	bd08      	pop	{r3, pc}
 8000588:	4b03      	ldr	r3, [pc, #12]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 800058a:	2003      	movs	r0, #3
 800058c:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8000590:	bd08      	pop	{r3, pc}
 8000592:	bf00      	nop
 8000594:	40002800 	.word	0x40002800
 8000598:	200000ac 	.word	0x200000ac

0800059c <RTC_EnterInitMode.constprop.0>:
 800059c:	490e      	ldr	r1, [pc, #56]	; (80005d8 <RTC_EnterInitMode.constprop.0+0x3c>)
 800059e:	684a      	ldr	r2, [r1, #4]
 80005a0:	68d0      	ldr	r0, [r2, #12]
 80005a2:	f010 0040 	ands.w	r0, r0, #64	; 0x40
 80005a6:	d001      	beq.n	80005ac <RTC_EnterInitMode.constprop.0+0x10>
 80005a8:	2000      	movs	r0, #0
 80005aa:	4770      	bx	lr
 80005ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80005b0:	b430      	push	{r4, r5}
 80005b2:	60d3      	str	r3, [r2, #12]
 80005b4:	680c      	ldr	r4, [r1, #0]
 80005b6:	2503      	movs	r5, #3
 80005b8:	e009      	b.n	80005ce <RTC_EnterInitMode.constprop.0+0x32>
 80005ba:	2803      	cmp	r0, #3
 80005bc:	d00a      	beq.n	80005d4 <RTC_EnterInitMode.constprop.0+0x38>
 80005be:	680b      	ldr	r3, [r1, #0]
 80005c0:	1b1b      	subs	r3, r3, r4
 80005c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80005c6:	bf84      	itt	hi
 80005c8:	f881 5025 	strbhi.w	r5, [r1, #37]	; 0x25
 80005cc:	2003      	movhi	r0, #3
 80005ce:	68d3      	ldr	r3, [r2, #12]
 80005d0:	065b      	lsls	r3, r3, #25
 80005d2:	d5f2      	bpl.n	80005ba <RTC_EnterInitMode.constprop.0+0x1e>
 80005d4:	bc30      	pop	{r4, r5}
 80005d6:	4770      	bx	lr
 80005d8:	200000ac 	.word	0x200000ac

080005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 80005dc:	b4f0      	push	{r4, r5, r6, r7}
 80005de:	4b31      	ldr	r3, [pc, #196]	; (80006a4 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xc8>)
 80005e0:	4e31      	ldr	r6, [pc, #196]	; (80006a8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xcc>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6805      	ldr	r5, [r0, #0]
 80005e6:	b082      	sub	sp, #8
 80005e8:	2400      	movs	r4, #0
 80005ea:	f88d 4003 	strb.w	r4, [sp, #3]
 80005ee:	6834      	ldr	r4, [r6, #0]
 80005f0:	6837      	ldr	r7, [r6, #0]
 80005f2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80005f6:	f1c4 0464 	rsb	r4, r4, #100	; 0x64
 80005fa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80005fe:	4422      	add	r2, r4
 8000600:	0d1b      	lsrs	r3, r3, #20
 8000602:	fb02 f303 	mul.w	r3, r2, r3
 8000606:	9301      	str	r3, [sp, #4]
 8000608:	68ab      	ldr	r3, [r5, #8]
 800060a:	4219      	tst	r1, r3
 800060c:	d10a      	bne.n	8000624 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x48>
 800060e:	e02c      	b.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000610:	9c01      	ldr	r4, [sp, #4]
 8000612:	9b01      	ldr	r3, [sp, #4]
 8000614:	3b01      	subs	r3, #1
 8000616:	9301      	str	r3, [sp, #4]
 8000618:	68ab      	ldr	r3, [r5, #8]
 800061a:	2c00      	cmp	r4, #0
 800061c:	bf08      	it	eq
 800061e:	2200      	moveq	r2, #0
 8000620:	4219      	tst	r1, r3
 8000622:	d022      	beq.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000624:	f5b1 6fc0 	cmp.w	r1, #1536	; 0x600
 8000628:	d105      	bne.n	8000636 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5a>
 800062a:	7b2b      	ldrb	r3, [r5, #12]
 800062c:	b2db      	uxtb	r3, r3
 800062e:	f88d 3003 	strb.w	r3, [sp, #3]
 8000632:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8000636:	6833      	ldr	r3, [r6, #0]
 8000638:	1bdb      	subs	r3, r3, r7
 800063a:	429a      	cmp	r2, r3
 800063c:	d8e8      	bhi.n	8000610 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x34>
 800063e:	686b      	ldr	r3, [r5, #4]
 8000640:	6842      	ldr	r2, [r0, #4]
 8000642:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8000646:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800064a:	606b      	str	r3, [r5, #4]
 800064c:	d01a      	beq.n	8000684 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa8>
 800064e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000650:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000654:	d00d      	beq.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 8000656:	2201      	movs	r2, #1
 8000658:	2300      	movs	r3, #0
 800065a:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 800065e:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8000662:	2003      	movs	r0, #3
 8000664:	b002      	add	sp, #8
 8000666:	bcf0      	pop	{r4, r5, r6, r7}
 8000668:	4770      	bx	lr
 800066a:	2000      	movs	r0, #0
 800066c:	b002      	add	sp, #8
 800066e:	bcf0      	pop	{r4, r5, r6, r7}
 8000670:	4770      	bx	lr
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000678:	602b      	str	r3, [r5, #0]
 800067a:	682b      	ldr	r3, [r5, #0]
 800067c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000680:	602b      	str	r3, [r5, #0]
 8000682:	e7e8      	b.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 8000684:	6883      	ldr	r3, [r0, #8]
 8000686:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800068a:	d002      	beq.n	8000692 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xb6>
 800068c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000690:	d1dd      	bne.n	800064e <SPI_WaitFifoStateUntilTimeout.constprop.0+0x72>
 8000692:	682b      	ldr	r3, [r5, #0]
 8000694:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000698:	602b      	str	r3, [r5, #0]
 800069a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800069c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80006a0:	d1d9      	bne.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 80006a2:	e7e6      	b.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 80006a4:	20000000 	.word	0x20000000
 80006a8:	200000ac 	.word	0x200000ac

080006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 80006ac:	b470      	push	{r4, r5, r6}
 80006ae:	4d29      	ldr	r5, [pc, #164]	; (8000754 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa8>)
 80006b0:	4b29      	ldr	r3, [pc, #164]	; (8000758 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>)
 80006b2:	682a      	ldr	r2, [r5, #0]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6804      	ldr	r4, [r0, #0]
 80006b8:	682e      	ldr	r6, [r5, #0]
 80006ba:	f1c2 0264 	rsb	r2, r2, #100	; 0x64
 80006be:	4411      	add	r1, r2
 80006c0:	b083      	sub	sp, #12
 80006c2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80006c6:	fb01 f303 	mul.w	r3, r1, r3
 80006ca:	9301      	str	r3, [sp, #4]
 80006cc:	68a3      	ldr	r3, [r4, #8]
 80006ce:	061a      	lsls	r2, r3, #24
 80006d0:	d50d      	bpl.n	80006ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0x42>
 80006d2:	682b      	ldr	r3, [r5, #0]
 80006d4:	1b9b      	subs	r3, r3, r6
 80006d6:	428b      	cmp	r3, r1
 80006d8:	d20d      	bcs.n	80006f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4a>
 80006da:	9a01      	ldr	r2, [sp, #4]
 80006dc:	9b01      	ldr	r3, [sp, #4]
 80006de:	3b01      	subs	r3, #1
 80006e0:	9301      	str	r3, [sp, #4]
 80006e2:	68a3      	ldr	r3, [r4, #8]
 80006e4:	2a00      	cmp	r2, #0
 80006e6:	bf08      	it	eq
 80006e8:	2100      	moveq	r1, #0
 80006ea:	061b      	lsls	r3, r3, #24
 80006ec:	d4f1      	bmi.n	80006d2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 80006ee:	2000      	movs	r0, #0
 80006f0:	b003      	add	sp, #12
 80006f2:	bc70      	pop	{r4, r5, r6}
 80006f4:	4770      	bx	lr
 80006f6:	6863      	ldr	r3, [r4, #4]
 80006f8:	6842      	ldr	r2, [r0, #4]
 80006fa:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 80006fe:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8000702:	6063      	str	r3, [r4, #4]
 8000704:	d016      	beq.n	8000734 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x88>
 8000706:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000708:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800070c:	d009      	beq.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 800070e:	2201      	movs	r2, #1
 8000710:	2300      	movs	r3, #0
 8000712:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 8000716:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800071a:	2003      	movs	r0, #3
 800071c:	b003      	add	sp, #12
 800071e:	bc70      	pop	{r4, r5, r6}
 8000720:	4770      	bx	lr
 8000722:	6823      	ldr	r3, [r4, #0]
 8000724:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000728:	6023      	str	r3, [r4, #0]
 800072a:	6823      	ldr	r3, [r4, #0]
 800072c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	e7ec      	b.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000734:	6883      	ldr	r3, [r0, #8]
 8000736:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800073a:	d002      	beq.n	8000742 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
 800073c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000740:	d1e1      	bne.n	8000706 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x5a>
 8000742:	6823      	ldr	r3, [r4, #0]
 8000744:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000748:	6023      	str	r3, [r4, #0]
 800074a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800074c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000750:	d1dd      	bne.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000752:	e7e6      	b.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8000754:	200000ac 	.word	0x200000ac
 8000758:	20000000 	.word	0x20000000

0800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>:
 800075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000760:	4605      	mov	r5, r0
 8000762:	b087      	sub	sp, #28
 8000764:	2400      	movs	r4, #0
 8000766:	eb05 0e41 	add.w	lr, r5, r1, lsl #1
 800076a:	9002      	str	r0, [sp, #8]
 800076c:	9205      	str	r2, [sp, #20]
 800076e:	4610      	mov	r0, r2
 8000770:	9104      	str	r1, [sp, #16]
 8000772:	9303      	str	r3, [sp, #12]
 8000774:	f1ae 0e12 	sub.w	lr, lr, #18
 8000778:	1eaa      	subs	r2, r5, #2
 800077a:	46a4      	mov	ip, r4
 800077c:	9401      	str	r4, [sp, #4]
 800077e:	46a2      	mov	sl, r4
 8000780:	46a3      	mov	fp, r4
 8000782:	2701      	movs	r7, #1
 8000784:	f240 29ee 	movw	r9, #750	; 0x2ee
 8000788:	e014      	b.n	80007b4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x58>
 800078a:	f1bb 0f00 	cmp.w	fp, #0
 800078e:	d12e      	bne.n	80007ee <acc_cal_algorithms_calc_pulse_params.constprop.0+0x92>
 8000790:	4553      	cmp	r3, sl
 8000792:	dd32      	ble.n	80007fa <acc_cal_algorithms_calc_pulse_params.constprop.0+0x9e>
 8000794:	469a      	mov	sl, r3
 8000796:	2401      	movs	r4, #1
 8000798:	9e01      	ldr	r6, [sp, #4]
 800079a:	4276      	negs	r6, r6
 800079c:	42b3      	cmp	r3, r6
 800079e:	bfbc      	itt	lt
 80007a0:	eba8 0305 	sublt.w	r3, r8, r5
 80007a4:	9301      	strlt	r3, [sp, #4]
 80007a6:	458c      	cmp	ip, r1
 80007a8:	bf38      	it	cc
 80007aa:	468c      	movcc	ip, r1
 80007ac:	4596      	cmp	lr, r2
 80007ae:	f100 0002 	add.w	r0, r0, #2
 80007b2:	d027      	beq.n	8000804 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xa8>
 80007b4:	8a55      	ldrh	r5, [r2, #18]
 80007b6:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 80007ba:	1a6b      	subs	r3, r5, r1
 80007bc:	f503 4600 	add.w	r6, r3, #32768	; 0x8000
 80007c0:	f5b6 3f80 	cmp.w	r6, #65536	; 0x10000
 80007c4:	bf38      	it	cc
 80007c6:	8003      	strhcc	r3, [r0, #0]
 80007c8:	4688      	mov	r8, r1
 80007ca:	bf2c      	ite	cs
 80007cc:	2700      	movcs	r7, #0
 80007ce:	8811      	ldrhcc	r1, [r2, #0]
 80007d0:	454b      	cmp	r3, r9
 80007d2:	dcda      	bgt.n	800078a <acc_cal_algorithms_calc_pulse_params.constprop.0+0x2e>
 80007d4:	4e56      	ldr	r6, [pc, #344]	; (8000930 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1d4>)
 80007d6:	459a      	cmp	sl, r3
 80007d8:	bfb8      	it	lt
 80007da:	469a      	movlt	sl, r3
 80007dc:	42b3      	cmp	r3, r6
 80007de:	dadb      	bge.n	8000798 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3c>
 80007e0:	2c00      	cmp	r4, #0
 80007e2:	bf0a      	itet	eq
 80007e4:	2700      	moveq	r7, #0
 80007e6:	46a3      	movne	fp, r4
 80007e8:	f04f 0b01 	moveq.w	fp, #1
 80007ec:	e7d4      	b.n	8000798 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3c>
 80007ee:	4553      	cmp	r3, sl
 80007f0:	dd05      	ble.n	80007fe <acc_cal_algorithms_calc_pulse_params.constprop.0+0xa2>
 80007f2:	469a      	mov	sl, r3
 80007f4:	465c      	mov	r4, fp
 80007f6:	2700      	movs	r7, #0
 80007f8:	e7ce      	b.n	8000798 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3c>
 80007fa:	2401      	movs	r4, #1
 80007fc:	e7cc      	b.n	8000798 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3c>
 80007fe:	465c      	mov	r4, fp
 8000800:	2700      	movs	r7, #0
 8000802:	e7c9      	b.n	8000798 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3c>
 8000804:	b92f      	cbnz	r7, 8000812 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb6>
 8000806:	f04f 0b00 	mov.w	fp, #0
 800080a:	4658      	mov	r0, fp
 800080c:	b007      	add	sp, #28
 800080e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000812:	2c00      	cmp	r4, #0
 8000814:	d0f7      	beq.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 8000816:	f1bb 0f00 	cmp.w	fp, #0
 800081a:	d0f4      	beq.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 800081c:	9a04      	ldr	r2, [sp, #16]
 800081e:	9e05      	ldr	r6, [sp, #20]
 8000820:	f8cd c010 	str.w	ip, [sp, #16]
 8000824:	2300      	movs	r3, #0
 8000826:	f8cd a014 	str.w	sl, [sp, #20]
 800082a:	f1a2 081c 	sub.w	r8, r2, #28
 800082e:	3612      	adds	r6, #18
 8000830:	4699      	mov	r9, r3
 8000832:	469e      	mov	lr, r3
 8000834:	461f      	mov	r7, r3
 8000836:	469c      	mov	ip, r3
 8000838:	469a      	mov	sl, r3
 800083a:	f936 3f02 	ldrsh.w	r3, [r6, #2]!
 800083e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8000842:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8000846:	4634      	mov	r4, r6
 8000848:	4630      	mov	r0, r6
 800084a:	210a      	movs	r1, #10
 800084c:	f930 5d02 	ldrsh.w	r5, [r0, #-2]!
 8000850:	f934 2f02 	ldrsh.w	r2, [r4, #2]!
 8000854:	fb01 3305 	mla	r3, r1, r5, r3
 8000858:	fb01 3302 	mla	r3, r1, r2, r3
 800085c:	3901      	subs	r1, #1
 800085e:	d1f5      	bne.n	800084c <acc_cal_algorithms_calc_pulse_params.constprop.0+0xf0>
 8000860:	4573      	cmp	r3, lr
 8000862:	dc61      	bgt.n	8000928 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1cc>
 8000864:	454b      	cmp	r3, r9
 8000866:	da01      	bge.n	800086c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x110>
 8000868:	4699      	mov	r9, r3
 800086a:	46ba      	mov	sl, r7
 800086c:	3701      	adds	r7, #1
 800086e:	4547      	cmp	r7, r8
 8000870:	d1e3      	bne.n	800083a <acc_cal_algorithms_calc_pulse_params.constprop.0+0xde>
 8000872:	f24c 3350 	movw	r3, #50000	; 0xc350
 8000876:	459e      	cmp	lr, r3
 8000878:	4660      	mov	r0, ip
 800087a:	4654      	mov	r4, sl
 800087c:	f8dd c010 	ldr.w	ip, [sp, #16]
 8000880:	f8dd a014 	ldr.w	sl, [sp, #20]
 8000884:	ddbf      	ble.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 8000886:	4b2b      	ldr	r3, [pc, #172]	; (8000934 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1d8>)
 8000888:	4599      	cmp	r9, r3
 800088a:	dabc      	bge.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 800088c:	f1ba 0f00 	cmp.w	sl, #0
 8000890:	d0b9      	beq.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 8000892:	9b01      	ldr	r3, [sp, #4]
 8000894:	2b00      	cmp	r3, #0
 8000896:	d0b6      	beq.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 8000898:	9b02      	ldr	r3, [sp, #8]
 800089a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800089c:	881b      	ldrh	r3, [r3, #0]
 800089e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80008a2:	00db      	lsls	r3, r3, #3
 80008a4:	b142      	cbz	r2, 80008b8 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x15c>
 80008a6:	4563      	cmp	r3, ip
 80008a8:	d204      	bcs.n	80008b4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x158>
 80008aa:	43d9      	mvns	r1, r3
 80008ac:	4451      	add	r1, sl
 80008ae:	4461      	add	r1, ip
 80008b0:	fbb1 f1fa 	udiv	r1, r1, sl
 80008b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80008b6:	6011      	str	r1, [r2, #0]
 80008b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80008ba:	2a00      	cmp	r2, #0
 80008bc:	d0a5      	beq.n	800080a <acc_cal_algorithms_calc_pulse_params.constprop.0+0xae>
 80008be:	9a03      	ldr	r2, [sp, #12]
 80008c0:	2a00      	cmp	r2, #0
 80008c2:	d0a2      	beq.n	800080a <acc_cal_algorithms_calc_pulse_params.constprop.0+0xae>
 80008c4:	4602      	mov	r2, r0
 80008c6:	9902      	ldr	r1, [sp, #8]
 80008c8:	320e      	adds	r2, #14
 80008ca:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80008ce:	ebb3 0fc1 	cmp.w	r3, r1, lsl #3
 80008d2:	ea4f 00c1 	mov.w	r0, r1, lsl #3
 80008d6:	d205      	bcs.n	80008e4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x188>
 80008d8:	43db      	mvns	r3, r3
 80008da:	4453      	add	r3, sl
 80008dc:	4403      	add	r3, r0
 80008de:	fbb3 f3fa 	udiv	r3, r3, sl
 80008e2:	1ad2      	subs	r2, r2, r3
 80008e4:	4620      	mov	r0, r4
 80008e6:	9b02      	ldr	r3, [sp, #8]
 80008e8:	300e      	adds	r0, #14
 80008ea:	f833 3010 	ldrh.w	r3, [r3, r0, lsl #1]
 80008ee:	ebbc 0fc3 	cmp.w	ip, r3, lsl #3
 80008f2:	ea4f 01c3 	mov.w	r1, r3, lsl #3
 80008f6:	d906      	bls.n	8000906 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1aa>
 80008f8:	9c01      	ldr	r4, [sp, #4]
 80008fa:	1e63      	subs	r3, r4, #1
 80008fc:	4463      	add	r3, ip
 80008fe:	1a5b      	subs	r3, r3, r1
 8000900:	fbb3 f3f4 	udiv	r3, r3, r4
 8000904:	1ac0      	subs	r0, r0, r3
 8000906:	2a00      	cmp	r2, #0
 8000908:	f6ff af7d 	blt.w	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 800090c:	2800      	cmp	r0, #0
 800090e:	f6ff af7a 	blt.w	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 8000912:	4282      	cmp	r2, r0
 8000914:	f73f af77 	bgt.w	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 8000918:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800091a:	eba0 0a02 	sub.w	sl, r0, r2
 800091e:	f8c3 a000 	str.w	sl, [r3]
 8000922:	9b03      	ldr	r3, [sp, #12]
 8000924:	601a      	str	r2, [r3, #0]
 8000926:	e770      	b.n	800080a <acc_cal_algorithms_calc_pulse_params.constprop.0+0xae>
 8000928:	469e      	mov	lr, r3
 800092a:	46bc      	mov	ip, r7
 800092c:	e79e      	b.n	800086c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x110>
 800092e:	bf00      	nop
 8000930:	fffffd12 	.word	0xfffffd12
 8000934:	ffff3cb0 	.word	0xffff3cb0

08000938 <acc_diagnostic_log_array.constprop.0>:
 8000938:	4b03      	ldr	r3, [pc, #12]	; (8000948 <acc_diagnostic_log_array.constprop.0+0x10>)
 800093a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800093c:	b113      	cbz	r3, 8000944 <acc_diagnostic_log_array.constprop.0+0xc>
 800093e:	68db      	ldr	r3, [r3, #12]
 8000940:	4902      	ldr	r1, [pc, #8]	; (800094c <acc_diagnostic_log_array.constprop.0+0x14>)
 8000942:	4718      	bx	r3
 8000944:	4770      	bx	lr
 8000946:	bf00      	nop
 8000948:	200000ac 	.word	0x200000ac
 800094c:	0800a548 	.word	0x0800a548

08000950 <acc_cal_algorithms_phase_unwrap.constprop.0>:
 8000950:	b470      	push	{r4, r5, r6}
 8000952:	4e12      	ldr	r6, [pc, #72]	; (800099c <acc_cal_algorithms_phase_unwrap.constprop.0+0x4c>)
 8000954:	4d12      	ldr	r5, [pc, #72]	; (80009a0 <acc_cal_algorithms_phase_unwrap.constprop.0+0x50>)
 8000956:	f100 04bc 	add.w	r4, r0, #188	; 0xbc
 800095a:	2100      	movs	r1, #0
 800095c:	6843      	ldr	r3, [r0, #4]
 800095e:	440b      	add	r3, r1
 8000960:	4602      	mov	r2, r0
 8000962:	f840 3f04 	str.w	r3, [r0, #4]!
 8000966:	6812      	ldr	r2, [r2, #0]
 8000968:	1a9a      	subs	r2, r3, r2
 800096a:	42b2      	cmp	r2, r6
 800096c:	dd09      	ble.n	8000982 <acc_cal_algorithms_phase_unwrap.constprop.0+0x32>
 800096e:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8000972:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 8000976:	3b7e      	subs	r3, #126	; 0x7e
 8000978:	f5a1 21c9 	sub.w	r1, r1, #411648	; 0x64800
 800097c:	6003      	str	r3, [r0, #0]
 800097e:	397e      	subs	r1, #126	; 0x7e
 8000980:	1a9a      	subs	r2, r3, r2
 8000982:	42aa      	cmp	r2, r5
 8000984:	da06      	bge.n	8000994 <acc_cal_algorithms_phase_unwrap.constprop.0+0x44>
 8000986:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 800098a:	337e      	adds	r3, #126	; 0x7e
 800098c:	f501 21c9 	add.w	r1, r1, #411648	; 0x64800
 8000990:	6003      	str	r3, [r0, #0]
 8000992:	317e      	adds	r1, #126	; 0x7e
 8000994:	4284      	cmp	r4, r0
 8000996:	d1e1      	bne.n	800095c <acc_cal_algorithms_phase_unwrap.constprop.0+0xc>
 8000998:	bc70      	pop	{r4, r5, r6}
 800099a:	4770      	bx	lr
 800099c:	0003243f 	.word	0x0003243f
 80009a0:	fffcdbc1 	.word	0xfffcdbc1

080009a4 <diagnostic_log_data_i16.part.0>:
 80009a4:	4b05      	ldr	r3, [pc, #20]	; (80009bc <diagnostic_log_data_i16.part.0+0x18>)
 80009a6:	4a06      	ldr	r2, [pc, #24]	; (80009c0 <diagnostic_log_data_i16.part.0+0x1c>)
 80009a8:	4906      	ldr	r1, [pc, #24]	; (80009c4 <diagnostic_log_data_i16.part.0+0x20>)
 80009aa:	b410      	push	{r4}
 80009ac:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80009ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80009b0:	46a4      	mov	ip, r4
 80009b2:	2002      	movs	r0, #2
 80009b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009b8:	4760      	bx	ip
 80009ba:	bf00      	nop
 80009bc:	200000ac 	.word	0x200000ac
 80009c0:	08009fa4 	.word	0x08009fa4
 80009c4:	08009fa8 	.word	0x08009fa8

080009c8 <acc_diagnostic_log_data_i16>:
 80009c8:	4b02      	ldr	r3, [pc, #8]	; (80009d4 <acc_diagnostic_log_data_i16+0xc>)
 80009ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009cc:	b10b      	cbz	r3, 80009d2 <acc_diagnostic_log_data_i16+0xa>
 80009ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009d0:	4718      	bx	r3
 80009d2:	4770      	bx	lr
 80009d4:	200000ac 	.word	0x200000ac

080009d8 <acc_diagnostic_log_data_u16>:
 80009d8:	4b02      	ldr	r3, [pc, #8]	; (80009e4 <acc_diagnostic_log_data_u16+0xc>)
 80009da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009dc:	b10b      	cbz	r3, 80009e2 <acc_diagnostic_log_data_u16+0xa>
 80009de:	6a1b      	ldr	r3, [r3, #32]
 80009e0:	4718      	bx	r3
 80009e2:	4770      	bx	lr
 80009e4:	200000ac 	.word	0x200000ac

080009e8 <acc_diagnostic_log_scalar>:
 80009e8:	4b02      	ldr	r3, [pc, #8]	; (80009f4 <acc_diagnostic_log_scalar+0xc>)
 80009ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009ec:	b10b      	cbz	r3, 80009f2 <acc_diagnostic_log_scalar+0xa>
 80009ee:	695b      	ldr	r3, [r3, #20]
 80009f0:	4718      	bx	r3
 80009f2:	4770      	bx	lr
 80009f4:	200000ac 	.word	0x200000ac

080009f8 <acc_diagnostic_log_set_scope>:
 80009f8:	4b02      	ldr	r3, [pc, #8]	; (8000a04 <acc_diagnostic_log_set_scope+0xc>)
 80009fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009fc:	b10b      	cbz	r3, 8000a02 <acc_diagnostic_log_set_scope+0xa>
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	4718      	bx	r3
 8000a02:	4770      	bx	lr
 8000a04:	200000ac 	.word	0x200000ac

08000a08 <adl_add_value_to_buffer>:
 8000a08:	4b18      	ldr	r3, [pc, #96]	; (8000a6c <adl_add_value_to_buffer+0x64>)
 8000a0a:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000a70 <adl_add_value_to_buffer+0x68>
 8000a0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a12:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8000a14:	1873      	adds	r3, r6, r1
 8000a16:	1e5c      	subs	r4, r3, #1
 8000a18:	46a6      	mov	lr, r4
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	fbac 7500 	umull	r7, r5, ip, r0
 8000a20:	08ed      	lsrs	r5, r5, #3
 8000a22:	eb05 0785 	add.w	r7, r5, r5, lsl #2
 8000a26:	eba0 0747 	sub.w	r7, r0, r7, lsl #1
 8000a2a:	4680      	mov	r8, r0
 8000a2c:	3730      	adds	r7, #48	; 0x30
 8000a2e:	f1b8 0f09 	cmp.w	r8, #9
 8000a32:	4628      	mov	r0, r5
 8000a34:	f80e 7f01 	strb.w	r7, [lr, #1]!
 8000a38:	4615      	mov	r5, r2
 8000a3a:	f102 0201 	add.w	r2, r2, #1
 8000a3e:	d8ed      	bhi.n	8000a1c <adl_add_value_to_buffer+0x14>
 8000a40:	2000      	movs	r0, #0
 8000a42:	5498      	strb	r0, [r3, r2]
 8000a44:	4610      	mov	r0, r2
 8000a46:	4418      	add	r0, r3
 8000a48:	eb03 0355 	add.w	r3, r3, r5, lsr #1
 8000a4c:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8000a50:	f810 7d01 	ldrb.w	r7, [r0, #-1]!
 8000a54:	7027      	strb	r7, [r4, #0]
 8000a56:	429c      	cmp	r4, r3
 8000a58:	7005      	strb	r5, [r0, #0]
 8000a5a:	d1f7      	bne.n	8000a4c <adl_add_value_to_buffer+0x44>
 8000a5c:	4411      	add	r1, r2
 8000a5e:	1c48      	adds	r0, r1, #1
 8000a60:	222c      	movs	r2, #44	; 0x2c
 8000a62:	2300      	movs	r3, #0
 8000a64:	5472      	strb	r2, [r6, r1]
 8000a66:	5433      	strb	r3, [r6, r0]
 8000a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a6c:	200000ac 	.word	0x200000ac
 8000a70:	cccccccd 	.word	0xcccccccd

08000a74 <diagnostic_log_scalar>:
 8000a74:	b510      	push	{r4, lr}
 8000a76:	4a07      	ldr	r2, [pc, #28]	; (8000a94 <diagnostic_log_scalar+0x20>)
 8000a78:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000a7c:	2c01      	cmp	r4, #1
 8000a7e:	b082      	sub	sp, #8
 8000a80:	d906      	bls.n	8000a90 <diagnostic_log_scalar+0x1c>
 8000a82:	9100      	str	r1, [sp, #0]
 8000a84:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000a86:	4904      	ldr	r1, [pc, #16]	; (8000a98 <diagnostic_log_scalar+0x24>)
 8000a88:	4a04      	ldr	r2, [pc, #16]	; (8000a9c <diagnostic_log_scalar+0x28>)
 8000a8a:	4603      	mov	r3, r0
 8000a8c:	2002      	movs	r0, #2
 8000a8e:	47a0      	blx	r4
 8000a90:	b002      	add	sp, #8
 8000a92:	bd10      	pop	{r4, pc}
 8000a94:	200000ac 	.word	0x200000ac
 8000a98:	08009fa8 	.word	0x08009fa8
 8000a9c:	08009fac 	.word	0x08009fac

08000aa0 <diagnostic_log_array_sub_name>:
 8000aa0:	b530      	push	{r4, r5, lr}
 8000aa2:	4c08      	ldr	r4, [pc, #32]	; (8000ac4 <diagnostic_log_array_sub_name+0x24>)
 8000aa4:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000aa8:	2d01      	cmp	r5, #1
 8000aaa:	b083      	sub	sp, #12
 8000aac:	d907      	bls.n	8000abe <diagnostic_log_array_sub_name+0x1e>
 8000aae:	e9cd 1200 	strd	r1, r2, [sp]
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000ab6:	4a04      	ldr	r2, [pc, #16]	; (8000ac8 <diagnostic_log_array_sub_name+0x28>)
 8000ab8:	4904      	ldr	r1, [pc, #16]	; (8000acc <diagnostic_log_array_sub_name+0x2c>)
 8000aba:	2002      	movs	r0, #2
 8000abc:	47a0      	blx	r4
 8000abe:	b003      	add	sp, #12
 8000ac0:	bd30      	pop	{r4, r5, pc}
 8000ac2:	bf00      	nop
 8000ac4:	200000ac 	.word	0x200000ac
 8000ac8:	08009fc0 	.word	0x08009fc0
 8000acc:	08009fa8 	.word	0x08009fa8

08000ad0 <diagnostic_log_array>:
 8000ad0:	b510      	push	{r4, lr}
 8000ad2:	4a07      	ldr	r2, [pc, #28]	; (8000af0 <diagnostic_log_array+0x20>)
 8000ad4:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000ad8:	2c01      	cmp	r4, #1
 8000ada:	b082      	sub	sp, #8
 8000adc:	d906      	bls.n	8000aec <diagnostic_log_array+0x1c>
 8000ade:	9100      	str	r1, [sp, #0]
 8000ae0:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000ae2:	4904      	ldr	r1, [pc, #16]	; (8000af4 <diagnostic_log_array+0x24>)
 8000ae4:	4a04      	ldr	r2, [pc, #16]	; (8000af8 <diagnostic_log_array+0x28>)
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	2002      	movs	r0, #2
 8000aea:	47a0      	blx	r4
 8000aec:	b002      	add	sp, #8
 8000aee:	bd10      	pop	{r4, pc}
 8000af0:	200000ac 	.word	0x200000ac
 8000af4:	08009fa8 	.word	0x08009fa8
 8000af8:	08009fd8 	.word	0x08009fd8

08000afc <diagnostic_log_set_parameter>:
 8000afc:	b510      	push	{r4, lr}
 8000afe:	4a07      	ldr	r2, [pc, #28]	; (8000b1c <diagnostic_log_set_parameter+0x20>)
 8000b00:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000b04:	2c01      	cmp	r4, #1
 8000b06:	b082      	sub	sp, #8
 8000b08:	d906      	bls.n	8000b18 <diagnostic_log_set_parameter+0x1c>
 8000b0a:	9100      	str	r1, [sp, #0]
 8000b0c:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b0e:	4904      	ldr	r1, [pc, #16]	; (8000b20 <diagnostic_log_set_parameter+0x24>)
 8000b10:	4a04      	ldr	r2, [pc, #16]	; (8000b24 <diagnostic_log_set_parameter+0x28>)
 8000b12:	4603      	mov	r3, r0
 8000b14:	2002      	movs	r0, #2
 8000b16:	47a0      	blx	r4
 8000b18:	b002      	add	sp, #8
 8000b1a:	bd10      	pop	{r4, pc}
 8000b1c:	200000ac 	.word	0x200000ac
 8000b20:	08009fa8 	.word	0x08009fa8
 8000b24:	08009fec 	.word	0x08009fec

08000b28 <diagnostic_log_declare_parameter>:
 8000b28:	b530      	push	{r4, r5, lr}
 8000b2a:	4c08      	ldr	r4, [pc, #32]	; (8000b4c <diagnostic_log_declare_parameter+0x24>)
 8000b2c:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000b30:	2d01      	cmp	r5, #1
 8000b32:	b083      	sub	sp, #12
 8000b34:	d907      	bls.n	8000b46 <diagnostic_log_declare_parameter+0x1e>
 8000b36:	e9cd 1200 	strd	r1, r2, [sp]
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000b3e:	4a04      	ldr	r2, [pc, #16]	; (8000b50 <diagnostic_log_declare_parameter+0x28>)
 8000b40:	4904      	ldr	r1, [pc, #16]	; (8000b54 <diagnostic_log_declare_parameter+0x2c>)
 8000b42:	2002      	movs	r0, #2
 8000b44:	47a0      	blx	r4
 8000b46:	b003      	add	sp, #12
 8000b48:	bd30      	pop	{r4, r5, pc}
 8000b4a:	bf00      	nop
 8000b4c:	200000ac 	.word	0x200000ac
 8000b50:	0800a000 	.word	0x0800a000
 8000b54:	08009fa8 	.word	0x08009fa8

08000b58 <diagnostic_log_set_scope>:
 8000b58:	4a07      	ldr	r2, [pc, #28]	; (8000b78 <diagnostic_log_set_scope+0x20>)
 8000b5a:	f892 1048 	ldrb.w	r1, [r2, #72]	; 0x48
 8000b5e:	2901      	cmp	r1, #1
 8000b60:	d909      	bls.n	8000b76 <diagnostic_log_set_scope+0x1e>
 8000b62:	b410      	push	{r4}
 8000b64:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b66:	4905      	ldr	r1, [pc, #20]	; (8000b7c <diagnostic_log_set_scope+0x24>)
 8000b68:	4a05      	ldr	r2, [pc, #20]	; (8000b80 <diagnostic_log_set_scope+0x28>)
 8000b6a:	4603      	mov	r3, r0
 8000b6c:	46a4      	mov	ip, r4
 8000b6e:	2002      	movs	r0, #2
 8000b70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b74:	4760      	bx	ip
 8000b76:	4770      	bx	lr
 8000b78:	200000ac 	.word	0x200000ac
 8000b7c:	08009fa8 	.word	0x08009fa8
 8000b80:	0800a018 	.word	0x0800a018

08000b84 <acc_utils_transfer_buffer_to_uint32>:
 8000b84:	b17a      	cbz	r2, 8000ba6 <acc_utils_transfer_buffer_to_uint32+0x22>
 8000b86:	b410      	push	{r4}
 8000b88:	3904      	subs	r1, #4
 8000b8a:	eb00 0482 	add.w	r4, r0, r2, lsl #2
 8000b8e:	8802      	ldrh	r2, [r0, #0]
 8000b90:	8843      	ldrh	r3, [r0, #2]
 8000b92:	3004      	adds	r0, #4
 8000b94:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b98:	4284      	cmp	r4, r0
 8000b9a:	f841 3f04 	str.w	r3, [r1, #4]!
 8000b9e:	d1f6      	bne.n	8000b8e <acc_utils_transfer_buffer_to_uint32+0xa>
 8000ba0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ba4:	4770      	bx	lr
 8000ba6:	4770      	bx	lr

08000ba8 <acc_confprogram_copy>:
 8000ba8:	b152      	cbz	r2, 8000bc0 <acc_confprogram_copy+0x18>
 8000baa:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8000bae:	3804      	subs	r0, #4
 8000bb0:	f850 3f04 	ldr.w	r3, [r0, #4]!
 8000bb4:	804b      	strh	r3, [r1, #2]
 8000bb6:	0c1b      	lsrs	r3, r3, #16
 8000bb8:	800b      	strh	r3, [r1, #0]
 8000bba:	3104      	adds	r1, #4
 8000bbc:	4291      	cmp	r1, r2
 8000bbe:	d1f7      	bne.n	8000bb0 <acc_confprogram_copy+0x8>
 8000bc0:	4770      	bx	lr
 8000bc2:	bf00      	nop

08000bc4 <acc_cpd_pll_divisors_calculate>:
 8000bc4:	edd0 7a00 	vldr	s15, [r0]
 8000bc8:	ed9f 6a61 	vldr	s12, [pc, #388]	; 8000d50 <acc_cpd_pll_divisors_calculate+0x18c>
 8000bcc:	eddf 6a61 	vldr	s13, [pc, #388]	; 8000d54 <acc_cpd_pll_divisors_calculate+0x190>
 8000bd0:	ee86 7a27 	vdiv.f32	s14, s12, s15
 8000bd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bd6:	4606      	mov	r6, r0
 8000bd8:	b083      	sub	sp, #12
 8000bda:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8000bde:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000be2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8000be6:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000bea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000bee:	ee17 3a10 	vmov	r3, s14
 8000bf2:	b29c      	uxth	r4, r3
 8000bf4:	dc06      	bgt.n	8000c04 <acc_cpd_pll_divisors_calculate+0x40>
 8000bf6:	ed9f 7a58 	vldr	s14, [pc, #352]	; 8000d58 <acc_cpd_pll_divisors_calculate+0x194>
 8000bfa:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c02:	d571      	bpl.n	8000ce8 <acc_cpd_pll_divisors_calculate+0x124>
 8000c04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c0c:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8000d5c <acc_cpd_pll_divisors_calculate+0x198>
 8000c10:	bf4c      	ite	mi
 8000c12:	4b53      	ldrmi	r3, [pc, #332]	; (8000d60 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000c14:	4b53      	ldrpl	r3, [pc, #332]	; (8000d64 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000c16:	ed9f 6a51 	vldr	s12, [pc, #324]	; 8000d5c <acc_cpd_pll_divisors_calculate+0x198>
 8000c1a:	eddf 6a53 	vldr	s13, [pc, #332]	; 8000d68 <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c1e:	4d53      	ldr	r5, [pc, #332]	; (8000d6c <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000c20:	4953      	ldr	r1, [pc, #332]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c22:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8000c24:	bf48      	it	mi
 8000c26:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c2e:	2000      	movs	r0, #0
 8000c30:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000c34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c3c:	ee17 2a10 	vmov	r2, s14
 8000c40:	bf4c      	ite	mi
 8000c42:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000c46:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000c4a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000c4e:	9200      	str	r2, [sp, #0]
 8000c50:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000c54:	4a47      	ldr	r2, [pc, #284]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000c56:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000c5a:	3c10      	subs	r4, #16
 8000c5c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000c60:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000c64:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000c68:	edcd 7a01 	vstr	s15, [sp, #4]
 8000c6c:	47b8      	blx	r7
 8000c6e:	2cef      	cmp	r4, #239	; 0xef
 8000c70:	d937      	bls.n	8000ce2 <acc_cpd_pll_divisors_calculate+0x11e>
 8000c72:	edd6 7a00 	vldr	s15, [r6]
 8000c76:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8000d5c <acc_cpd_pll_divisors_calculate+0x198>
 8000c7a:	ed9f 6a38 	vldr	s12, [pc, #224]	; 8000d5c <acc_cpd_pll_divisors_calculate+0x198>
 8000c7e:	eddf 6a3a 	vldr	s13, [pc, #232]	; 8000d68 <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c82:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8000c84:	493a      	ldr	r1, [pc, #232]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c8e:	bf48      	it	mi
 8000c90:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c98:	bf4c      	ite	mi
 8000c9a:	4b31      	ldrmi	r3, [pc, #196]	; (8000d60 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000c9c:	4b31      	ldrpl	r3, [pc, #196]	; (8000d64 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000c9e:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000ca2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000caa:	ee17 2a10 	vmov	r2, s14
 8000cae:	bf4c      	ite	mi
 8000cb0:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000cb4:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000cb8:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000cbc:	9200      	str	r2, [sp, #0]
 8000cbe:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000cc2:	4a2c      	ldr	r2, [pc, #176]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000cc4:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000cc8:	2000      	movs	r0, #0
 8000cca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cce:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000cd2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000cd6:	edcd 7a01 	vstr	s15, [sp, #4]
 8000cda:	47a0      	blx	r4
 8000cdc:	2000      	movs	r0, #0
 8000cde:	b003      	add	sp, #12
 8000ce0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ce2:	2000      	movs	r0, #0
 8000ce4:	b003      	add	sp, #12
 8000ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ce8:	f1a4 0310 	sub.w	r3, r4, #16
 8000cec:	b29b      	uxth	r3, r3
 8000cee:	2bef      	cmp	r3, #239	; 0xef
 8000cf0:	d901      	bls.n	8000cf6 <acc_cpd_pll_divisors_calculate+0x132>
 8000cf2:	4d1e      	ldr	r5, [pc, #120]	; (8000d6c <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000cf4:	e7bf      	b.n	8000c76 <acc_cpd_pll_divisors_calculate+0xb2>
 8000cf6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cfa:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8000d78 <acc_cpd_pll_divisors_calculate+0x1b4>
 8000cfe:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8000d7c <acc_cpd_pll_divisors_calculate+0x1b8>
 8000d02:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000d06:	2c3f      	cmp	r4, #63	; 0x3f
 8000d08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000d0c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000d10:	ee17 2a90 	vmov	r2, s15
 8000d14:	810a      	strh	r2, [r1, #8]
 8000d16:	d912      	bls.n	8000d3e <acc_cpd_pll_divisors_calculate+0x17a>
 8000d18:	2cbf      	cmp	r4, #191	; 0xbf
 8000d1a:	f04f 0301 	mov.w	r3, #1
 8000d1e:	bf98      	it	ls
 8000d20:	f1a4 0240 	subls.w	r2, r4, #64	; 0x40
 8000d24:	804b      	strh	r3, [r1, #2]
 8000d26:	bf8c      	ite	hi
 8000d28:	08e2      	lsrhi	r2, r4, #3
 8000d2a:	f3c2 02cf 	ubfxls	r2, r2, #3, #16
 8000d2e:	f004 0307 	and.w	r3, r4, #7
 8000d32:	808a      	strh	r2, [r1, #4]
 8000d34:	80cb      	strh	r3, [r1, #6]
 8000d36:	2001      	movs	r0, #1
 8000d38:	800c      	strh	r4, [r1, #0]
 8000d3a:	b003      	add	sp, #12
 8000d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d3e:	2200      	movs	r2, #0
 8000d40:	2c2f      	cmp	r4, #47	; 0x2f
 8000d42:	bf88      	it	hi
 8000d44:	4623      	movhi	r3, r4
 8000d46:	808b      	strh	r3, [r1, #4]
 8000d48:	804a      	strh	r2, [r1, #2]
 8000d4a:	80ca      	strh	r2, [r1, #6]
 8000d4c:	e7f3      	b.n	8000d36 <acc_cpd_pll_divisors_calculate+0x172>
 8000d4e:	bf00      	nop
 8000d50:	4f1502f9 	.word	0x4f1502f9
 8000d54:	4c989680 	.word	0x4c989680
 8000d58:	4b989680 	.word	0x4b989680
 8000d5c:	350637bd 	.word	0x350637bd
 8000d60:	0800a028 	.word	0x0800a028
 8000d64:	0800a548 	.word	0x0800a548
 8000d68:	49742400 	.word	0x49742400
 8000d6c:	200000ac 	.word	0x200000ac
 8000d70:	0800a058 	.word	0x0800a058
 8000d74:	0800a02c 	.word	0x0800a02c
 8000d78:	b55b38e8 	.word	0xb55b38e8
 8000d7c:	427c0000 	.word	0x427c0000

08000d80 <acc_confprogram_modify_runif>:
 8000d80:	b570      	push	{r4, r5, r6, lr}
 8000d82:	eb00 0442 	add.w	r4, r0, r2, lsl #1
 8000d86:	b082      	sub	sp, #8
 8000d88:	2201      	movs	r2, #1
 8000d8a:	460e      	mov	r6, r1
 8000d8c:	4620      	mov	r0, r4
 8000d8e:	a901      	add	r1, sp, #4
 8000d90:	461d      	mov	r5, r3
 8000d92:	f7ff fef7 	bl	8000b84 <acc_utils_transfer_buffer_to_uint32>
 8000d96:	9a01      	ldr	r2, [sp, #4]
 8000d98:	f022 020f 	bic.w	r2, r2, #15
 8000d9c:	b105      	cbz	r5, 8000da0 <acc_confprogram_modify_runif+0x20>
 8000d9e:	4332      	orrs	r2, r6
 8000da0:	9200      	str	r2, [sp, #0]
 8000da2:	4621      	mov	r1, r4
 8000da4:	2201      	movs	r2, #1
 8000da6:	4668      	mov	r0, sp
 8000da8:	f7ff fefe 	bl	8000ba8 <acc_confprogram_copy>
 8000dac:	b002      	add	sp, #8
 8000dae:	bd70      	pop	{r4, r5, r6, pc}

08000db0 <acc_confprogram_patch_offset>:
 8000db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000db4:	b087      	sub	sp, #28
 8000db6:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8000dba:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 8000dbe:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8000dc2:	887b      	ldrh	r3, [r7, #2]
 8000dc4:	b383      	cbz	r3, 8000e28 <acc_confprogram_patch_offset+0x78>
 8000dc6:	4681      	mov	r9, r0
 8000dc8:	460e      	mov	r6, r1
 8000dca:	eb01 0802 	add.w	r8, r1, r2
 8000dce:	2500      	movs	r5, #0
 8000dd0:	f04f 0b01 	mov.w	fp, #1
 8000dd4:	687a      	ldr	r2, [r7, #4]
 8000dd6:	f852 4025 	ldr.w	r4, [r2, r5, lsl #2]
 8000dda:	0062      	lsls	r2, r4, #1
 8000ddc:	b292      	uxth	r2, r2
 8000dde:	42b2      	cmp	r2, r6
 8000de0:	f3c4 7001 	ubfx	r0, r4, #28, #2
 8000de4:	d31d      	bcc.n	8000e22 <acc_confprogram_patch_offset+0x72>
 8000de6:	4542      	cmp	r2, r8
 8000de8:	da1b      	bge.n	8000e22 <acc_confprogram_patch_offset+0x72>
 8000dea:	2801      	cmp	r0, #1
 8000dec:	d00c      	beq.n	8000e08 <acc_confprogram_patch_offset+0x58>
 8000dee:	2802      	cmp	r0, #2
 8000df0:	d036      	beq.n	8000e60 <acc_confprogram_patch_offset+0xb0>
 8000df2:	b1e8      	cbz	r0, 8000e30 <acc_confprogram_patch_offset+0x80>
 8000df4:	4b34      	ldr	r3, [pc, #208]	; (8000ec8 <acc_confprogram_patch_offset+0x118>)
 8000df6:	4a35      	ldr	r2, [pc, #212]	; (8000ecc <acc_confprogram_patch_offset+0x11c>)
 8000df8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000dfa:	4935      	ldr	r1, [pc, #212]	; (8000ed0 <acc_confprogram_patch_offset+0x120>)
 8000dfc:	2000      	movs	r0, #0
 8000dfe:	4798      	blx	r3
 8000e00:	2000      	movs	r0, #0
 8000e02:	b007      	add	sp, #28
 8000e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e08:	f1ba 0300 	subs.w	r3, sl, #0
 8000e0c:	eba2 0206 	sub.w	r2, r2, r6
 8000e10:	bf18      	it	ne
 8000e12:	2301      	movne	r3, #1
 8000e14:	b292      	uxth	r2, r2
 8000e16:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000e1a:	4648      	mov	r0, r9
 8000e1c:	f7ff ffb0 	bl	8000d80 <acc_confprogram_modify_runif>
 8000e20:	887b      	ldrh	r3, [r7, #2]
 8000e22:	3501      	adds	r5, #1
 8000e24:	42ab      	cmp	r3, r5
 8000e26:	d8d5      	bhi.n	8000dd4 <acc_confprogram_patch_offset+0x24>
 8000e28:	2001      	movs	r0, #1
 8000e2a:	b007      	add	sp, #28
 8000e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e30:	f3c4 5344 	ubfx	r3, r4, #21, #5
 8000e34:	fa0b fc03 	lsl.w	ip, fp, r3
 8000e38:	1b92      	subs	r2, r2, r6
 8000e3a:	45e2      	cmp	sl, ip
 8000e3c:	b291      	uxth	r1, r2
 8000e3e:	d31e      	bcc.n	8000e7e <acc_confprogram_patch_offset+0xce>
 8000e40:	f10c 33ff 	add.w	r3, ip, #4294967295	; 0xffffffff
 8000e44:	4a20      	ldr	r2, [pc, #128]	; (8000ec8 <acc_confprogram_patch_offset+0x118>)
 8000e46:	9301      	str	r3, [sp, #4]
 8000e48:	f8cd a000 	str.w	sl, [sp]
 8000e4c:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000e4e:	4a21      	ldr	r2, [pc, #132]	; (8000ed4 <acc_confprogram_patch_offset+0x124>)
 8000e50:	9002      	str	r0, [sp, #8]
 8000e52:	460b      	mov	r3, r1
 8000e54:	491e      	ldr	r1, [pc, #120]	; (8000ed0 <acc_confprogram_patch_offset+0x120>)
 8000e56:	47a0      	blx	r4
 8000e58:	9802      	ldr	r0, [sp, #8]
 8000e5a:	b007      	add	sp, #28
 8000e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e60:	1b92      	subs	r2, r2, r6
 8000e62:	faba f38a 	clz	r3, sl
 8000e66:	095b      	lsrs	r3, r3, #5
 8000e68:	b292      	uxth	r2, r2
 8000e6a:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000e6e:	4648      	mov	r0, r9
 8000e70:	f7ff ff86 	bl	8000d80 <acc_confprogram_modify_runif>
 8000e74:	887b      	ldrh	r3, [r7, #2]
 8000e76:	3501      	adds	r5, #1
 8000e78:	42ab      	cmp	r3, r5
 8000e7a:	d8ab      	bhi.n	8000dd4 <acc_confprogram_patch_offset+0x24>
 8000e7c:	e7d4      	b.n	8000e28 <acc_confprogram_patch_offset+0x78>
 8000e7e:	eb09 0041 	add.w	r0, r9, r1, lsl #1
 8000e82:	2201      	movs	r2, #1
 8000e84:	a904      	add	r1, sp, #16
 8000e86:	9303      	str	r3, [sp, #12]
 8000e88:	9002      	str	r0, [sp, #8]
 8000e8a:	f7ff fe7b 	bl	8000b84 <acc_utils_transfer_buffer_to_uint32>
 8000e8e:	9b03      	ldr	r3, [sp, #12]
 8000e90:	9802      	ldr	r0, [sp, #8]
 8000e92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000e96:	f1c3 0320 	rsb	r3, r3, #32
 8000e9a:	f3c4 4404 	ubfx	r4, r4, #16, #5
 8000e9e:	fa22 f303 	lsr.w	r3, r2, r3
 8000ea2:	9a04      	ldr	r2, [sp, #16]
 8000ea4:	40a3      	lsls	r3, r4
 8000ea6:	ea22 0203 	bic.w	r2, r2, r3
 8000eaa:	fa0a f404 	lsl.w	r4, sl, r4
 8000eae:	4601      	mov	r1, r0
 8000eb0:	4314      	orrs	r4, r2
 8000eb2:	a805      	add	r0, sp, #20
 8000eb4:	2201      	movs	r2, #1
 8000eb6:	9405      	str	r4, [sp, #20]
 8000eb8:	f7ff fe76 	bl	8000ba8 <acc_confprogram_copy>
 8000ebc:	887b      	ldrh	r3, [r7, #2]
 8000ebe:	3501      	adds	r5, #1
 8000ec0:	42ab      	cmp	r3, r5
 8000ec2:	d887      	bhi.n	8000dd4 <acc_confprogram_patch_offset+0x24>
 8000ec4:	e7b0      	b.n	8000e28 <acc_confprogram_patch_offset+0x78>
 8000ec6:	bf00      	nop
 8000ec8:	200000ac 	.word	0x200000ac
 8000ecc:	0800a0b0 	.word	0x0800a0b0
 8000ed0:	0800a0a4 	.word	0x0800a0a4
 8000ed4:	0800a06c 	.word	0x0800a06c

08000ed8 <acc_alg_least_square_fit>:
 8000ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000edc:	eb02 0c42 	add.w	ip, r2, r2, lsl #1
 8000ee0:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 8000ee4:	b08d      	sub	sp, #52	; 0x34
 8000ee6:	2600      	movs	r6, #0
 8000ee8:	4683      	mov	fp, r0
 8000eea:	4682      	mov	sl, r0
 8000eec:	4680      	mov	r8, r0
 8000eee:	4667      	mov	r7, ip
 8000ef0:	46b1      	mov	r9, r6
 8000ef2:	a803      	add	r0, sp, #12
 8000ef4:	ea4f 0589 	mov.w	r5, r9, lsl #2
 8000ef8:	4686      	mov	lr, r0
 8000efa:	ed9f 7a57 	vldr	s14, [pc, #348]	; 8001058 <acc_alg_least_square_fit+0x180>
 8000efe:	4643      	mov	r3, r8
 8000f00:	b16a      	cbz	r2, 8000f1e <acc_alg_least_square_fit+0x46>
 8000f02:	199c      	adds	r4, r3, r6
 8000f04:	442c      	add	r4, r5
 8000f06:	edd4 7a00 	vldr	s15, [r4]
 8000f0a:	461c      	mov	r4, r3
 8000f0c:	edd4 6a00 	vldr	s13, [r4]
 8000f10:	330c      	adds	r3, #12
 8000f12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000f16:	42bb      	cmp	r3, r7
 8000f18:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000f1c:	d1f1      	bne.n	8000f02 <acc_alg_least_square_fit+0x2a>
 8000f1e:	3504      	adds	r5, #4
 8000f20:	2d0c      	cmp	r5, #12
 8000f22:	ecae 7a01 	vstmia	lr!, {s14}
 8000f26:	d1e8      	bne.n	8000efa <acc_alg_least_square_fit+0x22>
 8000f28:	f109 0901 	add.w	r9, r9, #1
 8000f2c:	f1b9 0f03 	cmp.w	r9, #3
 8000f30:	f100 0010 	add.w	r0, r0, #16
 8000f34:	f108 0804 	add.w	r8, r8, #4
 8000f38:	f1a6 0604 	sub.w	r6, r6, #4
 8000f3c:	f107 0704 	add.w	r7, r7, #4
 8000f40:	d1d8      	bne.n	8000ef4 <acc_alg_least_square_fit+0x1c>
 8000f42:	ed9d 6a04 	vldr	s12, [sp, #16]
 8000f46:	eddd 5a05 	vldr	s11, [sp, #20]
 8000f4a:	eddd 6a08 	vldr	s13, [sp, #32]
 8000f4e:	4668      	mov	r0, sp
 8000f50:	f10b 040c 	add.w	r4, fp, #12
 8000f54:	eddf 7a40 	vldr	s15, [pc, #256]	; 8001058 <acc_alg_least_square_fit+0x180>
 8000f58:	4653      	mov	r3, sl
 8000f5a:	b13a      	cbz	r2, 8000f6c <acc_alg_least_square_fit+0x94>
 8000f5c:	461d      	mov	r5, r3
 8000f5e:	ed95 7a00 	vldr	s14, [r5]
 8000f62:	330c      	adds	r3, #12
 8000f64:	4563      	cmp	r3, ip
 8000f66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000f6a:	d1f7      	bne.n	8000f5c <acc_alg_least_square_fit+0x84>
 8000f6c:	f10a 0a04 	add.w	sl, sl, #4
 8000f70:	45a2      	cmp	sl, r4
 8000f72:	ece0 7a01 	vstmia	r0!, {s15}
 8000f76:	f10c 0c04 	add.w	ip, ip, #4
 8000f7a:	d1eb      	bne.n	8000f54 <acc_alg_least_square_fit+0x7c>
 8000f7c:	eddd 7a03 	vldr	s15, [sp, #12]
 8000f80:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000f84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f88:	d010      	beq.n	8000fac <acc_alg_least_square_fit+0xd4>
 8000f8a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8000f8e:	ee87 4a27 	vdiv.f32	s8, s14, s15
 8000f92:	eddd 7a07 	vldr	s15, [sp, #28]
 8000f96:	ee66 4a04 	vmul.f32	s9, s12, s8
 8000f9a:	ee26 5a24 	vmul.f32	s10, s12, s9
 8000f9e:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8000fa2:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000fa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000faa:	d106      	bne.n	8000fba <acc_alg_least_square_fit+0xe2>
 8000fac:	2000      	movs	r0, #0
 8000fae:	2300      	movs	r3, #0
 8000fb0:	f8cb 3000 	str.w	r3, [fp]
 8000fb4:	b00d      	add	sp, #52	; 0x34
 8000fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000fba:	eec7 2a27 	vdiv.f32	s5, s14, s15
 8000fbe:	ee65 3a84 	vmul.f32	s7, s11, s8
 8000fc2:	ee25 7aa4 	vmul.f32	s14, s11, s9
 8000fc6:	ee66 7a23 	vmul.f32	s15, s12, s7
 8000fca:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 8000fce:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8000fd2:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8000fd6:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8000fda:	ee65 6aa3 	vmul.f32	s13, s11, s7
 8000fde:	ee75 6a66 	vsub.f32	s13, s10, s13
 8000fe2:	ee27 5a27 	vmul.f32	s10, s14, s15
 8000fe6:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8000fea:	eef5 6a40 	vcmp.f32	s13, #0.0
 8000fee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff2:	d0db      	beq.n	8000fac <acc_alg_least_square_fit+0xd4>
 8000ff4:	ed9d 5a00 	vldr	s10, [sp]
 8000ff8:	ed9d 3a01 	vldr	s6, [sp, #4]
 8000ffc:	ed9d 2a02 	vldr	s4, [sp, #8]
 8001000:	ee64 4a85 	vmul.f32	s9, s9, s10
 8001004:	ee63 3a85 	vmul.f32	s7, s7, s10
 8001008:	ee73 4a64 	vsub.f32	s9, s6, s9
 800100c:	2001      	movs	r0, #1
 800100e:	ee67 7aa4 	vmul.f32	s15, s15, s9
 8001012:	2300      	movs	r3, #0
 8001014:	ee72 7a67 	vsub.f32	s15, s4, s15
 8001018:	ee77 3ae3 	vsub.f32	s7, s15, s7
 800101c:	eec3 7aa6 	vdiv.f32	s15, s7, s13
 8001020:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001024:	edc1 7a02 	vstr	s15, [r1, #8]
 8001028:	ee34 7ac7 	vsub.f32	s14, s9, s14
 800102c:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001030:	ee67 7a22 	vmul.f32	s15, s14, s5
 8001034:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001038:	edc1 7a01 	vstr	s15, [r1, #4]
 800103c:	ee35 6a46 	vsub.f32	s12, s10, s12
 8001040:	ee76 5a65 	vsub.f32	s11, s12, s11
 8001044:	ee25 4a84 	vmul.f32	s8, s11, s8
 8001048:	ed81 4a00 	vstr	s8, [r1]
 800104c:	f8cb 3000 	str.w	r3, [fp]
 8001050:	b00d      	add	sp, #52	; 0x34
 8001052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001056:	bf00      	nop
 8001058:	00000000 	.word	0x00000000

0800105c <acc_alg_atan2_q16>:
 800105c:	2800      	cmp	r0, #0
 800105e:	bfb8      	it	lt
 8001060:	4240      	neglt	r0, r0
 8001062:	b4f0      	push	{r4, r5, r6, r7}
 8001064:	bfba      	itte	lt
 8001066:	b200      	sxthlt	r0, r0
 8001068:	2401      	movlt	r4, #1
 800106a:	2400      	movge	r4, #0
 800106c:	2900      	cmp	r1, #0
 800106e:	db3f      	blt.n	80010f0 <acc_alg_atan2_q16+0x94>
 8001070:	4288      	cmp	r0, r1
 8001072:	db38      	blt.n	80010e6 <acc_alg_atan2_q16+0x8a>
 8001074:	2200      	movs	r2, #0
 8001076:	4603      	mov	r3, r0
 8001078:	b368      	cbz	r0, 80010d6 <acc_alg_atan2_q16+0x7a>
 800107a:	4608      	mov	r0, r1
 800107c:	2600      	movs	r6, #0
 800107e:	f643 4528 	movw	r5, #15400	; 0x3c28
 8001082:	0400      	lsls	r0, r0, #16
 8001084:	fbb0 f1f3 	udiv	r1, r0, r3
 8001088:	42a9      	cmp	r1, r5
 800108a:	d948      	bls.n	800111e <acc_alg_atan2_q16+0xc2>
 800108c:	f246 33d6 	movw	r3, #25558	; 0x63d6
 8001090:	4299      	cmp	r1, r3
 8001092:	d936      	bls.n	8001102 <acc_alg_atan2_q16+0xa6>
 8001094:	f648 0372 	movw	r3, #34930	; 0x8872
 8001098:	4299      	cmp	r1, r3
 800109a:	d942      	bls.n	8001122 <acc_alg_atan2_q16+0xc6>
 800109c:	f64a 4349 	movw	r3, #44105	; 0xac49
 80010a0:	4299      	cmp	r1, r3
 80010a2:	d940      	bls.n	8001126 <acc_alg_atan2_q16+0xca>
 80010a4:	f24d 03a3 	movw	r3, #53411	; 0xd0a3
 80010a8:	4299      	cmp	r1, r3
 80010aa:	d93e      	bls.n	800112a <acc_alg_atan2_q16+0xce>
 80010ac:	f24f 734b 	movw	r3, #63307	; 0xf74b
 80010b0:	4299      	cmp	r1, r3
 80010b2:	bf98      	it	ls
 80010b4:	2505      	movls	r5, #5
 80010b6:	d925      	bls.n	8001104 <acc_alg_atan2_q16+0xa8>
 80010b8:	f24f 754c 	movw	r5, #63308	; 0xf74c
 80010bc:	f248 2333 	movw	r3, #33331	; 0x8233
 80010c0:	f24c 40a3 	movw	r0, #50339	; 0xc4a3
 80010c4:	1b49      	subs	r1, r1, r5
 80010c6:	fb03 f101 	mul.w	r1, r3, r1
 80010ca:	eb00 4011 	add.w	r0, r0, r1, lsr #16
 80010ce:	b116      	cbz	r6, 80010d6 <acc_alg_atan2_q16+0x7a>
 80010d0:	f5c0 30c9 	rsb	r0, r0, #102912	; 0x19200
 80010d4:	301f      	adds	r0, #31
 80010d6:	b114      	cbz	r4, 80010de <acc_alg_atan2_q16+0x82>
 80010d8:	f5c0 3049 	rsb	r0, r0, #205824	; 0x32400
 80010dc:	303f      	adds	r0, #63	; 0x3f
 80010de:	b102      	cbz	r2, 80010e2 <acc_alg_atan2_q16+0x86>
 80010e0:	4240      	negs	r0, r0
 80010e2:	bcf0      	pop	{r4, r5, r6, r7}
 80010e4:	4770      	bx	lr
 80010e6:	460b      	mov	r3, r1
 80010e8:	b9b1      	cbnz	r1, 8001118 <acc_alg_atan2_q16+0xbc>
 80010ea:	4811      	ldr	r0, [pc, #68]	; (8001130 <acc_alg_atan2_q16+0xd4>)
 80010ec:	460a      	mov	r2, r1
 80010ee:	e7f2      	b.n	80010d6 <acc_alg_atan2_q16+0x7a>
 80010f0:	4249      	negs	r1, r1
 80010f2:	b209      	sxth	r1, r1
 80010f4:	4288      	cmp	r0, r1
 80010f6:	f04f 0201 	mov.w	r2, #1
 80010fa:	dabc      	bge.n	8001076 <acc_alg_atan2_q16+0x1a>
 80010fc:	460b      	mov	r3, r1
 80010fe:	4616      	mov	r6, r2
 8001100:	e7bd      	b.n	800107e <acc_alg_atan2_q16+0x22>
 8001102:	2501      	movs	r5, #1
 8001104:	4f0b      	ldr	r7, [pc, #44]	; (8001134 <acc_alg_atan2_q16+0xd8>)
 8001106:	eb07 00c5 	add.w	r0, r7, r5, lsl #3
 800110a:	eb07 0385 	add.w	r3, r7, r5, lsl #2
 800110e:	6840      	ldr	r0, [r0, #4]
 8001110:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001112:	f857 5035 	ldr.w	r5, [r7, r5, lsl #3]
 8001116:	e7d5      	b.n	80010c4 <acc_alg_atan2_q16+0x68>
 8001118:	2200      	movs	r2, #0
 800111a:	2601      	movs	r6, #1
 800111c:	e7af      	b.n	800107e <acc_alg_atan2_q16+0x22>
 800111e:	2500      	movs	r5, #0
 8001120:	e7f0      	b.n	8001104 <acc_alg_atan2_q16+0xa8>
 8001122:	2502      	movs	r5, #2
 8001124:	e7ee      	b.n	8001104 <acc_alg_atan2_q16+0xa8>
 8001126:	2503      	movs	r5, #3
 8001128:	e7ec      	b.n	8001104 <acc_alg_atan2_q16+0xa8>
 800112a:	2504      	movs	r5, #4
 800112c:	e7ea      	b.n	8001104 <acc_alg_atan2_q16+0xa8>
 800112e:	bf00      	nop
 8001130:	0001921f 	.word	0x0001921f
 8001134:	080076b0 	.word	0x080076b0

08001138 <acc_rss_integration_mem_free>:
 8001138:	b110      	cbz	r0, 8001140 <acc_rss_integration_mem_free+0x8>
 800113a:	4b02      	ldr	r3, [pc, #8]	; (8001144 <acc_rss_integration_mem_free+0xc>)
 800113c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800113e:	4718      	bx	r3
 8001140:	4770      	bx	lr
 8001142:	bf00      	nop
 8001144:	200000ac 	.word	0x200000ac

08001148 <acc_rss_integration_mem_alloc_debug>:
 8001148:	b538      	push	{r3, r4, r5, lr}
 800114a:	4d06      	ldr	r5, [pc, #24]	; (8001164 <acc_rss_integration_mem_alloc_debug+0x1c>)
 800114c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800114e:	4798      	blx	r3
 8001150:	4604      	mov	r4, r0
 8001152:	b108      	cbz	r0, 8001158 <acc_rss_integration_mem_alloc_debug+0x10>
 8001154:	4620      	mov	r0, r4
 8001156:	bd38      	pop	{r3, r4, r5, pc}
 8001158:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800115a:	4a03      	ldr	r2, [pc, #12]	; (8001168 <acc_rss_integration_mem_alloc_debug+0x20>)
 800115c:	4903      	ldr	r1, [pc, #12]	; (800116c <acc_rss_integration_mem_alloc_debug+0x24>)
 800115e:	4798      	blx	r3
 8001160:	4620      	mov	r0, r4
 8001162:	bd38      	pop	{r3, r4, r5, pc}
 8001164:	200000ac 	.word	0x200000ac
 8001168:	0800a0d4 	.word	0x0800a0d4
 800116c:	0800a0e4 	.word	0x0800a0e4

08001170 <acc_rss_integration_sensor_device_transfer>:
 8001170:	f8df c064 	ldr.w	ip, [pc, #100]	; 80011d8 <acc_rss_integration_sensor_device_transfer+0x68>
 8001174:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001178:	f8dc 5044 	ldr.w	r5, [ip, #68]	; 0x44
 800117c:	b11d      	cbz	r5, 8001186 <acc_rss_integration_sensor_device_transfer+0x16>
 800117e:	462b      	mov	r3, r5
 8001180:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001184:	4718      	bx	r3
 8001186:	b312      	cbz	r2, 80011ce <acc_rss_integration_sensor_device_transfer+0x5e>
 8001188:	0052      	lsls	r2, r2, #1
 800118a:	f1a1 0802 	sub.w	r8, r1, #2
 800118e:	f1a2 0902 	sub.w	r9, r2, #2
 8001192:	460e      	mov	r6, r1
 8001194:	469a      	mov	sl, r3
 8001196:	4607      	mov	r7, r0
 8001198:	4449      	add	r1, r9
 800119a:	4644      	mov	r4, r8
 800119c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 80011a0:	ba6d      	rev16	r5, r5
 80011a2:	428c      	cmp	r4, r1
 80011a4:	8025      	strh	r5, [r4, #0]
 80011a6:	d1f9      	bne.n	800119c <acc_rss_integration_sensor_device_transfer+0x2c>
 80011a8:	f8dc 403c 	ldr.w	r4, [ip, #60]	; 0x3c
 80011ac:	4638      	mov	r0, r7
 80011ae:	4631      	mov	r1, r6
 80011b0:	47a0      	blx	r4
 80011b2:	f1ba 0f00 	cmp.w	sl, #0
 80011b6:	d101      	bne.n	80011bc <acc_rss_integration_sensor_device_transfer+0x4c>
 80011b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011bc:	444e      	add	r6, r9
 80011be:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 80011c2:	ba5b      	rev16	r3, r3
 80011c4:	45b0      	cmp	r8, r6
 80011c6:	f8a8 3000 	strh.w	r3, [r8]
 80011ca:	d1f8      	bne.n	80011be <acc_rss_integration_sensor_device_transfer+0x4e>
 80011cc:	e7f4      	b.n	80011b8 <acc_rss_integration_sensor_device_transfer+0x48>
 80011ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80011d2:	f8dc 303c 	ldr.w	r3, [ip, #60]	; 0x3c
 80011d6:	4718      	bx	r3
 80011d8:	200000ac 	.word	0x200000ac

080011dc <acc_sensor_a121_conf_write_instr>:
 80011dc:	b570      	push	{r4, r5, r6, lr}
 80011de:	2501      	movs	r5, #1
 80011e0:	b084      	sub	sp, #16
 80011e2:	f441 43a0 	orr.w	r3, r1, #20480	; 0x5000
 80011e6:	4604      	mov	r4, r0
 80011e8:	4616      	mov	r6, r2
 80011ea:	a903      	add	r1, sp, #12
 80011ec:	462a      	mov	r2, r5
 80011ee:	a801      	add	r0, sp, #4
 80011f0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80011f4:	9601      	str	r6, [sp, #4]
 80011f6:	f8ad 500a 	strh.w	r5, [sp, #10]
 80011fa:	f7ff fcd5 	bl	8000ba8 <acc_confprogram_copy>
 80011fe:	4620      	mov	r0, r4
 8001200:	a902      	add	r1, sp, #8
 8001202:	2300      	movs	r3, #0
 8001204:	2204      	movs	r2, #4
 8001206:	f7ff ffb3 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 800120a:	b004      	add	sp, #16
 800120c:	bd70      	pop	{r4, r5, r6, pc}
 800120e:	bf00      	nop

08001210 <acc_sensor_a121_buffer_write.constprop.0>:
 8001210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001214:	4c1d      	ldr	r4, [pc, #116]	; (800128c <acc_sensor_a121_buffer_write.constprop.0+0x7c>)
 8001216:	8e24      	ldrh	r4, [r4, #48]	; 0x30
 8001218:	b085      	sub	sp, #20
 800121a:	3c06      	subs	r4, #6
 800121c:	9202      	str	r2, [sp, #8]
 800121e:	08a2      	lsrs	r2, r4, #2
 8001220:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 8001224:	9201      	str	r2, [sp, #4]
 8001226:	9303      	str	r3, [sp, #12]
 8001228:	b363      	cbz	r3, 8001284 <acc_sensor_a121_buffer_write.constprop.0+0x74>
 800122a:	4682      	mov	sl, r0
 800122c:	460f      	mov	r7, r1
 800122e:	f101 0b06 	add.w	fp, r1, #6
 8001232:	4699      	mov	r9, r3
 8001234:	2500      	movs	r5, #0
 8001236:	9b01      	ldr	r3, [sp, #4]
 8001238:	807d      	strh	r5, [r7, #2]
 800123a:	454b      	cmp	r3, r9
 800123c:	bf28      	it	cs
 800123e:	464b      	movcs	r3, r9
 8001240:	005c      	lsls	r4, r3, #1
 8001242:	461e      	mov	r6, r3
 8001244:	1e63      	subs	r3, r4, #1
 8001246:	80bb      	strh	r3, [r7, #4]
 8001248:	9b02      	ldr	r3, [sp, #8]
 800124a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800124e:	eb03 0085 	add.w	r0, r3, r5, lsl #2
 8001252:	803a      	strh	r2, [r7, #0]
 8001254:	3403      	adds	r4, #3
 8001256:	4632      	mov	r2, r6
 8001258:	4659      	mov	r1, fp
 800125a:	f7ff fca5 	bl	8000ba8 <acc_confprogram_copy>
 800125e:	4622      	mov	r2, r4
 8001260:	2300      	movs	r3, #0
 8001262:	4639      	mov	r1, r7
 8001264:	4650      	mov	r0, sl
 8001266:	f7ff ff83 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 800126a:	e9d8 2300 	ldrd	r2, r3, [r8]
 800126e:	3301      	adds	r3, #1
 8001270:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8001274:	e9c8 4300 	strd	r4, r3, [r8]
 8001278:	9b03      	ldr	r3, [sp, #12]
 800127a:	4435      	add	r5, r6
 800127c:	429d      	cmp	r5, r3
 800127e:	eba9 0906 	sub.w	r9, r9, r6
 8001282:	d3d8      	bcc.n	8001236 <acc_sensor_a121_buffer_write.constprop.0+0x26>
 8001284:	b005      	add	sp, #20
 8001286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800128a:	bf00      	nop
 800128c:	200000ac 	.word	0x200000ac

08001290 <acc_sensor_reg_field_write>:
 8001290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001294:	b082      	sub	sp, #8
 8001296:	461d      	mov	r5, r3
 8001298:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800129c:	f8bd 4028 	ldrh.w	r4, [sp, #40]	; 0x28
 80012a0:	f8ad 3000 	strh.w	r3, [sp]
 80012a4:	2700      	movs	r7, #0
 80012a6:	468a      	mov	sl, r1
 80012a8:	4691      	mov	r9, r2
 80012aa:	4669      	mov	r1, sp
 80012ac:	2301      	movs	r3, #1
 80012ae:	2203      	movs	r2, #3
 80012b0:	4680      	mov	r8, r0
 80012b2:	f8ad 7002 	strh.w	r7, [sp, #2]
 80012b6:	f8ad 7004 	strh.w	r7, [sp, #4]
 80012ba:	f7ff ff59 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 80012be:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 80012c2:	fa04 f10a 	lsl.w	r1, r4, sl
 80012c6:	4071      	eors	r1, r6
 80012c8:	ea01 0409 	and.w	r4, r1, r9
 80012cc:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
 80012d0:	4640      	mov	r0, r8
 80012d2:	463b      	mov	r3, r7
 80012d4:	4669      	mov	r1, sp
 80012d6:	4074      	eors	r4, r6
 80012d8:	2202      	movs	r2, #2
 80012da:	f8ad 5000 	strh.w	r5, [sp]
 80012de:	f8ad 4002 	strh.w	r4, [sp, #2]
 80012e2:	f7ff ff45 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 80012e6:	b002      	add	sp, #8
 80012e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080012ec <acc_sensor_protocol_a121_init_interrupts>:
 80012ec:	b530      	push	{r4, r5, lr}
 80012ee:	b083      	sub	sp, #12
 80012f0:	2500      	movs	r5, #0
 80012f2:	4629      	mov	r1, r5
 80012f4:	9500      	str	r5, [sp, #0]
 80012f6:	237b      	movs	r3, #123	; 0x7b
 80012f8:	22ff      	movs	r2, #255	; 0xff
 80012fa:	4604      	mov	r4, r0
 80012fc:	f7ff ffc8 	bl	8001290 <acc_sensor_reg_field_write>
 8001300:	2101      	movs	r1, #1
 8001302:	4620      	mov	r0, r4
 8001304:	9100      	str	r1, [sp, #0]
 8001306:	238b      	movs	r3, #139	; 0x8b
 8001308:	2202      	movs	r2, #2
 800130a:	f7ff ffc1 	bl	8001290 <acc_sensor_reg_field_write>
 800130e:	9500      	str	r5, [sp, #0]
 8001310:	4620      	mov	r0, r4
 8001312:	238b      	movs	r3, #139	; 0x8b
 8001314:	2280      	movs	r2, #128	; 0x80
 8001316:	2107      	movs	r1, #7
 8001318:	f7ff ffba 	bl	8001290 <acc_sensor_reg_field_write>
 800131c:	b003      	add	sp, #12
 800131e:	bd30      	pop	{r4, r5, pc}

08001320 <acc_sensor_reg_write>:
 8001320:	b530      	push	{r4, r5, lr}
 8001322:	b083      	sub	sp, #12
 8001324:	f441 5480 	orr.w	r4, r1, #4096	; 0x1000
 8001328:	4615      	mov	r5, r2
 800132a:	2300      	movs	r3, #0
 800132c:	2202      	movs	r2, #2
 800132e:	a901      	add	r1, sp, #4
 8001330:	f8ad 4004 	strh.w	r4, [sp, #4]
 8001334:	f8ad 5006 	strh.w	r5, [sp, #6]
 8001338:	f7ff ff1a 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 800133c:	b003      	add	sp, #12
 800133e:	bd30      	pop	{r4, r5, pc}

08001340 <acc_sensor_reg_read>:
 8001340:	b530      	push	{r4, r5, lr}
 8001342:	b083      	sub	sp, #12
 8001344:	f441 5140 	orr.w	r1, r1, #12288	; 0x3000
 8001348:	4614      	mov	r4, r2
 800134a:	2500      	movs	r5, #0
 800134c:	f8ad 1000 	strh.w	r1, [sp]
 8001350:	2301      	movs	r3, #1
 8001352:	2203      	movs	r2, #3
 8001354:	4669      	mov	r1, sp
 8001356:	f8ad 5002 	strh.w	r5, [sp, #2]
 800135a:	f8ad 5004 	strh.w	r5, [sp, #4]
 800135e:	f7ff ff07 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 8001362:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001366:	8023      	strh	r3, [r4, #0]
 8001368:	b003      	add	sp, #12
 800136a:	bd30      	pop	{r4, r5, pc}

0800136c <acc_sensor_protocol_a121_run_program>:
 800136c:	b570      	push	{r4, r5, r6, lr}
 800136e:	b082      	sub	sp, #8
 8001370:	f10d 0206 	add.w	r2, sp, #6
 8001374:	460e      	mov	r6, r1
 8001376:	2400      	movs	r4, #0
 8001378:	211c      	movs	r1, #28
 800137a:	4605      	mov	r5, r0
 800137c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001380:	f7ff ffde 	bl	8001340 <acc_sensor_reg_read>
 8001384:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001388:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800138c:	d10c      	bne.n	80013a8 <acc_sensor_protocol_a121_run_program+0x3c>
 800138e:	4628      	mov	r0, r5
 8001390:	211b      	movs	r1, #27
 8001392:	f7ff ffc5 	bl	8001320 <acc_sensor_reg_write>
 8001396:	4628      	mov	r0, r5
 8001398:	f446 6200 	orr.w	r2, r6, #2048	; 0x800
 800139c:	211b      	movs	r1, #27
 800139e:	f7ff ffbf 	bl	8001320 <acc_sensor_reg_write>
 80013a2:	2001      	movs	r0, #1
 80013a4:	b002      	add	sp, #8
 80013a6:	bd70      	pop	{r4, r5, r6, pc}
 80013a8:	4b04      	ldr	r3, [pc, #16]	; (80013bc <acc_sensor_protocol_a121_run_program+0x50>)
 80013aa:	4a05      	ldr	r2, [pc, #20]	; (80013c0 <acc_sensor_protocol_a121_run_program+0x54>)
 80013ac:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 80013ae:	4905      	ldr	r1, [pc, #20]	; (80013c4 <acc_sensor_protocol_a121_run_program+0x58>)
 80013b0:	4620      	mov	r0, r4
 80013b2:	462b      	mov	r3, r5
 80013b4:	47b0      	blx	r6
 80013b6:	4620      	mov	r0, r4
 80013b8:	b002      	add	sp, #8
 80013ba:	bd70      	pop	{r4, r5, r6, pc}
 80013bc:	200000ac 	.word	0x200000ac
 80013c0:	0800a0f4 	.word	0x0800a0f4
 80013c4:	0800a124 	.word	0x0800a124

080013c8 <acc_sensor_protocol_a121_prepare_load>:
 80013c8:	b570      	push	{r4, r5, r6, lr}
 80013ca:	b082      	sub	sp, #8
 80013cc:	f10d 0206 	add.w	r2, sp, #6
 80013d0:	2400      	movs	r4, #0
 80013d2:	2137      	movs	r1, #55	; 0x37
 80013d4:	4605      	mov	r5, r0
 80013d6:	f8ad 4006 	strh.w	r4, [sp, #6]
 80013da:	f7ff ffb1 	bl	8001340 <acc_sensor_reg_read>
 80013de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80013e2:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 80013e6:	b9b3      	cbnz	r3, 8001416 <acc_sensor_protocol_a121_prepare_load+0x4e>
 80013e8:	f10d 0206 	add.w	r2, sp, #6
 80013ec:	2400      	movs	r4, #0
 80013ee:	211c      	movs	r1, #28
 80013f0:	4628      	mov	r0, r5
 80013f2:	f8ad 4006 	strh.w	r4, [sp, #6]
 80013f6:	f7ff ffa3 	bl	8001340 <acc_sensor_reg_read>
 80013fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80013fe:	051b      	lsls	r3, r3, #20
 8001400:	d515      	bpl.n	800142e <acc_sensor_protocol_a121_prepare_load+0x66>
 8001402:	4b0e      	ldr	r3, [pc, #56]	; (800143c <acc_sensor_protocol_a121_prepare_load+0x74>)
 8001404:	4a0e      	ldr	r2, [pc, #56]	; (8001440 <acc_sensor_protocol_a121_prepare_load+0x78>)
 8001406:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8001408:	490e      	ldr	r1, [pc, #56]	; (8001444 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 800140a:	4620      	mov	r0, r4
 800140c:	462b      	mov	r3, r5
 800140e:	47b0      	blx	r6
 8001410:	4620      	mov	r0, r4
 8001412:	b002      	add	sp, #8
 8001414:	bd70      	pop	{r4, r5, r6, pc}
 8001416:	4b09      	ldr	r3, [pc, #36]	; (800143c <acc_sensor_protocol_a121_prepare_load+0x74>)
 8001418:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 800141c:	2a00      	cmp	r2, #0
 800141e:	d0e3      	beq.n	80013e8 <acc_sensor_protocol_a121_prepare_load+0x20>
 8001420:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8001422:	4a09      	ldr	r2, [pc, #36]	; (8001448 <acc_sensor_protocol_a121_prepare_load+0x80>)
 8001424:	4907      	ldr	r1, [pc, #28]	; (8001444 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 8001426:	462b      	mov	r3, r5
 8001428:	2001      	movs	r0, #1
 800142a:	47a0      	blx	r4
 800142c:	e7dc      	b.n	80013e8 <acc_sensor_protocol_a121_prepare_load+0x20>
 800142e:	4628      	mov	r0, r5
 8001430:	f7ff ff5c 	bl	80012ec <acc_sensor_protocol_a121_init_interrupts>
 8001434:	2001      	movs	r0, #1
 8001436:	b002      	add	sp, #8
 8001438:	bd70      	pop	{r4, r5, r6, pc}
 800143a:	bf00      	nop
 800143c:	200000ac 	.word	0x200000ac
 8001440:	0800a168 	.word	0x0800a168
 8001444:	0800a124 	.word	0x0800a124
 8001448:	0800a13c 	.word	0x0800a13c

0800144c <acc_sensor_a121_load_confmem>:
 800144c:	b4f0      	push	{r4, r5, r6, r7}
 800144e:	4d0c      	ldr	r5, [pc, #48]	; (8001480 <acc_sensor_a121_load_confmem+0x34>)
 8001450:	8e2f      	ldrh	r7, [r5, #48]	; 0x30
 8001452:	1c9e      	adds	r6, r3, #2
 8001454:	ebb7 0f46 	cmp.w	r7, r6, lsl #1
 8001458:	d205      	bcs.n	8001466 <acc_sensor_a121_load_confmem+0x1a>
 800145a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800145c:	4a09      	ldr	r2, [pc, #36]	; (8001484 <acc_sensor_a121_load_confmem+0x38>)
 800145e:	490a      	ldr	r1, [pc, #40]	; (8001488 <acc_sensor_a121_load_confmem+0x3c>)
 8001460:	bcf0      	pop	{r4, r5, r6, r7}
 8001462:	2000      	movs	r0, #0
 8001464:	4718      	bx	r3
 8001466:	4614      	mov	r4, r2
 8001468:	f441 41a0 	orr.w	r1, r1, #20480	; 0x5000
 800146c:	3b01      	subs	r3, #1
 800146e:	8011      	strh	r1, [r2, #0]
 8001470:	8053      	strh	r3, [r2, #2]
 8001472:	4621      	mov	r1, r4
 8001474:	f026 4200 	bic.w	r2, r6, #2147483648	; 0x80000000
 8001478:	2300      	movs	r3, #0
 800147a:	bcf0      	pop	{r4, r5, r6, r7}
 800147c:	e678      	b.n	8001170 <acc_rss_integration_sensor_device_transfer>
 800147e:	bf00      	nop
 8001480:	200000ac 	.word	0x200000ac
 8001484:	0800a198 	.word	0x0800a198
 8001488:	0800a1b8 	.word	0x0800a1b8

0800148c <acc_cpd_assembly_test_load_program>:
 800148c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001490:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 8001640 <acc_cpd_assembly_test_load_program+0x1b4>
 8001494:	b091      	sub	sp, #68	; 0x44
 8001496:	f8ba 7030 	ldrh.w	r7, [sl, #48]	; 0x30
 800149a:	9104      	str	r1, [sp, #16]
 800149c:	4615      	mov	r5, r2
 800149e:	461e      	mov	r6, r3
 80014a0:	9007      	str	r0, [sp, #28]
 80014a2:	f7ff ff91 	bl	80013c8 <acc_sensor_protocol_a121_prepare_load>
 80014a6:	4604      	mov	r4, r0
 80014a8:	b918      	cbnz	r0, 80014b2 <acc_cpd_assembly_test_load_program+0x26>
 80014aa:	4620      	mov	r0, r4
 80014ac:	b011      	add	sp, #68	; 0x44
 80014ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014b2:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 80014b6:	2b03      	cmp	r3, #3
 80014b8:	d905      	bls.n	80014c6 <acc_cpd_assembly_test_load_program+0x3a>
 80014ba:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 80014be:	4a5b      	ldr	r2, [pc, #364]	; (800162c <acc_cpd_assembly_test_load_program+0x1a0>)
 80014c0:	495b      	ldr	r1, [pc, #364]	; (8001630 <acc_cpd_assembly_test_load_program+0x1a4>)
 80014c2:	2004      	movs	r0, #4
 80014c4:	4798      	blx	r3
 80014c6:	edd6 7a00 	vldr	s15, [r6]
 80014ca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80014ce:	a90d      	add	r1, sp, #52	; 0x34
 80014d0:	a80c      	add	r0, sp, #48	; 0x30
 80014d2:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
 80014d6:	f7ff fb75 	bl	8000bc4 <acc_cpd_pll_divisors_calculate>
 80014da:	4604      	mov	r4, r0
 80014dc:	2800      	cmp	r0, #0
 80014de:	d0e4      	beq.n	80014aa <acc_cpd_assembly_test_load_program+0x1e>
 80014e0:	6833      	ldr	r3, [r6, #0]
 80014e2:	4a54      	ldr	r2, [pc, #336]	; (8001634 <acc_cpd_assembly_test_load_program+0x1a8>)
 80014e4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80014e8:	9108      	str	r1, [sp, #32]
 80014ea:	fba2 2303 	umull	r2, r3, r2, r3
 80014ee:	0c9b      	lsrs	r3, r3, #18
 80014f0:	086d      	lsrs	r5, r5, #1
 80014f2:	087f      	lsrs	r7, r7, #1
 80014f4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80014f8:	42bd      	cmp	r5, r7
 80014fa:	9305      	str	r3, [sp, #20]
 80014fc:	4b4e      	ldr	r3, [pc, #312]	; (8001638 <acc_cpd_assembly_test_load_program+0x1ac>)
 80014fe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8001502:	9109      	str	r1, [sp, #36]	; 0x24
 8001504:	bf28      	it	cs
 8001506:	463d      	movcs	r5, r7
 8001508:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 800150c:	910a      	str	r1, [sp, #40]	; 0x28
 800150e:	3d02      	subs	r5, #2
 8001510:	f603 3834 	addw	r8, r3, #2868	; 0xb34
 8001514:	9b04      	ldr	r3, [sp, #16]
 8001516:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 800151a:	910b      	str	r1, [sp, #44]	; 0x2c
 800151c:	f025 0201 	bic.w	r2, r5, #1
 8001520:	f240 579a 	movw	r7, #1434	; 0x59a
 8001524:	9206      	str	r2, [sp, #24]
 8001526:	fa1f fb82 	uxth.w	fp, r2
 800152a:	1d1e      	adds	r6, r3, #4
 800152c:	2500      	movs	r5, #0
 800152e:	9703      	str	r7, [sp, #12]
 8001530:	9b06      	ldr	r3, [sp, #24]
 8001532:	9a03      	ldr	r2, [sp, #12]
 8001534:	f5c5 69b3 	rsb	r9, r5, #1432	; 0x598
 8001538:	f109 0902 	add.w	r9, r9, #2
 800153c:	454b      	cmp	r3, r9
 800153e:	bf98      	it	ls
 8001540:	465a      	movls	r2, fp
 8001542:	4b3d      	ldr	r3, [pc, #244]	; (8001638 <acc_cpd_assembly_test_load_program+0x1ac>)
 8001544:	086c      	lsrs	r4, r5, #1
 8001546:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800154a:	4691      	mov	r9, r2
 800154c:	4631      	mov	r1, r6
 800154e:	0852      	lsrs	r2, r2, #1
 8001550:	f7ff fb2a 	bl	8000ba8 <acc_confprogram_copy>
 8001554:	9b05      	ldr	r3, [sp, #20]
 8001556:	9301      	str	r3, [sp, #4]
 8001558:	231a      	movs	r3, #26
 800155a:	9300      	str	r3, [sp, #0]
 800155c:	464a      	mov	r2, r9
 800155e:	4643      	mov	r3, r8
 8001560:	4629      	mov	r1, r5
 8001562:	4630      	mov	r0, r6
 8001564:	f7ff fc24 	bl	8000db0 <acc_confprogram_patch_offset>
 8001568:	b958      	cbnz	r0, 8001582 <acc_cpd_assembly_test_load_program+0xf6>
 800156a:	2400      	movs	r4, #0
 800156c:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001570:	2b03      	cmp	r3, #3
 8001572:	d99a      	bls.n	80014aa <acc_cpd_assembly_test_load_program+0x1e>
 8001574:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8001578:	4a30      	ldr	r2, [pc, #192]	; (800163c <acc_cpd_assembly_test_load_program+0x1b0>)
 800157a:	492d      	ldr	r1, [pc, #180]	; (8001630 <acc_cpd_assembly_test_load_program+0x1a4>)
 800157c:	2004      	movs	r0, #4
 800157e:	4798      	blx	r3
 8001580:	e793      	b.n	80014aa <acc_cpd_assembly_test_load_program+0x1e>
 8001582:	9a08      	ldr	r2, [sp, #32]
 8001584:	2313      	movs	r3, #19
 8001586:	e9cd 3200 	strd	r3, r2, [sp]
 800158a:	4629      	mov	r1, r5
 800158c:	4643      	mov	r3, r8
 800158e:	464a      	mov	r2, r9
 8001590:	4630      	mov	r0, r6
 8001592:	f7ff fc0d 	bl	8000db0 <acc_confprogram_patch_offset>
 8001596:	4686      	mov	lr, r0
 8001598:	f04f 0c11 	mov.w	ip, #17
 800159c:	4643      	mov	r3, r8
 800159e:	464a      	mov	r2, r9
 80015a0:	4629      	mov	r1, r5
 80015a2:	4630      	mov	r0, r6
 80015a4:	f1be 0f00 	cmp.w	lr, #0
 80015a8:	d0df      	beq.n	800156a <acc_cpd_assembly_test_load_program+0xde>
 80015aa:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80015ac:	e9cd c700 	strd	ip, r7, [sp]
 80015b0:	f7ff fbfe 	bl	8000db0 <acc_confprogram_patch_offset>
 80015b4:	4686      	mov	lr, r0
 80015b6:	f04f 0c12 	mov.w	ip, #18
 80015ba:	4643      	mov	r3, r8
 80015bc:	464a      	mov	r2, r9
 80015be:	4629      	mov	r1, r5
 80015c0:	4630      	mov	r0, r6
 80015c2:	f1be 0f00 	cmp.w	lr, #0
 80015c6:	d0d0      	beq.n	800156a <acc_cpd_assembly_test_load_program+0xde>
 80015c8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80015ca:	e9cd c700 	strd	ip, r7, [sp]
 80015ce:	f7ff fbef 	bl	8000db0 <acc_confprogram_patch_offset>
 80015d2:	4686      	mov	lr, r0
 80015d4:	f04f 0c10 	mov.w	ip, #16
 80015d8:	4643      	mov	r3, r8
 80015da:	464a      	mov	r2, r9
 80015dc:	4629      	mov	r1, r5
 80015de:	4630      	mov	r0, r6
 80015e0:	f1be 0f00 	cmp.w	lr, #0
 80015e4:	d0c1      	beq.n	800156a <acc_cpd_assembly_test_load_program+0xde>
 80015e6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80015e8:	e9cd c700 	strd	ip, r7, [sp]
 80015ec:	f7ff fbe0 	bl	8000db0 <acc_confprogram_patch_offset>
 80015f0:	4684      	mov	ip, r0
 80015f2:	4621      	mov	r1, r4
 80015f4:	4664      	mov	r4, ip
 80015f6:	9a04      	ldr	r2, [sp, #16]
 80015f8:	9807      	ldr	r0, [sp, #28]
 80015fa:	464b      	mov	r3, r9
 80015fc:	b16c      	cbz	r4, 800161a <acc_cpd_assembly_test_load_program+0x18e>
 80015fe:	445d      	add	r5, fp
 8001600:	f7ff ff24 	bl	800144c <acc_sensor_a121_load_confmem>
 8001604:	b2ad      	uxth	r5, r5
 8001606:	f240 5399 	movw	r3, #1433	; 0x599
 800160a:	429d      	cmp	r5, r3
 800160c:	9b03      	ldr	r3, [sp, #12]
 800160e:	eba3 070b 	sub.w	r7, r3, fp
 8001612:	d8ab      	bhi.n	800156c <acc_cpd_assembly_test_load_program+0xe0>
 8001614:	b2bb      	uxth	r3, r7
 8001616:	9303      	str	r3, [sp, #12]
 8001618:	e78a      	b.n	8001530 <acc_cpd_assembly_test_load_program+0xa4>
 800161a:	eb0b 0305 	add.w	r3, fp, r5
 800161e:	b29b      	uxth	r3, r3
 8001620:	f240 5299 	movw	r2, #1433	; 0x599
 8001624:	4293      	cmp	r3, r2
 8001626:	d9a0      	bls.n	800156a <acc_cpd_assembly_test_load_program+0xde>
 8001628:	e7a0      	b.n	800156c <acc_cpd_assembly_test_load_program+0xe0>
 800162a:	bf00      	nop
 800162c:	0800a1cc 	.word	0x0800a1cc
 8001630:	0800a1fc 	.word	0x0800a1fc
 8001634:	431bde83 	.word	0x431bde83
 8001638:	08007704 	.word	0x08007704
 800163c:	0800a210 	.word	0x0800a210
 8001640:	200000ac 	.word	0x200000ac

08001644 <test_interrupt>:
 8001644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001648:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800164a:	b086      	sub	sp, #24
 800164c:	2b00      	cmp	r3, #0
 800164e:	d05c      	beq.n	800170a <test_interrupt+0xc6>
 8001650:	2b01      	cmp	r3, #1
 8001652:	4604      	mov	r4, r0
 8001654:	d068      	beq.n	8001728 <test_interrupt+0xe4>
 8001656:	2200      	movs	r2, #0
 8001658:	f8ad 200c 	strh.w	r2, [sp, #12]
 800165c:	07da      	lsls	r2, r3, #31
 800165e:	d402      	bmi.n	8001666 <test_interrupt+0x22>
 8001660:	2b0c      	cmp	r3, #12
 8001662:	f240 8093 	bls.w	800178c <test_interrupt+0x148>
 8001666:	2600      	movs	r6, #0
 8001668:	6820      	ldr	r0, [r4, #0]
 800166a:	f8ad 600e 	strh.w	r6, [sp, #14]
 800166e:	f10d 020e 	add.w	r2, sp, #14
 8001672:	f240 1113 	movw	r1, #275	; 0x113
 8001676:	f8ad 6010 	strh.w	r6, [sp, #16]
 800167a:	f8ad 6012 	strh.w	r6, [sp, #18]
 800167e:	f8ad 6014 	strh.w	r6, [sp, #20]
 8001682:	f7ff fe5d 	bl	8001340 <acc_sensor_reg_read>
 8001686:	6820      	ldr	r0, [r4, #0]
 8001688:	aa04      	add	r2, sp, #16
 800168a:	f44f 718a 	mov.w	r1, #276	; 0x114
 800168e:	f7ff fe57 	bl	8001340 <acc_sensor_reg_read>
 8001692:	6820      	ldr	r0, [r4, #0]
 8001694:	f10d 0212 	add.w	r2, sp, #18
 8001698:	2133      	movs	r1, #51	; 0x33
 800169a:	f7ff fe51 	bl	8001340 <acc_sensor_reg_read>
 800169e:	6820      	ldr	r0, [r4, #0]
 80016a0:	aa05      	add	r2, sp, #20
 80016a2:	2132      	movs	r1, #50	; 0x32
 80016a4:	f7ff fe4c 	bl	8001340 <acc_sensor_reg_read>
 80016a8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80016ac:	2b02      	cmp	r3, #2
 80016ae:	d05e      	beq.n	800176e <test_interrupt+0x12a>
 80016b0:	2b03      	cmp	r3, #3
 80016b2:	d154      	bne.n	800175e <test_interrupt+0x11a>
 80016b4:	aa05      	add	r2, sp, #20
 80016b6:	6820      	ldr	r0, [r4, #0]
 80016b8:	2132      	movs	r1, #50	; 0x32
 80016ba:	f7ff fe41 	bl	8001340 <acc_sensor_reg_read>
 80016be:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80016c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d07a      	beq.n	80017be <test_interrupt+0x17a>
 80016c8:	4d55      	ldr	r5, [pc, #340]	; (8001820 <test_interrupt+0x1dc>)
 80016ca:	9200      	str	r2, [sp, #0]
 80016cc:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 80016ce:	4a55      	ldr	r2, [pc, #340]	; (8001824 <test_interrupt+0x1e0>)
 80016d0:	4955      	ldr	r1, [pc, #340]	; (8001828 <test_interrupt+0x1e4>)
 80016d2:	4630      	mov	r0, r6
 80016d4:	47a8      	blx	r5
 80016d6:	2504      	movs	r5, #4
 80016d8:	6820      	ldr	r0, [r4, #0]
 80016da:	aa03      	add	r2, sp, #12
 80016dc:	2145      	movs	r1, #69	; 0x45
 80016de:	f7ff fe2f 	bl	8001340 <acc_sensor_reg_read>
 80016e2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	f040 8095 	bne.w	8001816 <test_interrupt+0x1d2>
 80016ec:	4d4c      	ldr	r5, [pc, #304]	; (8001820 <test_interrupt+0x1dc>)
 80016ee:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80016f0:	4a4e      	ldr	r2, [pc, #312]	; (800182c <test_interrupt+0x1e8>)
 80016f2:	494d      	ldr	r1, [pc, #308]	; (8001828 <test_interrupt+0x1e4>)
 80016f4:	2000      	movs	r0, #0
 80016f6:	4798      	blx	r3
 80016f8:	2504      	movs	r5, #4
 80016fa:	2100      	movs	r1, #0
 80016fc:	484c      	ldr	r0, [pc, #304]	; (8001830 <test_interrupt+0x1ec>)
 80016fe:	f7ff f973 	bl	80009e8 <acc_diagnostic_log_scalar>
 8001702:	4628      	mov	r0, r5
 8001704:	b006      	add	sp, #24
 8001706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800170a:	4b45      	ldr	r3, [pc, #276]	; (8001820 <test_interrupt+0x1dc>)
 800170c:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8001710:	2a01      	cmp	r2, #1
 8001712:	d91f      	bls.n	8001754 <test_interrupt+0x110>
 8001714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001716:	4a47      	ldr	r2, [pc, #284]	; (8001834 <test_interrupt+0x1f0>)
 8001718:	4943      	ldr	r1, [pc, #268]	; (8001828 <test_interrupt+0x1e4>)
 800171a:	2002      	movs	r0, #2
 800171c:	4798      	blx	r3
 800171e:	2501      	movs	r5, #1
 8001720:	4628      	mov	r0, r5
 8001722:	b006      	add	sp, #24
 8001724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001728:	4d3d      	ldr	r5, [pc, #244]	; (8001820 <test_interrupt+0x1dc>)
 800172a:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 800172e:	2b01      	cmp	r3, #1
 8001730:	d904      	bls.n	800173c <test_interrupt+0xf8>
 8001732:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001734:	4a40      	ldr	r2, [pc, #256]	; (8001838 <test_interrupt+0x1f4>)
 8001736:	493c      	ldr	r1, [pc, #240]	; (8001828 <test_interrupt+0x1e4>)
 8001738:	2002      	movs	r0, #2
 800173a:	4798      	blx	r3
 800173c:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800173e:	9305      	str	r3, [sp, #20]
 8001740:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8001744:	6820      	ldr	r0, [r4, #0]
 8001746:	ab05      	add	r3, sp, #20
 8001748:	f7ff fea0 	bl	800148c <acc_cpd_assembly_test_load_program>
 800174c:	bb60      	cbnz	r0, 80017a8 <test_interrupt+0x164>
 800174e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001750:	4a3a      	ldr	r2, [pc, #232]	; (800183c <test_interrupt+0x1f8>)
 8001752:	e7ce      	b.n	80016f2 <test_interrupt+0xae>
 8001754:	2501      	movs	r5, #1
 8001756:	4628      	mov	r0, r5
 8001758:	b006      	add	sp, #24
 800175a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800175e:	4d30      	ldr	r5, [pc, #192]	; (8001820 <test_interrupt+0x1dc>)
 8001760:	4a37      	ldr	r2, [pc, #220]	; (8001840 <test_interrupt+0x1fc>)
 8001762:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001764:	4930      	ldr	r1, [pc, #192]	; (8001828 <test_interrupt+0x1e4>)
 8001766:	4630      	mov	r0, r6
 8001768:	4798      	blx	r3
 800176a:	2504      	movs	r5, #4
 800176c:	e7b4      	b.n	80016d8 <test_interrupt+0x94>
 800176e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8001772:	f243 0239 	movw	r2, #12345	; 0x3039
 8001776:	4293      	cmp	r3, r2
 8001778:	d01f      	beq.n	80017ba <test_interrupt+0x176>
 800177a:	4d29      	ldr	r5, [pc, #164]	; (8001820 <test_interrupt+0x1dc>)
 800177c:	9200      	str	r2, [sp, #0]
 800177e:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 8001780:	4a30      	ldr	r2, [pc, #192]	; (8001844 <test_interrupt+0x200>)
 8001782:	4929      	ldr	r1, [pc, #164]	; (8001828 <test_interrupt+0x1e4>)
 8001784:	4630      	mov	r0, r6
 8001786:	47a8      	blx	r5
 8001788:	2504      	movs	r5, #4
 800178a:	e7a5      	b.n	80016d8 <test_interrupt+0x94>
 800178c:	6800      	ldr	r0, [r0, #0]
 800178e:	aa03      	add	r2, sp, #12
 8001790:	2145      	movs	r1, #69	; 0x45
 8001792:	f7ff fdd5 	bl	8001340 <acc_sensor_reg_read>
 8001796:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800179a:	2b00      	cmp	r3, #0
 800179c:	d0a6      	beq.n	80016ec <test_interrupt+0xa8>
 800179e:	2502      	movs	r5, #2
 80017a0:	4628      	mov	r0, r5
 80017a2:	b006      	add	sp, #24
 80017a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80017a8:	6820      	ldr	r0, [r4, #0]
 80017aa:	f240 1163 	movw	r1, #355	; 0x163
 80017ae:	f7ff fddd 	bl	800136c <acc_sensor_protocol_a121_run_program>
 80017b2:	2800      	cmp	r0, #0
 80017b4:	d0cb      	beq.n	800174e <test_interrupt+0x10a>
 80017b6:	2502      	movs	r5, #2
 80017b8:	e7f2      	b.n	80017a0 <test_interrupt+0x15c>
 80017ba:	2503      	movs	r5, #3
 80017bc:	e78c      	b.n	80016d8 <test_interrupt+0x94>
 80017be:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80017c2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80017c6:	4d16      	ldr	r5, [pc, #88]	; (8001820 <test_interrupt+0x1dc>)
 80017c8:	440a      	add	r2, r1
 80017ca:	f895 1048 	ldrb.w	r1, [r5, #72]	; 0x48
 80017ce:	3201      	adds	r2, #1
 80017d0:	3b03      	subs	r3, #3
 80017d2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80017d6:	2901      	cmp	r1, #1
 80017d8:	fa1f f882 	uxth.w	r8, r2
 80017dc:	f3c3 064f 	ubfx	r6, r3, #1, #16
 80017e0:	ea4f 0253 	mov.w	r2, r3, lsr #1
 80017e4:	d907      	bls.n	80017f6 <test_interrupt+0x1b2>
 80017e6:	f8cd 8000 	str.w	r8, [sp]
 80017ea:	b293      	uxth	r3, r2
 80017ec:	490e      	ldr	r1, [pc, #56]	; (8001828 <test_interrupt+0x1e4>)
 80017ee:	4a16      	ldr	r2, [pc, #88]	; (8001848 <test_interrupt+0x204>)
 80017f0:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 80017f2:	2002      	movs	r0, #2
 80017f4:	47b8      	blx	r7
 80017f6:	b14e      	cbz	r6, 800180c <test_interrupt+0x1c8>
 80017f8:	6820      	ldr	r0, [r4, #0]
 80017fa:	aa03      	add	r2, sp, #12
 80017fc:	2145      	movs	r1, #69	; 0x45
 80017fe:	f7ff fd9f 	bl	8001340 <acc_sensor_reg_read>
 8001802:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8001806:	2b00      	cmp	r3, #0
 8001808:	d1c9      	bne.n	800179e <test_interrupt+0x15a>
 800180a:	e770      	b.n	80016ee <test_interrupt+0xaa>
 800180c:	480f      	ldr	r0, [pc, #60]	; (800184c <test_interrupt+0x208>)
 800180e:	4641      	mov	r1, r8
 8001810:	f7ff f8ea 	bl	80009e8 <acc_diagnostic_log_scalar>
 8001814:	e7f0      	b.n	80017f8 <test_interrupt+0x1b4>
 8001816:	1eeb      	subs	r3, r5, #3
 8001818:	4259      	negs	r1, r3
 800181a:	4159      	adcs	r1, r3
 800181c:	e76e      	b.n	80016fc <test_interrupt+0xb8>
 800181e:	bf00      	nop
 8001820:	200000ac 	.word	0x200000ac
 8001824:	0800a300 	.word	0x0800a300
 8001828:	0800a254 	.word	0x0800a254
 800182c:	0800a29c 	.word	0x0800a29c
 8001830:	0800a388 	.word	0x0800a388
 8001834:	0800a23c 	.word	0x0800a23c
 8001838:	0800a268 	.word	0x0800a268
 800183c:	0800a280 	.word	0x0800a280
 8001840:	0800a364 	.word	0x0800a364
 8001844:	0800a334 	.word	0x0800a334
 8001848:	0800a2b8 	.word	0x0800a2b8
 800184c:	0800a2e8 	.word	0x0800a2e8

08001850 <test_enable_pin>:
 8001850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001854:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001856:	b087      	sub	sp, #28
 8001858:	4605      	mov	r5, r0
 800185a:	b183      	cbz	r3, 800187e <test_enable_pin+0x2e>
 800185c:	2b01      	cmp	r3, #1
 800185e:	d04f      	beq.n	8001900 <test_enable_pin+0xb0>
 8001860:	4b3e      	ldr	r3, [pc, #248]	; (800195c <test_enable_pin+0x10c>)
 8001862:	4a3f      	ldr	r2, [pc, #252]	; (8001960 <test_enable_pin+0x110>)
 8001864:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001866:	493f      	ldr	r1, [pc, #252]	; (8001964 <test_enable_pin+0x114>)
 8001868:	2000      	movs	r0, #0
 800186a:	4798      	blx	r3
 800186c:	2504      	movs	r5, #4
 800186e:	2100      	movs	r1, #0
 8001870:	483d      	ldr	r0, [pc, #244]	; (8001968 <test_enable_pin+0x118>)
 8001872:	f7ff f8b9 	bl	80009e8 <acc_diagnostic_log_scalar>
 8001876:	4628      	mov	r0, r5
 8001878:	b007      	add	sp, #28
 800187a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800187e:	4f37      	ldr	r7, [pc, #220]	; (800195c <test_enable_pin+0x10c>)
 8001880:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8001884:	2b01      	cmp	r3, #1
 8001886:	d904      	bls.n	8001892 <test_enable_pin+0x42>
 8001888:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800188a:	4a38      	ldr	r2, [pc, #224]	; (800196c <test_enable_pin+0x11c>)
 800188c:	4935      	ldr	r1, [pc, #212]	; (8001964 <test_enable_pin+0x114>)
 800188e:	2002      	movs	r0, #2
 8001890:	4798      	blx	r3
 8001892:	4837      	ldr	r0, [pc, #220]	; (8001970 <test_enable_pin+0x120>)
 8001894:	f7ff f8b0 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8001898:	4b36      	ldr	r3, [pc, #216]	; (8001974 <test_enable_pin+0x124>)
 800189a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800189c:	ac06      	add	r4, sp, #24
 800189e:	f10d 0806 	add.w	r8, sp, #6
 80018a2:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80018a6:	4646      	mov	r6, r8
 80018a8:	242c      	movs	r4, #44	; 0x2c
 80018aa:	4621      	mov	r1, r4
 80018ac:	3401      	adds	r4, #1
 80018ae:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 80018b2:	6828      	ldr	r0, [r5, #0]
 80018b4:	b2a4      	uxth	r4, r4
 80018b6:	f7ff fd33 	bl	8001320 <acc_sensor_reg_write>
 80018ba:	2c34      	cmp	r4, #52	; 0x34
 80018bc:	d1f5      	bne.n	80018aa <test_enable_pin+0x5a>
 80018be:	262c      	movs	r6, #44	; 0x2c
 80018c0:	2401      	movs	r4, #1
 80018c2:	f04f 0900 	mov.w	r9, #0
 80018c6:	f10d 0206 	add.w	r2, sp, #6
 80018ca:	4631      	mov	r1, r6
 80018cc:	6828      	ldr	r0, [r5, #0]
 80018ce:	f8ad 9006 	strh.w	r9, [sp, #6]
 80018d2:	3601      	adds	r6, #1
 80018d4:	f7ff fd34 	bl	8001340 <acc_sensor_reg_read>
 80018d8:	f838 2f02 	ldrh.w	r2, [r8, #2]!
 80018dc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80018e0:	b2b6      	uxth	r6, r6
 80018e2:	429a      	cmp	r2, r3
 80018e4:	bf18      	it	ne
 80018e6:	2400      	movne	r4, #0
 80018e8:	2e34      	cmp	r6, #52	; 0x34
 80018ea:	d1ec      	bne.n	80018c6 <test_enable_pin+0x76>
 80018ec:	2c00      	cmp	r4, #0
 80018ee:	d131      	bne.n	8001954 <test_enable_pin+0x104>
 80018f0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80018f2:	4a21      	ldr	r2, [pc, #132]	; (8001978 <test_enable_pin+0x128>)
 80018f4:	491b      	ldr	r1, [pc, #108]	; (8001964 <test_enable_pin+0x114>)
 80018f6:	4620      	mov	r0, r4
 80018f8:	4798      	blx	r3
 80018fa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80018fc:	4a1f      	ldr	r2, [pc, #124]	; (800197c <test_enable_pin+0x12c>)
 80018fe:	e7b2      	b.n	8001866 <test_enable_pin+0x16>
 8001900:	4f16      	ldr	r7, [pc, #88]	; (800195c <test_enable_pin+0x10c>)
 8001902:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8001906:	2b01      	cmp	r3, #1
 8001908:	d904      	bls.n	8001914 <test_enable_pin+0xc4>
 800190a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800190c:	4a1c      	ldr	r2, [pc, #112]	; (8001980 <test_enable_pin+0x130>)
 800190e:	4915      	ldr	r1, [pc, #84]	; (8001964 <test_enable_pin+0x114>)
 8001910:	2002      	movs	r0, #2
 8001912:	4798      	blx	r3
 8001914:	262c      	movs	r6, #44	; 0x2c
 8001916:	2401      	movs	r4, #1
 8001918:	f04f 0800 	mov.w	r8, #0
 800191c:	4631      	mov	r1, r6
 800191e:	6828      	ldr	r0, [r5, #0]
 8001920:	f8ad 8008 	strh.w	r8, [sp, #8]
 8001924:	aa02      	add	r2, sp, #8
 8001926:	f7ff fd0b 	bl	8001340 <acc_sensor_reg_read>
 800192a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800192e:	3601      	adds	r6, #1
 8001930:	2b00      	cmp	r3, #0
 8001932:	b2b6      	uxth	r6, r6
 8001934:	bf18      	it	ne
 8001936:	2400      	movne	r4, #0
 8001938:	2e34      	cmp	r6, #52	; 0x34
 800193a:	d1ef      	bne.n	800191c <test_enable_pin+0xcc>
 800193c:	b93c      	cbnz	r4, 800194e <test_enable_pin+0xfe>
 800193e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001940:	4a10      	ldr	r2, [pc, #64]	; (8001984 <test_enable_pin+0x134>)
 8001942:	4908      	ldr	r1, [pc, #32]	; (8001964 <test_enable_pin+0x114>)
 8001944:	4620      	mov	r0, r4
 8001946:	4798      	blx	r3
 8001948:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800194a:	4a0f      	ldr	r2, [pc, #60]	; (8001988 <test_enable_pin+0x138>)
 800194c:	e78b      	b.n	8001866 <test_enable_pin+0x16>
 800194e:	2101      	movs	r1, #1
 8001950:	2503      	movs	r5, #3
 8001952:	e78d      	b.n	8001870 <test_enable_pin+0x20>
 8001954:	2100      	movs	r1, #0
 8001956:	2501      	movs	r5, #1
 8001958:	e78a      	b.n	8001870 <test_enable_pin+0x20>
 800195a:	bf00      	nop
 800195c:	200000ac 	.word	0x200000ac
 8001960:	0800a448 	.word	0x0800a448
 8001964:	0800a254 	.word	0x0800a254
 8001968:	0800a468 	.word	0x0800a468
 800196c:	0800a3a0 	.word	0x0800a3a0
 8001970:	0800a3b8 	.word	0x0800a3b8
 8001974:	08008328 	.word	0x08008328
 8001978:	0800a3c8 	.word	0x0800a3c8
 800197c:	0800a3e4 	.word	0x0800a3e4
 8001980:	0800a404 	.word	0x0800a404
 8001984:	0800a41c 	.word	0x0800a41c
 8001988:	0800a430 	.word	0x0800a430

0800198c <test_basic_read>:
 800198c:	b570      	push	{r4, r5, r6, lr}
 800198e:	4e19      	ldr	r6, [pc, #100]	; (80019f4 <test_basic_read+0x68>)
 8001990:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8001994:	2b01      	cmp	r3, #1
 8001996:	b082      	sub	sp, #8
 8001998:	4605      	mov	r5, r0
 800199a:	d904      	bls.n	80019a6 <test_basic_read+0x1a>
 800199c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800199e:	4a16      	ldr	r2, [pc, #88]	; (80019f8 <test_basic_read+0x6c>)
 80019a0:	4916      	ldr	r1, [pc, #88]	; (80019fc <test_basic_read+0x70>)
 80019a2:	2002      	movs	r0, #2
 80019a4:	4798      	blx	r3
 80019a6:	4816      	ldr	r0, [pc, #88]	; (8001a00 <test_basic_read+0x74>)
 80019a8:	2400      	movs	r4, #0
 80019aa:	f7ff f825 	bl	80009f8 <acc_diagnostic_log_set_scope>
 80019ae:	f10d 0206 	add.w	r2, sp, #6
 80019b2:	6828      	ldr	r0, [r5, #0]
 80019b4:	f8ad 4006 	strh.w	r4, [sp, #6]
 80019b8:	4621      	mov	r1, r4
 80019ba:	f7ff fcc1 	bl	8001340 <acc_sensor_reg_read>
 80019be:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80019c2:	f241 2310 	movw	r3, #4624	; 0x1210
 80019c6:	429a      	cmp	r2, r3
 80019c8:	d00c      	beq.n	80019e4 <test_basic_read+0x58>
 80019ca:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80019cc:	4a0d      	ldr	r2, [pc, #52]	; (8001a04 <test_basic_read+0x78>)
 80019ce:	490b      	ldr	r1, [pc, #44]	; (80019fc <test_basic_read+0x70>)
 80019d0:	4620      	mov	r0, r4
 80019d2:	4798      	blx	r3
 80019d4:	480c      	ldr	r0, [pc, #48]	; (8001a08 <test_basic_read+0x7c>)
 80019d6:	4621      	mov	r1, r4
 80019d8:	f7ff f806 	bl	80009e8 <acc_diagnostic_log_scalar>
 80019dc:	2504      	movs	r5, #4
 80019de:	4628      	mov	r0, r5
 80019e0:	b002      	add	sp, #8
 80019e2:	bd70      	pop	{r4, r5, r6, pc}
 80019e4:	4808      	ldr	r0, [pc, #32]	; (8001a08 <test_basic_read+0x7c>)
 80019e6:	2101      	movs	r1, #1
 80019e8:	f7fe fffe 	bl	80009e8 <acc_diagnostic_log_scalar>
 80019ec:	2503      	movs	r5, #3
 80019ee:	4628      	mov	r0, r5
 80019f0:	b002      	add	sp, #8
 80019f2:	bd70      	pop	{r4, r5, r6, pc}
 80019f4:	200000ac 	.word	0x200000ac
 80019f8:	0800a480 	.word	0x0800a480
 80019fc:	0800a254 	.word	0x0800a254
 8001a00:	0800a494 	.word	0x0800a494
 8001a04:	0800a4a4 	.word	0x0800a4a4
 8001a08:	0800a4c8 	.word	0x0800a4c8

08001a0c <acc_rss_assembly_test_enable>:
 8001a0c:	b430      	push	{r4, r5}
 8001a0e:	4603      	mov	r3, r0
 8001a10:	f100 0430 	add.w	r4, r0, #48	; 0x30
 8001a14:	2200      	movs	r2, #0
 8001a16:	631a      	str	r2, [r3, #48]	; 0x30
 8001a18:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001a1c:	3308      	adds	r3, #8
 8001a1e:	42a3      	cmp	r3, r4
 8001a20:	d1f9      	bne.n	8001a16 <acc_rss_assembly_test_enable+0xa>
 8001a22:	8442      	strh	r2, [r0, #34]	; 0x22
 8001a24:	6242      	str	r2, [r0, #36]	; 0x24
 8001a26:	8502      	strh	r2, [r0, #40]	; 0x28
 8001a28:	f100 031c 	add.w	r3, r0, #28
 8001a2c:	4c07      	ldr	r4, [pc, #28]	; (8001a4c <acc_rss_assembly_test_enable+0x40>)
 8001a2e:	3022      	adds	r0, #34	; 0x22
 8001a30:	2200      	movs	r2, #0
 8001a32:	2501      	movs	r5, #1
 8001a34:	e001      	b.n	8001a3a <acc_rss_assembly_test_enable+0x2e>
 8001a36:	f814 2f0c 	ldrb.w	r2, [r4, #12]!
 8001a3a:	4291      	cmp	r1, r2
 8001a3c:	bf08      	it	eq
 8001a3e:	701d      	strbeq	r5, [r3, #0]
 8001a40:	3301      	adds	r3, #1
 8001a42:	4283      	cmp	r3, r0
 8001a44:	d1f7      	bne.n	8001a36 <acc_rss_assembly_test_enable+0x2a>
 8001a46:	bc30      	pop	{r4, r5}
 8001a48:	4770      	bx	lr
 8001a4a:	bf00      	nop
 8001a4c:	08008338 	.word	0x08008338

08001a50 <acc_rss_assembly_test_disable_all_tests>:
 8001a50:	2200      	movs	r2, #0
 8001a52:	61c2      	str	r2, [r0, #28]
 8001a54:	8402      	strh	r2, [r0, #32]
 8001a56:	4603      	mov	r3, r0
 8001a58:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8001a5c:	631a      	str	r2, [r3, #48]	; 0x30
 8001a5e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001a62:	3308      	adds	r3, #8
 8001a64:	428b      	cmp	r3, r1
 8001a66:	d1f9      	bne.n	8001a5c <acc_rss_assembly_test_disable_all_tests+0xc>
 8001a68:	8442      	strh	r2, [r0, #34]	; 0x22
 8001a6a:	6242      	str	r2, [r0, #36]	; 0x24
 8001a6c:	8502      	strh	r2, [r0, #40]	; 0x28
 8001a6e:	4770      	bx	lr

08001a70 <acc_sensor_destroy>:
 8001a70:	b510      	push	{r4, lr}
 8001a72:	b120      	cbz	r0, 8001a7e <acc_sensor_destroy+0xe>
 8001a74:	4b0b      	ldr	r3, [pc, #44]	; (8001aa4 <acc_sensor_destroy+0x34>)
 8001a76:	6802      	ldr	r2, [r0, #0]
 8001a78:	429a      	cmp	r2, r3
 8001a7a:	4604      	mov	r4, r0
 8001a7c:	d007      	beq.n	8001a8e <acc_sensor_destroy+0x1e>
 8001a7e:	4b0a      	ldr	r3, [pc, #40]	; (8001aa8 <acc_sensor_destroy+0x38>)
 8001a80:	4a0a      	ldr	r2, [pc, #40]	; (8001aac <acc_sensor_destroy+0x3c>)
 8001a82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a84:	490a      	ldr	r1, [pc, #40]	; (8001ab0 <acc_sensor_destroy+0x40>)
 8001a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a8a:	2000      	movs	r0, #0
 8001a8c:	4718      	bx	r3
 8001a8e:	6900      	ldr	r0, [r0, #16]
 8001a90:	2300      	movs	r3, #0
 8001a92:	6023      	str	r3, [r4, #0]
 8001a94:	b108      	cbz	r0, 8001a9a <acc_sensor_destroy+0x2a>
 8001a96:	f7ff fb4f 	bl	8001138 <acc_rss_integration_mem_free>
 8001a9a:	4620      	mov	r0, r4
 8001a9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001aa0:	f7ff bb4a 	b.w	8001138 <acc_rss_integration_mem_free>
 8001aa4:	1337b00e 	.word	0x1337b00e
 8001aa8:	200000ac 	.word	0x200000ac
 8001aac:	0800a4e4 	.word	0x0800a4e4
 8001ab0:	0800a4fc 	.word	0x0800a4fc

08001ab4 <UART_DMAAbortOnError>:
 8001ab4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001ab6:	2200      	movs	r2, #0
 8001ab8:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8001abc:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8001ac0:	4770      	bx	lr
 8001ac2:	bf00      	nop

08001ac4 <SPI_DMAError>:
 8001ac4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001ac6:	6819      	ldr	r1, [r3, #0]
 8001ac8:	684a      	ldr	r2, [r1, #4]
 8001aca:	f022 0203 	bic.w	r2, r2, #3
 8001ace:	b410      	push	{r4}
 8001ad0:	604a      	str	r2, [r1, #4]
 8001ad2:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001ad4:	2401      	movs	r4, #1
 8001ad6:	f042 0210 	orr.w	r2, r2, #16
 8001ada:	661a      	str	r2, [r3, #96]	; 0x60
 8001adc:	f883 405d 	strb.w	r4, [r3, #93]	; 0x5d
 8001ae0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ae4:	4770      	bx	lr
 8001ae6:	bf00      	nop

08001ae8 <SPI_DMAHalfReceiveCplt>:
 8001ae8:	4770      	bx	lr
 8001aea:	bf00      	nop

08001aec <SPI_DMAHalfTransmitReceiveCplt>:
 8001aec:	4770      	bx	lr
 8001aee:	bf00      	nop

08001af0 <SPI_DMATransmitReceiveCplt>:
 8001af0:	b570      	push	{r4, r5, r6, lr}
 8001af2:	6803      	ldr	r3, [r0, #0]
 8001af4:	4d1b      	ldr	r5, [pc, #108]	; (8001b64 <SPI_DMATransmitReceiveCplt+0x74>)
 8001af6:	682e      	ldr	r6, [r5, #0]
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	069b      	lsls	r3, r3, #26
 8001afc:	d42e      	bmi.n	8001b5c <SPI_DMATransmitReceiveCplt+0x6c>
 8001afe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001b00:	6822      	ldr	r2, [r4, #0]
 8001b02:	6853      	ldr	r3, [r2, #4]
 8001b04:	f023 0320 	bic.w	r3, r3, #32
 8001b08:	6053      	str	r3, [r2, #4]
 8001b0a:	4620      	mov	r0, r4
 8001b0c:	4632      	mov	r2, r6
 8001b0e:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8001b12:	f7fe fd63 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001b16:	b958      	cbnz	r0, 8001b30 <SPI_DMATransmitReceiveCplt+0x40>
 8001b18:	4631      	mov	r1, r6
 8001b1a:	4620      	mov	r0, r4
 8001b1c:	f7fe fdc6 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001b20:	b930      	cbnz	r0, 8001b30 <SPI_DMATransmitReceiveCplt+0x40>
 8001b22:	4632      	mov	r2, r6
 8001b24:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001b28:	4620      	mov	r0, r4
 8001b2a:	f7fe fd57 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001b2e:	b138      	cbz	r0, 8001b40 <SPI_DMATransmitReceiveCplt+0x50>
 8001b30:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001b32:	f043 0320 	orr.w	r3, r3, #32
 8001b36:	6623      	str	r3, [r4, #96]	; 0x60
 8001b38:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001b3a:	f043 0320 	orr.w	r3, r3, #32
 8001b3e:	6623      	str	r3, [r4, #96]	; 0x60
 8001b40:	6821      	ldr	r1, [r4, #0]
 8001b42:	684b      	ldr	r3, [r1, #4]
 8001b44:	2200      	movs	r2, #0
 8001b46:	f023 0303 	bic.w	r3, r3, #3
 8001b4a:	2001      	movs	r0, #1
 8001b4c:	604b      	str	r3, [r1, #4]
 8001b4e:	87e2      	strh	r2, [r4, #62]	; 0x3e
 8001b50:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001b54:	f884 005d 	strb.w	r0, [r4, #93]	; 0x5d
 8001b58:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001b5a:	b913      	cbnz	r3, 8001b62 <SPI_DMATransmitReceiveCplt+0x72>
 8001b5c:	2301      	movs	r3, #1
 8001b5e:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
 8001b62:	bd70      	pop	{r4, r5, r6, pc}
 8001b64:	200000ac 	.word	0x200000ac

08001b68 <SPI_DMAReceiveCplt>:
 8001b68:	b538      	push	{r3, r4, r5, lr}
 8001b6a:	4a2e      	ldr	r2, [pc, #184]	; (8001c24 <SPI_DMAReceiveCplt+0xbc>)
 8001b6c:	6803      	ldr	r3, [r0, #0]
 8001b6e:	6815      	ldr	r5, [r2, #0]
 8001b70:	681b      	ldr	r3, [r3, #0]
 8001b72:	069b      	lsls	r3, r3, #26
 8001b74:	d41f      	bmi.n	8001bb6 <SPI_DMAReceiveCplt+0x4e>
 8001b76:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001b78:	6823      	ldr	r3, [r4, #0]
 8001b7a:	68a2      	ldr	r2, [r4, #8]
 8001b7c:	6858      	ldr	r0, [r3, #4]
 8001b7e:	f020 0020 	bic.w	r0, r0, #32
 8001b82:	6058      	str	r0, [r3, #4]
 8001b84:	b1c2      	cbz	r2, 8001bb8 <SPI_DMAReceiveCplt+0x50>
 8001b86:	6859      	ldr	r1, [r3, #4]
 8001b88:	6860      	ldr	r0, [r4, #4]
 8001b8a:	f021 0101 	bic.w	r1, r1, #1
 8001b8e:	f5b0 7f82 	cmp.w	r0, #260	; 0x104
 8001b92:	6059      	str	r1, [r3, #4]
 8001b94:	d035      	beq.n	8001c02 <SPI_DMAReceiveCplt+0x9a>
 8001b96:	4629      	mov	r1, r5
 8001b98:	4620      	mov	r0, r4
 8001b9a:	f7fe fd87 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001b9e:	b9c8      	cbnz	r0, 8001bd4 <SPI_DMAReceiveCplt+0x6c>
 8001ba0:	6863      	ldr	r3, [r4, #4]
 8001ba2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8001ba6:	d01c      	beq.n	8001be2 <SPI_DMAReceiveCplt+0x7a>
 8001ba8:	2301      	movs	r3, #1
 8001baa:	2200      	movs	r2, #0
 8001bac:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001bb0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8001bb4:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001bb6:	bd38      	pop	{r3, r4, r5, pc}
 8001bb8:	6862      	ldr	r2, [r4, #4]
 8001bba:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8001bbe:	685a      	ldr	r2, [r3, #4]
 8001bc0:	d027      	beq.n	8001c12 <SPI_DMAReceiveCplt+0xaa>
 8001bc2:	f022 0201 	bic.w	r2, r2, #1
 8001bc6:	605a      	str	r2, [r3, #4]
 8001bc8:	4629      	mov	r1, r5
 8001bca:	4620      	mov	r0, r4
 8001bcc:	f7fe fd6e 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001bd0:	2800      	cmp	r0, #0
 8001bd2:	d0e5      	beq.n	8001ba0 <SPI_DMAReceiveCplt+0x38>
 8001bd4:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001bd6:	f043 0320 	orr.w	r3, r3, #32
 8001bda:	6623      	str	r3, [r4, #96]	; 0x60
 8001bdc:	2320      	movs	r3, #32
 8001bde:	6623      	str	r3, [r4, #96]	; 0x60
 8001be0:	e7e2      	b.n	8001ba8 <SPI_DMAReceiveCplt+0x40>
 8001be2:	68a3      	ldr	r3, [r4, #8]
 8001be4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001be8:	d002      	beq.n	8001bf0 <SPI_DMAReceiveCplt+0x88>
 8001bea:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001bee:	d1db      	bne.n	8001ba8 <SPI_DMAReceiveCplt+0x40>
 8001bf0:	462a      	mov	r2, r5
 8001bf2:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001bf6:	4620      	mov	r0, r4
 8001bf8:	f7fe fcf0 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001bfc:	2800      	cmp	r0, #0
 8001bfe:	d0d3      	beq.n	8001ba8 <SPI_DMAReceiveCplt+0x40>
 8001c00:	e7e8      	b.n	8001bd4 <SPI_DMAReceiveCplt+0x6c>
 8001c02:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8001c06:	d108      	bne.n	8001c1a <SPI_DMAReceiveCplt+0xb2>
 8001c08:	681a      	ldr	r2, [r3, #0]
 8001c0a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001c0e:	601a      	str	r2, [r3, #0]
 8001c10:	e7c1      	b.n	8001b96 <SPI_DMAReceiveCplt+0x2e>
 8001c12:	f022 0203 	bic.w	r2, r2, #3
 8001c16:	605a      	str	r2, [r3, #4]
 8001c18:	e7bd      	b.n	8001b96 <SPI_DMAReceiveCplt+0x2e>
 8001c1a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8001c1e:	d0f3      	beq.n	8001c08 <SPI_DMAReceiveCplt+0xa0>
 8001c20:	e7b9      	b.n	8001b96 <SPI_DMAReceiveCplt+0x2e>
 8001c22:	bf00      	nop
 8001c24:	200000ac 	.word	0x200000ac

08001c28 <RCCEx_PLLSAI1_Config>:
 8001c28:	4a44      	ldr	r2, [pc, #272]	; (8001d3c <RCCEx_PLLSAI1_Config+0x114>)
 8001c2a:	68d3      	ldr	r3, [r2, #12]
 8001c2c:	b430      	push	{r4, r5}
 8001c2e:	079c      	lsls	r4, r3, #30
 8001c30:	d008      	beq.n	8001c44 <RCCEx_PLLSAI1_Config+0x1c>
 8001c32:	68d3      	ldr	r3, [r2, #12]
 8001c34:	6804      	ldr	r4, [r0, #0]
 8001c36:	f003 0303 	and.w	r3, r3, #3
 8001c3a:	42a3      	cmp	r3, r4
 8001c3c:	d047      	beq.n	8001cce <RCCEx_PLLSAI1_Config+0xa6>
 8001c3e:	2001      	movs	r0, #1
 8001c40:	bc30      	pop	{r4, r5}
 8001c42:	4770      	bx	lr
 8001c44:	6803      	ldr	r3, [r0, #0]
 8001c46:	2b02      	cmp	r3, #2
 8001c48:	d052      	beq.n	8001cf0 <RCCEx_PLLSAI1_Config+0xc8>
 8001c4a:	2b03      	cmp	r3, #3
 8001c4c:	d049      	beq.n	8001ce2 <RCCEx_PLLSAI1_Config+0xba>
 8001c4e:	2b01      	cmp	r3, #1
 8001c50:	d1f5      	bne.n	8001c3e <RCCEx_PLLSAI1_Config+0x16>
 8001c52:	6812      	ldr	r2, [r2, #0]
 8001c54:	0792      	lsls	r2, r2, #30
 8001c56:	d5f2      	bpl.n	8001c3e <RCCEx_PLLSAI1_Config+0x16>
 8001c58:	4d38      	ldr	r5, [pc, #224]	; (8001d3c <RCCEx_PLLSAI1_Config+0x114>)
 8001c5a:	6844      	ldr	r4, [r0, #4]
 8001c5c:	68ea      	ldr	r2, [r5, #12]
 8001c5e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8001c62:	4313      	orrs	r3, r2
 8001c64:	3c01      	subs	r4, #1
 8001c66:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 8001c6a:	60eb      	str	r3, [r5, #12]
 8001c6c:	4c33      	ldr	r4, [pc, #204]	; (8001d3c <RCCEx_PLLSAI1_Config+0x114>)
 8001c6e:	4a34      	ldr	r2, [pc, #208]	; (8001d40 <RCCEx_PLLSAI1_Config+0x118>)
 8001c70:	6823      	ldr	r3, [r4, #0]
 8001c72:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001c76:	6023      	str	r3, [r4, #0]
 8001c78:	6815      	ldr	r5, [r2, #0]
 8001c7a:	e003      	b.n	8001c84 <RCCEx_PLLSAI1_Config+0x5c>
 8001c7c:	6813      	ldr	r3, [r2, #0]
 8001c7e:	1b5b      	subs	r3, r3, r5
 8001c80:	2b02      	cmp	r3, #2
 8001c82:	d839      	bhi.n	8001cf8 <RCCEx_PLLSAI1_Config+0xd0>
 8001c84:	6823      	ldr	r3, [r4, #0]
 8001c86:	011b      	lsls	r3, r3, #4
 8001c88:	d4f8      	bmi.n	8001c7c <RCCEx_PLLSAI1_Config+0x54>
 8001c8a:	2900      	cmp	r1, #0
 8001c8c:	d136      	bne.n	8001cfc <RCCEx_PLLSAI1_Config+0xd4>
 8001c8e:	e9d0 5302 	ldrd	r5, r3, [r0, #8]
 8001c92:	6921      	ldr	r1, [r4, #16]
 8001c94:	06db      	lsls	r3, r3, #27
 8001c96:	f021 4178 	bic.w	r1, r1, #4160749568	; 0xf8000000
 8001c9a:	f421 41fe 	bic.w	r1, r1, #32512	; 0x7f00
 8001c9e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001ca2:	430b      	orrs	r3, r1
 8001ca4:	6123      	str	r3, [r4, #16]
 8001ca6:	4925      	ldr	r1, [pc, #148]	; (8001d3c <RCCEx_PLLSAI1_Config+0x114>)
 8001ca8:	680b      	ldr	r3, [r1, #0]
 8001caa:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001cae:	600b      	str	r3, [r1, #0]
 8001cb0:	6814      	ldr	r4, [r2, #0]
 8001cb2:	e003      	b.n	8001cbc <RCCEx_PLLSAI1_Config+0x94>
 8001cb4:	6813      	ldr	r3, [r2, #0]
 8001cb6:	1b1b      	subs	r3, r3, r4
 8001cb8:	2b02      	cmp	r3, #2
 8001cba:	d81d      	bhi.n	8001cf8 <RCCEx_PLLSAI1_Config+0xd0>
 8001cbc:	680b      	ldr	r3, [r1, #0]
 8001cbe:	011b      	lsls	r3, r3, #4
 8001cc0:	d5f8      	bpl.n	8001cb4 <RCCEx_PLLSAI1_Config+0x8c>
 8001cc2:	6982      	ldr	r2, [r0, #24]
 8001cc4:	690b      	ldr	r3, [r1, #16]
 8001cc6:	4313      	orrs	r3, r2
 8001cc8:	610b      	str	r3, [r1, #16]
 8001cca:	2000      	movs	r0, #0
 8001ccc:	e7b8      	b.n	8001c40 <RCCEx_PLLSAI1_Config+0x18>
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d0b5      	beq.n	8001c3e <RCCEx_PLLSAI1_Config+0x16>
 8001cd2:	68d3      	ldr	r3, [r2, #12]
 8001cd4:	6842      	ldr	r2, [r0, #4]
 8001cd6:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8001cda:	3301      	adds	r3, #1
 8001cdc:	4293      	cmp	r3, r2
 8001cde:	d1ae      	bne.n	8001c3e <RCCEx_PLLSAI1_Config+0x16>
 8001ce0:	e7c4      	b.n	8001c6c <RCCEx_PLLSAI1_Config+0x44>
 8001ce2:	6814      	ldr	r4, [r2, #0]
 8001ce4:	03a4      	lsls	r4, r4, #14
 8001ce6:	d4b7      	bmi.n	8001c58 <RCCEx_PLLSAI1_Config+0x30>
 8001ce8:	6812      	ldr	r2, [r2, #0]
 8001cea:	0352      	lsls	r2, r2, #13
 8001cec:	d5a7      	bpl.n	8001c3e <RCCEx_PLLSAI1_Config+0x16>
 8001cee:	e7b3      	b.n	8001c58 <RCCEx_PLLSAI1_Config+0x30>
 8001cf0:	6812      	ldr	r2, [r2, #0]
 8001cf2:	0555      	lsls	r5, r2, #21
 8001cf4:	d5a3      	bpl.n	8001c3e <RCCEx_PLLSAI1_Config+0x16>
 8001cf6:	e7af      	b.n	8001c58 <RCCEx_PLLSAI1_Config+0x30>
 8001cf8:	2003      	movs	r0, #3
 8001cfa:	e7a1      	b.n	8001c40 <RCCEx_PLLSAI1_Config+0x18>
 8001cfc:	2901      	cmp	r1, #1
 8001cfe:	6923      	ldr	r3, [r4, #16]
 8001d00:	d00d      	beq.n	8001d1e <RCCEx_PLLSAI1_Config+0xf6>
 8001d02:	6941      	ldr	r1, [r0, #20]
 8001d04:	6885      	ldr	r5, [r0, #8]
 8001d06:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8001d0a:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001d0e:	0849      	lsrs	r1, r1, #1
 8001d10:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001d14:	3901      	subs	r1, #1
 8001d16:	ea43 6341 	orr.w	r3, r3, r1, lsl #25
 8001d1a:	6123      	str	r3, [r4, #16]
 8001d1c:	e7c3      	b.n	8001ca6 <RCCEx_PLLSAI1_Config+0x7e>
 8001d1e:	6901      	ldr	r1, [r0, #16]
 8001d20:	6885      	ldr	r5, [r0, #8]
 8001d22:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8001d26:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001d2a:	0849      	lsrs	r1, r1, #1
 8001d2c:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001d30:	3901      	subs	r1, #1
 8001d32:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 8001d36:	6123      	str	r3, [r4, #16]
 8001d38:	e7b5      	b.n	8001ca6 <RCCEx_PLLSAI1_Config+0x7e>
 8001d3a:	bf00      	nop
 8001d3c:	40021000 	.word	0x40021000
 8001d40:	200000ac 	.word	0x200000ac

08001d44 <HAL_RCCEx_PeriphCLKConfig>:
 8001d44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d46:	6803      	ldr	r3, [r0, #0]
 8001d48:	f413 6700 	ands.w	r7, r3, #2048	; 0x800
 8001d4c:	b083      	sub	sp, #12
 8001d4e:	4604      	mov	r4, r0
 8001d50:	d00c      	beq.n	8001d6c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001d52:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8001d54:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8001d58:	f000 8132 	beq.w	8001fc0 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8001d5c:	f5b1 0f40 	cmp.w	r1, #12582912	; 0xc00000
 8001d60:	f000 8106 	beq.w	8001f70 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8001d64:	2900      	cmp	r1, #0
 8001d66:	f000 8123 	beq.w	8001fb0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8001d6a:	2701      	movs	r7, #1
 8001d6c:	0398      	lsls	r0, r3, #14
 8001d6e:	d54f      	bpl.n	8001e10 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001d70:	4aa4      	ldr	r2, [pc, #656]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001d72:	6d91      	ldr	r1, [r2, #88]	; 0x58
 8001d74:	00c9      	lsls	r1, r1, #3
 8001d76:	f140 80ef 	bpl.w	8001f58 <HAL_RCCEx_PeriphCLKConfig+0x214>
 8001d7a:	2000      	movs	r0, #0
 8001d7c:	49a2      	ldr	r1, [pc, #648]	; (8002008 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8001d7e:	4da3      	ldr	r5, [pc, #652]	; (800200c <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 8001d80:	680a      	ldr	r2, [r1, #0]
 8001d82:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001d86:	600a      	str	r2, [r1, #0]
 8001d88:	682e      	ldr	r6, [r5, #0]
 8001d8a:	e004      	b.n	8001d96 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8001d8c:	682a      	ldr	r2, [r5, #0]
 8001d8e:	1b92      	subs	r2, r2, r6
 8001d90:	2a02      	cmp	r2, #2
 8001d92:	f200 80f8 	bhi.w	8001f86 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001d96:	680a      	ldr	r2, [r1, #0]
 8001d98:	05d2      	lsls	r2, r2, #23
 8001d9a:	d5f7      	bpl.n	8001d8c <HAL_RCCEx_PeriphCLKConfig+0x48>
 8001d9c:	bbaf      	cbnz	r7, 8001e0a <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8001d9e:	4a99      	ldr	r2, [pc, #612]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001da0:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001da2:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001da6:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 8001daa:	d026      	beq.n	8001dfa <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001dac:	428e      	cmp	r6, r1
 8001dae:	d024      	beq.n	8001dfa <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001db0:	f8d2 6090 	ldr.w	r6, [r2, #144]	; 0x90
 8001db4:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001db8:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8001dbc:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001dc0:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001dc4:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8001dc8:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001dcc:	f426 7c40 	bic.w	ip, r6, #768	; 0x300
 8001dd0:	07f1      	lsls	r1, r6, #31
 8001dd2:	f8c2 c090 	str.w	ip, [r2, #144]	; 0x90
 8001dd6:	d50f      	bpl.n	8001df8 <HAL_RCCEx_PeriphCLKConfig+0xb4>
 8001dd8:	f8d5 c000 	ldr.w	ip, [r5]
 8001ddc:	4611      	mov	r1, r2
 8001dde:	f241 3688 	movw	r6, #5000	; 0x1388
 8001de2:	e005      	b.n	8001df0 <HAL_RCCEx_PeriphCLKConfig+0xac>
 8001de4:	682a      	ldr	r2, [r5, #0]
 8001de6:	eba2 020c 	sub.w	r2, r2, ip
 8001dea:	42b2      	cmp	r2, r6
 8001dec:	f200 80cb 	bhi.w	8001f86 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001df0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001df4:	0792      	lsls	r2, r2, #30
 8001df6:	d5f5      	bpl.n	8001de4 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8001df8:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001dfa:	4982      	ldr	r1, [pc, #520]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001dfc:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001e00:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8001e04:	4332      	orrs	r2, r6
 8001e06:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 8001e0a:	2800      	cmp	r0, #0
 8001e0c:	f040 80bf 	bne.w	8001f8e <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8001e10:	07d9      	lsls	r1, r3, #31
 8001e12:	d508      	bpl.n	8001e26 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8001e14:	497b      	ldr	r1, [pc, #492]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e16:	6a20      	ldr	r0, [r4, #32]
 8001e18:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e1c:	f022 0203 	bic.w	r2, r2, #3
 8001e20:	4302      	orrs	r2, r0
 8001e22:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e26:	079a      	lsls	r2, r3, #30
 8001e28:	d508      	bpl.n	8001e3c <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8001e2a:	4976      	ldr	r1, [pc, #472]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e2c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001e2e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e32:	f022 020c 	bic.w	r2, r2, #12
 8001e36:	4302      	orrs	r2, r0
 8001e38:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e3c:	075e      	lsls	r6, r3, #29
 8001e3e:	d508      	bpl.n	8001e52 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8001e40:	4970      	ldr	r1, [pc, #448]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e42:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8001e44:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e48:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8001e4c:	4302      	orrs	r2, r0
 8001e4e:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e52:	069d      	lsls	r5, r3, #26
 8001e54:	d508      	bpl.n	8001e68 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8001e56:	496b      	ldr	r1, [pc, #428]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e58:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8001e5a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e5e:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001e62:	4302      	orrs	r2, r0
 8001e64:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e68:	0598      	lsls	r0, r3, #22
 8001e6a:	d508      	bpl.n	8001e7e <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8001e6c:	4965      	ldr	r1, [pc, #404]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e6e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001e70:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e74:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001e78:	4302      	orrs	r2, r0
 8001e7a:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e7e:	0559      	lsls	r1, r3, #21
 8001e80:	d508      	bpl.n	8001e94 <HAL_RCCEx_PeriphCLKConfig+0x150>
 8001e82:	4960      	ldr	r1, [pc, #384]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e84:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001e86:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e8a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001e8e:	4302      	orrs	r2, r0
 8001e90:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e94:	065a      	lsls	r2, r3, #25
 8001e96:	d508      	bpl.n	8001eaa <HAL_RCCEx_PeriphCLKConfig+0x166>
 8001e98:	495a      	ldr	r1, [pc, #360]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e9a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001e9c:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001ea0:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001ea4:	4302      	orrs	r2, r0
 8001ea6:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001eaa:	061e      	lsls	r6, r3, #24
 8001eac:	d508      	bpl.n	8001ec0 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8001eae:	4955      	ldr	r1, [pc, #340]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001eb0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001eb2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001eb6:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8001eba:	4302      	orrs	r2, r0
 8001ebc:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001ec0:	05dd      	lsls	r5, r3, #23
 8001ec2:	d508      	bpl.n	8001ed6 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8001ec4:	494f      	ldr	r1, [pc, #316]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ec6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001ec8:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001ecc:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001ed0:	4302      	orrs	r2, r0
 8001ed2:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001ed6:	0318      	lsls	r0, r3, #12
 8001ed8:	d50e      	bpl.n	8001ef8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001eda:	4a4a      	ldr	r2, [pc, #296]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001edc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8001ede:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001ee2:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001ee6:	430b      	orrs	r3, r1
 8001ee8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8001eec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001ef0:	d053      	beq.n	8001f9a <HAL_RCCEx_PeriphCLKConfig+0x256>
 8001ef2:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001ef6:	d073      	beq.n	8001fe0 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 8001ef8:	6823      	ldr	r3, [r4, #0]
 8001efa:	0359      	lsls	r1, r3, #13
 8001efc:	d50f      	bpl.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001efe:	4a41      	ldr	r2, [pc, #260]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f00:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8001f02:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001f06:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001f0a:	430b      	orrs	r3, r1
 8001f0c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8001f10:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001f14:	d046      	beq.n	8001fa4 <HAL_RCCEx_PeriphCLKConfig+0x260>
 8001f16:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001f1a:	d069      	beq.n	8001ff0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8001f1c:	6823      	ldr	r3, [r4, #0]
 8001f1e:	045a      	lsls	r2, r3, #17
 8001f20:	d50c      	bpl.n	8001f3c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001f22:	4938      	ldr	r1, [pc, #224]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f24:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001f26:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8001f2a:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8001f2e:	4313      	orrs	r3, r2
 8001f30:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
 8001f34:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8001f38:	d049      	beq.n	8001fce <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8001f3a:	6823      	ldr	r3, [r4, #0]
 8001f3c:	041b      	lsls	r3, r3, #16
 8001f3e:	d508      	bpl.n	8001f52 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8001f40:	4a30      	ldr	r2, [pc, #192]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f42:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8001f44:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001f48:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8001f4c:	430b      	orrs	r3, r1
 8001f4e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001f52:	4638      	mov	r0, r7
 8001f54:	b003      	add	sp, #12
 8001f56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f58:	6d91      	ldr	r1, [r2, #88]	; 0x58
 8001f5a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001f5e:	6591      	str	r1, [r2, #88]	; 0x58
 8001f60:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8001f62:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001f66:	9201      	str	r2, [sp, #4]
 8001f68:	9a01      	ldr	r2, [sp, #4]
 8001f6a:	2001      	movs	r0, #1
 8001f6c:	e706      	b.n	8001d7c <HAL_RCCEx_PeriphCLKConfig+0x38>
 8001f6e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8001f70:	4a24      	ldr	r2, [pc, #144]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f72:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001f76:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001f7a:	4319      	orrs	r1, r3
 8001f7c:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
 8001f80:	6823      	ldr	r3, [r4, #0]
 8001f82:	2700      	movs	r7, #0
 8001f84:	e6f2      	b.n	8001d6c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001f86:	2703      	movs	r7, #3
 8001f88:	2800      	cmp	r0, #0
 8001f8a:	f43f af41 	beq.w	8001e10 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001f8e:	491d      	ldr	r1, [pc, #116]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f90:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 8001f92:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8001f96:	658a      	str	r2, [r1, #88]	; 0x58
 8001f98:	e73a      	b.n	8001e10 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001f9a:	68d3      	ldr	r3, [r2, #12]
 8001f9c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001fa0:	60d3      	str	r3, [r2, #12]
 8001fa2:	e7a9      	b.n	8001ef8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001fa4:	68d3      	ldr	r3, [r2, #12]
 8001fa6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001faa:	60d3      	str	r3, [r2, #12]
 8001fac:	6823      	ldr	r3, [r4, #0]
 8001fae:	e7b6      	b.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001fb0:	3004      	adds	r0, #4
 8001fb2:	f7ff fe39 	bl	8001c28 <RCCEx_PLLSAI1_Config>
 8001fb6:	4607      	mov	r7, r0
 8001fb8:	2800      	cmp	r0, #0
 8001fba:	d0d8      	beq.n	8001f6e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8001fbc:	6823      	ldr	r3, [r4, #0]
 8001fbe:	e6d5      	b.n	8001d6c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001fc0:	4a10      	ldr	r2, [pc, #64]	; (8002004 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fc2:	68d3      	ldr	r3, [r2, #12]
 8001fc4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001fc8:	60d3      	str	r3, [r2, #12]
 8001fca:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8001fcc:	e7d0      	b.n	8001f70 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8001fce:	2102      	movs	r1, #2
 8001fd0:	1d20      	adds	r0, r4, #4
 8001fd2:	f7ff fe29 	bl	8001c28 <RCCEx_PLLSAI1_Config>
 8001fd6:	6823      	ldr	r3, [r4, #0]
 8001fd8:	2800      	cmp	r0, #0
 8001fda:	d0af      	beq.n	8001f3c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001fdc:	4607      	mov	r7, r0
 8001fde:	e7ad      	b.n	8001f3c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001fe0:	2101      	movs	r1, #1
 8001fe2:	1d20      	adds	r0, r4, #4
 8001fe4:	f7ff fe20 	bl	8001c28 <RCCEx_PLLSAI1_Config>
 8001fe8:	2800      	cmp	r0, #0
 8001fea:	bf18      	it	ne
 8001fec:	4607      	movne	r7, r0
 8001fee:	e783      	b.n	8001ef8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001ff0:	2101      	movs	r1, #1
 8001ff2:	1d20      	adds	r0, r4, #4
 8001ff4:	f7ff fe18 	bl	8001c28 <RCCEx_PLLSAI1_Config>
 8001ff8:	6823      	ldr	r3, [r4, #0]
 8001ffa:	2800      	cmp	r0, #0
 8001ffc:	d08f      	beq.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001ffe:	4607      	mov	r7, r0
 8002000:	e78d      	b.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8002002:	bf00      	nop
 8002004:	40021000 	.word	0x40021000
 8002008:	40007000 	.word	0x40007000
 800200c:	200000ac 	.word	0x200000ac

08002010 <RCC_SetFlashLatencyFromMSIRange>:
 8002010:	491f      	ldr	r1, [pc, #124]	; (8002090 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8002012:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002014:	00db      	lsls	r3, r3, #3
 8002016:	b082      	sub	sp, #8
 8002018:	d51d      	bpl.n	8002056 <RCC_SetFlashLatencyFromMSIRange+0x46>
 800201a:	4b1e      	ldr	r3, [pc, #120]	; (8002094 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002022:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002026:	d028      	beq.n	800207a <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8002028:	2880      	cmp	r0, #128	; 0x80
 800202a:	d812      	bhi.n	8002052 <RCC_SetFlashLatencyFromMSIRange+0x42>
 800202c:	d02e      	beq.n	800208c <RCC_SetFlashLatencyFromMSIRange+0x7c>
 800202e:	f1a0 0370 	sub.w	r3, r0, #112	; 0x70
 8002032:	425a      	negs	r2, r3
 8002034:	415a      	adcs	r2, r3
 8002036:	4918      	ldr	r1, [pc, #96]	; (8002098 <RCC_SetFlashLatencyFromMSIRange+0x88>)
 8002038:	680b      	ldr	r3, [r1, #0]
 800203a:	f023 0307 	bic.w	r3, r3, #7
 800203e:	4313      	orrs	r3, r2
 8002040:	600b      	str	r3, [r1, #0]
 8002042:	6808      	ldr	r0, [r1, #0]
 8002044:	f000 0007 	and.w	r0, r0, #7
 8002048:	1a80      	subs	r0, r0, r2
 800204a:	bf18      	it	ne
 800204c:	2001      	movne	r0, #1
 800204e:	b002      	add	sp, #8
 8002050:	4770      	bx	lr
 8002052:	2203      	movs	r2, #3
 8002054:	e7ef      	b.n	8002036 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002056:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002058:	4a0e      	ldr	r2, [pc, #56]	; (8002094 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 800205a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800205e:	658b      	str	r3, [r1, #88]	; 0x58
 8002060:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002062:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002066:	9301      	str	r3, [sp, #4]
 8002068:	9b01      	ldr	r3, [sp, #4]
 800206a:	6813      	ldr	r3, [r2, #0]
 800206c:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 800206e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002072:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002076:	658a      	str	r2, [r1, #88]	; 0x58
 8002078:	e7d3      	b.n	8002022 <RCC_SetFlashLatencyFromMSIRange+0x12>
 800207a:	2880      	cmp	r0, #128	; 0x80
 800207c:	d904      	bls.n	8002088 <RCC_SetFlashLatencyFromMSIRange+0x78>
 800207e:	28a0      	cmp	r0, #160	; 0xa0
 8002080:	bf8c      	ite	hi
 8002082:	2202      	movhi	r2, #2
 8002084:	2201      	movls	r2, #1
 8002086:	e7d6      	b.n	8002036 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002088:	2200      	movs	r2, #0
 800208a:	e7d4      	b.n	8002036 <RCC_SetFlashLatencyFromMSIRange+0x26>
 800208c:	2202      	movs	r2, #2
 800208e:	e7d2      	b.n	8002036 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002090:	40021000 	.word	0x40021000
 8002094:	40007000 	.word	0x40007000
 8002098:	40022000 	.word	0x40022000

0800209c <HAL_RCC_GetPCLK1Freq>:
 800209c:	4a06      	ldr	r2, [pc, #24]	; (80020b8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800209e:	4b07      	ldr	r3, [pc, #28]	; (80020bc <HAL_RCC_GetPCLK1Freq+0x20>)
 80020a0:	6892      	ldr	r2, [r2, #8]
 80020a2:	4907      	ldr	r1, [pc, #28]	; (80020c0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80020a4:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80020a8:	4413      	add	r3, r2
 80020aa:	6808      	ldr	r0, [r1, #0]
 80020ac:	f893 3cd0 	ldrb.w	r3, [r3, #3280]	; 0xcd0
 80020b0:	f003 031f 	and.w	r3, r3, #31
 80020b4:	40d8      	lsrs	r0, r3
 80020b6:	4770      	bx	lr
 80020b8:	40021000 	.word	0x40021000
 80020bc:	080076b0 	.word	0x080076b0
 80020c0:	20000000 	.word	0x20000000

080020c4 <HAL_RCC_GetSysClockFreq>:
 80020c4:	4a26      	ldr	r2, [pc, #152]	; (8002160 <HAL_RCC_GetSysClockFreq+0x9c>)
 80020c6:	6893      	ldr	r3, [r2, #8]
 80020c8:	68d2      	ldr	r2, [r2, #12]
 80020ca:	f013 030c 	ands.w	r3, r3, #12
 80020ce:	d008      	beq.n	80020e2 <HAL_RCC_GetSysClockFreq+0x1e>
 80020d0:	2b0c      	cmp	r3, #12
 80020d2:	d03a      	beq.n	800214a <HAL_RCC_GetSysClockFreq+0x86>
 80020d4:	2b04      	cmp	r3, #4
 80020d6:	d036      	beq.n	8002146 <HAL_RCC_GetSysClockFreq+0x82>
 80020d8:	2b08      	cmp	r3, #8
 80020da:	4822      	ldr	r0, [pc, #136]	; (8002164 <HAL_RCC_GetSysClockFreq+0xa0>)
 80020dc:	bf18      	it	ne
 80020de:	2000      	movne	r0, #0
 80020e0:	4770      	bx	lr
 80020e2:	4a1f      	ldr	r2, [pc, #124]	; (8002160 <HAL_RCC_GetSysClockFreq+0x9c>)
 80020e4:	6811      	ldr	r1, [r2, #0]
 80020e6:	0709      	lsls	r1, r1, #28
 80020e8:	bf54      	ite	pl
 80020ea:	f8d2 1094 	ldrpl.w	r1, [r2, #148]	; 0x94
 80020ee:	6811      	ldrmi	r1, [r2, #0]
 80020f0:	4a1d      	ldr	r2, [pc, #116]	; (8002168 <HAL_RCC_GetSysClockFreq+0xa4>)
 80020f2:	bf54      	ite	pl
 80020f4:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
 80020f8:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
 80020fc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8002100:	f8d2 0cd8 	ldr.w	r0, [r2, #3288]	; 0xcd8
 8002104:	b303      	cbz	r3, 8002148 <HAL_RCC_GetSysClockFreq+0x84>
 8002106:	2b0c      	cmp	r3, #12
 8002108:	d127      	bne.n	800215a <HAL_RCC_GetSysClockFreq+0x96>
 800210a:	4b15      	ldr	r3, [pc, #84]	; (8002160 <HAL_RCC_GetSysClockFreq+0x9c>)
 800210c:	68db      	ldr	r3, [r3, #12]
 800210e:	f003 0303 	and.w	r3, r3, #3
 8002112:	2b02      	cmp	r3, #2
 8002114:	d01f      	beq.n	8002156 <HAL_RCC_GetSysClockFreq+0x92>
 8002116:	4a13      	ldr	r2, [pc, #76]	; (8002164 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002118:	2b03      	cmp	r3, #3
 800211a:	bf08      	it	eq
 800211c:	4610      	moveq	r0, r2
 800211e:	4b10      	ldr	r3, [pc, #64]	; (8002160 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002120:	68d9      	ldr	r1, [r3, #12]
 8002122:	68da      	ldr	r2, [r3, #12]
 8002124:	68db      	ldr	r3, [r3, #12]
 8002126:	f3c3 6341 	ubfx	r3, r3, #25, #2
 800212a:	f3c2 2206 	ubfx	r2, r2, #8, #7
 800212e:	f3c1 1102 	ubfx	r1, r1, #4, #3
 8002132:	3301      	adds	r3, #1
 8002134:	3101      	adds	r1, #1
 8002136:	fb00 f002 	mul.w	r0, r0, r2
 800213a:	005b      	lsls	r3, r3, #1
 800213c:	fbb0 f0f1 	udiv	r0, r0, r1
 8002140:	fbb0 f0f3 	udiv	r0, r0, r3
 8002144:	4770      	bx	lr
 8002146:	4809      	ldr	r0, [pc, #36]	; (800216c <HAL_RCC_GetSysClockFreq+0xa8>)
 8002148:	4770      	bx	lr
 800214a:	f002 0203 	and.w	r2, r2, #3
 800214e:	2a01      	cmp	r2, #1
 8002150:	d0c7      	beq.n	80020e2 <HAL_RCC_GetSysClockFreq+0x1e>
 8002152:	2000      	movs	r0, #0
 8002154:	e7d9      	b.n	800210a <HAL_RCC_GetSysClockFreq+0x46>
 8002156:	4805      	ldr	r0, [pc, #20]	; (800216c <HAL_RCC_GetSysClockFreq+0xa8>)
 8002158:	e7e1      	b.n	800211e <HAL_RCC_GetSysClockFreq+0x5a>
 800215a:	2000      	movs	r0, #0
 800215c:	4770      	bx	lr
 800215e:	bf00      	nop
 8002160:	40021000 	.word	0x40021000
 8002164:	007a1200 	.word	0x007a1200
 8002168:	080076b0 	.word	0x080076b0
 800216c:	00f42400 	.word	0x00f42400

08002170 <HAL_GPIO_Init>:
 8002170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002174:	680c      	ldr	r4, [r1, #0]
 8002176:	b085      	sub	sp, #20
 8002178:	2c00      	cmp	r4, #0
 800217a:	f000 8087 	beq.w	800228c <HAL_GPIO_Init+0x11c>
 800217e:	2300      	movs	r3, #0
 8002180:	f04f 0b01 	mov.w	fp, #1
 8002184:	fa0b fe03 	lsl.w	lr, fp, r3
 8002188:	ea1e 0a04 	ands.w	sl, lr, r4
 800218c:	d079      	beq.n	8002282 <HAL_GPIO_Init+0x112>
 800218e:	684e      	ldr	r6, [r1, #4]
 8002190:	f006 0203 	and.w	r2, r6, #3
 8002194:	1e55      	subs	r5, r2, #1
 8002196:	2d01      	cmp	r5, #1
 8002198:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800219c:	d979      	bls.n	8002292 <HAL_GPIO_Init+0x122>
 800219e:	2a03      	cmp	r2, #3
 80021a0:	f040 80bd 	bne.w	800231e <HAL_GPIO_Init+0x1ae>
 80021a4:	fa02 f20c 	lsl.w	r2, r2, ip
 80021a8:	43d5      	mvns	r5, r2
 80021aa:	f8d0 c000 	ldr.w	ip, [r0]
 80021ae:	ea0c 0505 	and.w	r5, ip, r5
 80021b2:	432a      	orrs	r2, r5
 80021b4:	f416 3f40 	tst.w	r6, #196608	; 0x30000
 80021b8:	6002      	str	r2, [r0, #0]
 80021ba:	d062      	beq.n	8002282 <HAL_GPIO_Init+0x112>
 80021bc:	4d5f      	ldr	r5, [pc, #380]	; (800233c <HAL_GPIO_Init+0x1cc>)
 80021be:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 80021c0:	f042 0201 	orr.w	r2, r2, #1
 80021c4:	662a      	str	r2, [r5, #96]	; 0x60
 80021c6:	6e2d      	ldr	r5, [r5, #96]	; 0x60
 80021c8:	f023 0203 	bic.w	r2, r3, #3
 80021cc:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80021d0:	f005 0501 	and.w	r5, r5, #1
 80021d4:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80021d8:	9503      	str	r5, [sp, #12]
 80021da:	f003 0503 	and.w	r5, r3, #3
 80021de:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80021e2:	f8d2 e008 	ldr.w	lr, [r2, #8]
 80021e6:	00ad      	lsls	r5, r5, #2
 80021e8:	270f      	movs	r7, #15
 80021ea:	fa07 fc05 	lsl.w	ip, r7, r5
 80021ee:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 80021f2:	ea2e 0e0c 	bic.w	lr, lr, ip
 80021f6:	d016      	beq.n	8002226 <HAL_GPIO_Init+0xb6>
 80021f8:	4f51      	ldr	r7, [pc, #324]	; (8002340 <HAL_GPIO_Init+0x1d0>)
 80021fa:	42b8      	cmp	r0, r7
 80021fc:	f000 8097 	beq.w	800232e <HAL_GPIO_Init+0x1be>
 8002200:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8002204:	42b8      	cmp	r0, r7
 8002206:	f000 8095 	beq.w	8002334 <HAL_GPIO_Init+0x1c4>
 800220a:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 800220e:	42b8      	cmp	r0, r7
 8002210:	f000 808a 	beq.w	8002328 <HAL_GPIO_Init+0x1b8>
 8002214:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8002218:	42b8      	cmp	r0, r7
 800221a:	bf0c      	ite	eq
 800221c:	f04f 0c04 	moveq.w	ip, #4
 8002220:	f04f 0c07 	movne.w	ip, #7
 8002224:	e001      	b.n	800222a <HAL_GPIO_Init+0xba>
 8002226:	f04f 0c00 	mov.w	ip, #0
 800222a:	fa0c f505 	lsl.w	r5, ip, r5
 800222e:	ea45 050e 	orr.w	r5, r5, lr
 8002232:	6095      	str	r5, [r2, #8]
 8002234:	4a43      	ldr	r2, [pc, #268]	; (8002344 <HAL_GPIO_Init+0x1d4>)
 8002236:	6892      	ldr	r2, [r2, #8]
 8002238:	ea6f 0c0a 	mvn.w	ip, sl
 800223c:	02f5      	lsls	r5, r6, #11
 800223e:	4d41      	ldr	r5, [pc, #260]	; (8002344 <HAL_GPIO_Init+0x1d4>)
 8002240:	bf54      	ite	pl
 8002242:	ea0c 0202 	andpl.w	r2, ip, r2
 8002246:	ea4a 0202 	orrmi.w	r2, sl, r2
 800224a:	60aa      	str	r2, [r5, #8]
 800224c:	68ed      	ldr	r5, [r5, #12]
 800224e:	02b2      	lsls	r2, r6, #10
 8002250:	4a3c      	ldr	r2, [pc, #240]	; (8002344 <HAL_GPIO_Init+0x1d4>)
 8002252:	bf54      	ite	pl
 8002254:	ea0c 0505 	andpl.w	r5, ip, r5
 8002258:	ea4a 0505 	orrmi.w	r5, sl, r5
 800225c:	60d5      	str	r5, [r2, #12]
 800225e:	6855      	ldr	r5, [r2, #4]
 8002260:	4a38      	ldr	r2, [pc, #224]	; (8002344 <HAL_GPIO_Init+0x1d4>)
 8002262:	03b7      	lsls	r7, r6, #14
 8002264:	bf54      	ite	pl
 8002266:	ea0c 0505 	andpl.w	r5, ip, r5
 800226a:	ea4a 0505 	orrmi.w	r5, sl, r5
 800226e:	6055      	str	r5, [r2, #4]
 8002270:	6812      	ldr	r2, [r2, #0]
 8002272:	03f5      	lsls	r5, r6, #15
 8002274:	4d33      	ldr	r5, [pc, #204]	; (8002344 <HAL_GPIO_Init+0x1d4>)
 8002276:	bf54      	ite	pl
 8002278:	ea0c 0202 	andpl.w	r2, ip, r2
 800227c:	ea4a 0202 	orrmi.w	r2, sl, r2
 8002280:	602a      	str	r2, [r5, #0]
 8002282:	3301      	adds	r3, #1
 8002284:	fa34 f203 	lsrs.w	r2, r4, r3
 8002288:	f47f af7c 	bne.w	8002184 <HAL_GPIO_Init+0x14>
 800228c:	b005      	add	sp, #20
 800228e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002292:	f8d0 8008 	ldr.w	r8, [r0, #8]
 8002296:	68cf      	ldr	r7, [r1, #12]
 8002298:	2503      	movs	r5, #3
 800229a:	fa05 f50c 	lsl.w	r5, r5, ip
 800229e:	ea28 0805 	bic.w	r8, r8, r5
 80022a2:	fa07 f90c 	lsl.w	r9, r7, ip
 80022a6:	ea49 0808 	orr.w	r8, r9, r8
 80022aa:	f8c0 8008 	str.w	r8, [r0, #8]
 80022ae:	f8d0 8004 	ldr.w	r8, [r0, #4]
 80022b2:	f3c6 1900 	ubfx	r9, r6, #4, #1
 80022b6:	ea28 080e 	bic.w	r8, r8, lr
 80022ba:	fa09 fe03 	lsl.w	lr, r9, r3
 80022be:	ea4e 0e08 	orr.w	lr, lr, r8
 80022c2:	43ed      	mvns	r5, r5
 80022c4:	f8c0 e004 	str.w	lr, [r0, #4]
 80022c8:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80022cc:	688f      	ldr	r7, [r1, #8]
 80022ce:	ea08 0805 	and.w	r8, r8, r5
 80022d2:	fa07 fe0c 	lsl.w	lr, r7, ip
 80022d6:	ea4e 0e08 	orr.w	lr, lr, r8
 80022da:	2a02      	cmp	r2, #2
 80022dc:	f8c0 e00c 	str.w	lr, [r0, #12]
 80022e0:	d002      	beq.n	80022e8 <HAL_GPIO_Init+0x178>
 80022e2:	fa02 f20c 	lsl.w	r2, r2, ip
 80022e6:	e760      	b.n	80021aa <HAL_GPIO_Init+0x3a>
 80022e8:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 80022ec:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80022f0:	f003 0e07 	and.w	lr, r3, #7
 80022f4:	f8d8 7020 	ldr.w	r7, [r8, #32]
 80022f8:	9701      	str	r7, [sp, #4]
 80022fa:	690f      	ldr	r7, [r1, #16]
 80022fc:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8002300:	fa07 f90e 	lsl.w	r9, r7, lr
 8002304:	270f      	movs	r7, #15
 8002306:	fa07 fe0e 	lsl.w	lr, r7, lr
 800230a:	9f01      	ldr	r7, [sp, #4]
 800230c:	ea27 0e0e 	bic.w	lr, r7, lr
 8002310:	ea49 0e0e 	orr.w	lr, r9, lr
 8002314:	fa02 f20c 	lsl.w	r2, r2, ip
 8002318:	f8c8 e020 	str.w	lr, [r8, #32]
 800231c:	e745      	b.n	80021aa <HAL_GPIO_Init+0x3a>
 800231e:	2503      	movs	r5, #3
 8002320:	fa05 f50c 	lsl.w	r5, r5, ip
 8002324:	43ed      	mvns	r5, r5
 8002326:	e7cf      	b.n	80022c8 <HAL_GPIO_Init+0x158>
 8002328:	f04f 0c03 	mov.w	ip, #3
 800232c:	e77d      	b.n	800222a <HAL_GPIO_Init+0xba>
 800232e:	f04f 0c01 	mov.w	ip, #1
 8002332:	e77a      	b.n	800222a <HAL_GPIO_Init+0xba>
 8002334:	f04f 0c02 	mov.w	ip, #2
 8002338:	e777      	b.n	800222a <HAL_GPIO_Init+0xba>
 800233a:	bf00      	nop
 800233c:	40021000 	.word	0x40021000
 8002340:	48000400 	.word	0x48000400
 8002344:	40010400 	.word	0x40010400

08002348 <HAL_DMA_IRQHandler>:
 8002348:	b470      	push	{r4, r5, r6}
 800234a:	e9d0 6310 	ldrd	r6, r3, [r0, #64]	; 0x40
 800234e:	2204      	movs	r2, #4
 8002350:	6831      	ldr	r1, [r6, #0]
 8002352:	6805      	ldr	r5, [r0, #0]
 8002354:	f003 031c 	and.w	r3, r3, #28
 8002358:	409a      	lsls	r2, r3
 800235a:	420a      	tst	r2, r1
 800235c:	682c      	ldr	r4, [r5, #0]
 800235e:	d00e      	beq.n	800237e <HAL_DMA_IRQHandler+0x36>
 8002360:	f014 0f04 	tst.w	r4, #4
 8002364:	d00b      	beq.n	800237e <HAL_DMA_IRQHandler+0x36>
 8002366:	682b      	ldr	r3, [r5, #0]
 8002368:	069b      	lsls	r3, r3, #26
 800236a:	d403      	bmi.n	8002374 <HAL_DMA_IRQHandler+0x2c>
 800236c:	682b      	ldr	r3, [r5, #0]
 800236e:	f023 0304 	bic.w	r3, r3, #4
 8002372:	602b      	str	r3, [r5, #0]
 8002374:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8002376:	6072      	str	r2, [r6, #4]
 8002378:	b1cb      	cbz	r3, 80023ae <HAL_DMA_IRQHandler+0x66>
 800237a:	bc70      	pop	{r4, r5, r6}
 800237c:	4718      	bx	r3
 800237e:	2202      	movs	r2, #2
 8002380:	409a      	lsls	r2, r3
 8002382:	420a      	tst	r2, r1
 8002384:	d015      	beq.n	80023b2 <HAL_DMA_IRQHandler+0x6a>
 8002386:	f014 0f02 	tst.w	r4, #2
 800238a:	d012      	beq.n	80023b2 <HAL_DMA_IRQHandler+0x6a>
 800238c:	682b      	ldr	r3, [r5, #0]
 800238e:	0699      	lsls	r1, r3, #26
 8002390:	d406      	bmi.n	80023a0 <HAL_DMA_IRQHandler+0x58>
 8002392:	682b      	ldr	r3, [r5, #0]
 8002394:	2101      	movs	r1, #1
 8002396:	f023 030a 	bic.w	r3, r3, #10
 800239a:	602b      	str	r3, [r5, #0]
 800239c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80023a0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80023a2:	6072      	str	r2, [r6, #4]
 80023a4:	2200      	movs	r2, #0
 80023a6:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d1e5      	bne.n	800237a <HAL_DMA_IRQHandler+0x32>
 80023ae:	bc70      	pop	{r4, r5, r6}
 80023b0:	4770      	bx	lr
 80023b2:	2208      	movs	r2, #8
 80023b4:	409a      	lsls	r2, r3
 80023b6:	420a      	tst	r2, r1
 80023b8:	d0f9      	beq.n	80023ae <HAL_DMA_IRQHandler+0x66>
 80023ba:	0722      	lsls	r2, r4, #28
 80023bc:	d5f7      	bpl.n	80023ae <HAL_DMA_IRQHandler+0x66>
 80023be:	682a      	ldr	r2, [r5, #0]
 80023c0:	6b41      	ldr	r1, [r0, #52]	; 0x34
 80023c2:	f022 020e 	bic.w	r2, r2, #14
 80023c6:	602a      	str	r2, [r5, #0]
 80023c8:	2201      	movs	r2, #1
 80023ca:	fa02 f303 	lsl.w	r3, r2, r3
 80023ce:	2400      	movs	r4, #0
 80023d0:	6073      	str	r3, [r6, #4]
 80023d2:	63c2      	str	r2, [r0, #60]	; 0x3c
 80023d4:	f880 4024 	strb.w	r4, [r0, #36]	; 0x24
 80023d8:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80023dc:	2900      	cmp	r1, #0
 80023de:	d0e6      	beq.n	80023ae <HAL_DMA_IRQHandler+0x66>
 80023e0:	bc70      	pop	{r4, r5, r6}
 80023e2:	4708      	bx	r1

080023e4 <HAL_DMA_Start_IT>:
 80023e4:	b4f0      	push	{r4, r5, r6, r7}
 80023e6:	f890 4024 	ldrb.w	r4, [r0, #36]	; 0x24
 80023ea:	2c01      	cmp	r4, #1
 80023ec:	d03d      	beq.n	800246a <HAL_DMA_Start_IT+0x86>
 80023ee:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 80023f2:	2601      	movs	r6, #1
 80023f4:	42b4      	cmp	r4, r6
 80023f6:	b2e5      	uxtb	r5, r4
 80023f8:	f880 6024 	strb.w	r6, [r0, #36]	; 0x24
 80023fc:	d005      	beq.n	800240a <HAL_DMA_Start_IT+0x26>
 80023fe:	2300      	movs	r3, #0
 8002400:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8002404:	bcf0      	pop	{r4, r5, r6, r7}
 8002406:	2002      	movs	r0, #2
 8002408:	4770      	bx	lr
 800240a:	6804      	ldr	r4, [r0, #0]
 800240c:	f8d0 c040 	ldr.w	ip, [r0, #64]	; 0x40
 8002410:	2702      	movs	r7, #2
 8002412:	2600      	movs	r6, #0
 8002414:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 8002418:	63c6      	str	r6, [r0, #60]	; 0x3c
 800241a:	6c47      	ldr	r7, [r0, #68]	; 0x44
 800241c:	6826      	ldr	r6, [r4, #0]
 800241e:	f007 071c 	and.w	r7, r7, #28
 8002422:	f026 0601 	bic.w	r6, r6, #1
 8002426:	6026      	str	r6, [r4, #0]
 8002428:	40bd      	lsls	r5, r7
 800242a:	6886      	ldr	r6, [r0, #8]
 800242c:	f8cc 5004 	str.w	r5, [ip, #4]
 8002430:	6063      	str	r3, [r4, #4]
 8002432:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8002434:	2e10      	cmp	r6, #16
 8002436:	bf0b      	itete	eq
 8002438:	60a2      	streq	r2, [r4, #8]
 800243a:	60a1      	strne	r1, [r4, #8]
 800243c:	60e1      	streq	r1, [r4, #12]
 800243e:	60e2      	strne	r2, [r4, #12]
 8002440:	b153      	cbz	r3, 8002458 <HAL_DMA_Start_IT+0x74>
 8002442:	6823      	ldr	r3, [r4, #0]
 8002444:	f043 030e 	orr.w	r3, r3, #14
 8002448:	6023      	str	r3, [r4, #0]
 800244a:	6823      	ldr	r3, [r4, #0]
 800244c:	f043 0301 	orr.w	r3, r3, #1
 8002450:	6023      	str	r3, [r4, #0]
 8002452:	2000      	movs	r0, #0
 8002454:	bcf0      	pop	{r4, r5, r6, r7}
 8002456:	4770      	bx	lr
 8002458:	6823      	ldr	r3, [r4, #0]
 800245a:	f023 0304 	bic.w	r3, r3, #4
 800245e:	6023      	str	r3, [r4, #0]
 8002460:	6823      	ldr	r3, [r4, #0]
 8002462:	f043 030a 	orr.w	r3, r3, #10
 8002466:	6023      	str	r3, [r4, #0]
 8002468:	e7ef      	b.n	800244a <HAL_DMA_Start_IT+0x66>
 800246a:	2002      	movs	r0, #2
 800246c:	bcf0      	pop	{r4, r5, r6, r7}
 800246e:	4770      	bx	lr

08002470 <HAL_NVIC_EnableIRQ.part.0>:
 8002470:	4a04      	ldr	r2, [pc, #16]	; (8002484 <HAL_NVIC_EnableIRQ.part.0+0x14>)
 8002472:	f000 011f 	and.w	r1, r0, #31
 8002476:	2301      	movs	r3, #1
 8002478:	0940      	lsrs	r0, r0, #5
 800247a:	408b      	lsls	r3, r1
 800247c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8002480:	4770      	bx	lr
 8002482:	bf00      	nop
 8002484:	e000e100 	.word	0xe000e100

08002488 <HAL_InitTick>:
 8002488:	b570      	push	{r4, r5, r6, lr}
 800248a:	4d10      	ldr	r5, [pc, #64]	; (80024cc <HAL_InitTick+0x44>)
 800248c:	4a10      	ldr	r2, [pc, #64]	; (80024d0 <HAL_InitTick+0x48>)
 800248e:	682b      	ldr	r3, [r5, #0]
 8002490:	fba2 2303 	umull	r2, r3, r2, r3
 8002494:	099b      	lsrs	r3, r3, #6
 8002496:	3b01      	subs	r3, #1
 8002498:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800249c:	d20c      	bcs.n	80024b8 <HAL_InitTick+0x30>
 800249e:	4a0d      	ldr	r2, [pc, #52]	; (80024d4 <HAL_InitTick+0x4c>)
 80024a0:	490d      	ldr	r1, [pc, #52]	; (80024d8 <HAL_InitTick+0x50>)
 80024a2:	6053      	str	r3, [r2, #4]
 80024a4:	23f0      	movs	r3, #240	; 0xf0
 80024a6:	f881 3023 	strb.w	r3, [r1, #35]	; 0x23
 80024aa:	2600      	movs	r6, #0
 80024ac:	2307      	movs	r3, #7
 80024ae:	280f      	cmp	r0, #15
 80024b0:	6096      	str	r6, [r2, #8]
 80024b2:	4604      	mov	r4, r0
 80024b4:	6013      	str	r3, [r2, #0]
 80024b6:	d901      	bls.n	80024bc <HAL_InitTick+0x34>
 80024b8:	2001      	movs	r0, #1
 80024ba:	bd70      	pop	{r4, r5, r6, pc}
 80024bc:	4601      	mov	r1, r0
 80024be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80024c2:	f7fd fe85 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80024c6:	606c      	str	r4, [r5, #4]
 80024c8:	4630      	mov	r0, r6
 80024ca:	bd70      	pop	{r4, r5, r6, pc}
 80024cc:	20000000 	.word	0x20000000
 80024d0:	10624dd3 	.word	0x10624dd3
 80024d4:	e000e010 	.word	0xe000e010
 80024d8:	e000ed00 	.word	0xe000ed00

080024dc <__NVIC_SystemReset>:
 80024dc:	f3bf 8f4f 	dsb	sy
 80024e0:	4905      	ldr	r1, [pc, #20]	; (80024f8 <__NVIC_SystemReset+0x1c>)
 80024e2:	4b06      	ldr	r3, [pc, #24]	; (80024fc <__NVIC_SystemReset+0x20>)
 80024e4:	68ca      	ldr	r2, [r1, #12]
 80024e6:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80024ea:	4313      	orrs	r3, r2
 80024ec:	60cb      	str	r3, [r1, #12]
 80024ee:	f3bf 8f4f 	dsb	sy
 80024f2:	bf00      	nop
 80024f4:	e7fd      	b.n	80024f2 <__NVIC_SystemReset+0x16>
 80024f6:	bf00      	nop
 80024f8:	e000ed00 	.word	0xe000ed00
 80024fc:	05fa0004 	.word	0x05fa0004

08002500 <acc_integration_sleep_us.constprop.0>:
 8002500:	b538      	push	{r3, r4, r5, lr}
 8002502:	4b52      	ldr	r3, [pc, #328]	; (800264c <acc_integration_sleep_us.constprop.0+0x14c>)
 8002504:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 8002508:	2100      	movs	r1, #0
 800250a:	2a01      	cmp	r2, #1
 800250c:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 8002510:	f000 808d 	beq.w	800262e <acc_integration_sleep_us.constprop.0+0x12e>
 8002514:	685a      	ldr	r2, [r3, #4]
 8002516:	2153      	movs	r1, #83	; 0x53
 8002518:	2502      	movs	r5, #2
 800251a:	20ca      	movs	r0, #202	; 0xca
 800251c:	2401      	movs	r4, #1
 800251e:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 8002522:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 8002526:	6250      	str	r0, [r2, #36]	; 0x24
 8002528:	6251      	str	r1, [r2, #36]	; 0x24
 800252a:	6891      	ldr	r1, [r2, #8]
 800252c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8002530:	6091      	str	r1, [r2, #8]
 8002532:	68d1      	ldr	r1, [r2, #12]
 8002534:	b2c9      	uxtb	r1, r1
 8002536:	f461 6190 	orn	r1, r1, #1152	; 0x480
 800253a:	60d1      	str	r1, [r2, #12]
 800253c:	68d1      	ldr	r1, [r2, #12]
 800253e:	0649      	lsls	r1, r1, #25
 8002540:	d564      	bpl.n	800260c <acc_integration_sleep_us.constprop.0+0x10c>
 8002542:	211f      	movs	r1, #31
 8002544:	6151      	str	r1, [r2, #20]
 8002546:	6891      	ldr	r1, [r2, #8]
 8002548:	4841      	ldr	r0, [pc, #260]	; (8002650 <acc_integration_sleep_us.constprop.0+0x150>)
 800254a:	f021 0107 	bic.w	r1, r1, #7
 800254e:	f041 0103 	orr.w	r1, r1, #3
 8002552:	6091      	str	r1, [r2, #8]
 8002554:	6801      	ldr	r1, [r0, #0]
 8002556:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800255a:	6001      	str	r1, [r0, #0]
 800255c:	6881      	ldr	r1, [r0, #8]
 800255e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002562:	6081      	str	r1, [r0, #8]
 8002564:	6891      	ldr	r1, [r2, #8]
 8002566:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800256a:	6091      	str	r1, [r2, #8]
 800256c:	6891      	ldr	r1, [r2, #8]
 800256e:	24ff      	movs	r4, #255	; 0xff
 8002570:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8002574:	2001      	movs	r0, #1
 8002576:	6091      	str	r1, [r2, #8]
 8002578:	6254      	str	r4, [r2, #36]	; 0x24
 800257a:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800257e:	f893 1051 	ldrb.w	r1, [r3, #81]	; 0x51
 8002582:	2200      	movs	r2, #0
 8002584:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002588:	2900      	cmp	r1, #0
 800258a:	d15b      	bne.n	8002644 <acc_integration_sleep_us.constprop.0+0x144>
 800258c:	b672      	cpsid	i
 800258e:	f3bf 8f4f 	dsb	sy
 8002592:	f3bf 8f6f 	isb	sy
 8002596:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 800259a:	b902      	cbnz	r2, 800259e <acc_integration_sleep_us.constprop.0+0x9e>
 800259c:	bf30      	wfi
 800259e:	b662      	cpsie	i
 80025a0:	f3bf 8f4f 	dsb	sy
 80025a4:	f3bf 8f6f 	isb	sy
 80025a8:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 80025ac:	2a00      	cmp	r2, #0
 80025ae:	d0ed      	beq.n	800258c <acc_integration_sleep_us.constprop.0+0x8c>
 80025b0:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 80025b4:	2100      	movs	r1, #0
 80025b6:	2a01      	cmp	r2, #1
 80025b8:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 80025bc:	d037      	beq.n	800262e <acc_integration_sleep_us.constprop.0+0x12e>
 80025be:	6858      	ldr	r0, [r3, #4]
 80025c0:	2253      	movs	r2, #83	; 0x53
 80025c2:	2401      	movs	r4, #1
 80025c4:	2502      	movs	r5, #2
 80025c6:	21ca      	movs	r1, #202	; 0xca
 80025c8:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 80025cc:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 80025d0:	6241      	str	r1, [r0, #36]	; 0x24
 80025d2:	6242      	str	r2, [r0, #36]	; 0x24
 80025d4:	6882      	ldr	r2, [r0, #8]
 80025d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80025da:	6082      	str	r2, [r0, #8]
 80025dc:	6882      	ldr	r2, [r0, #8]
 80025de:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80025e2:	6082      	str	r2, [r0, #8]
 80025e4:	681c      	ldr	r4, [r3, #0]
 80025e6:	e004      	b.n	80025f2 <acc_integration_sleep_us.constprop.0+0xf2>
 80025e8:	6819      	ldr	r1, [r3, #0]
 80025ea:	1b09      	subs	r1, r1, r4
 80025ec:	f5b1 7f7a 	cmp.w	r1, #1000	; 0x3e8
 80025f0:	d81f      	bhi.n	8002632 <acc_integration_sleep_us.constprop.0+0x132>
 80025f2:	68c2      	ldr	r2, [r0, #12]
 80025f4:	f012 0204 	ands.w	r2, r2, #4
 80025f8:	d0f6      	beq.n	80025e8 <acc_integration_sleep_us.constprop.0+0xe8>
 80025fa:	24ff      	movs	r4, #255	; 0xff
 80025fc:	2201      	movs	r2, #1
 80025fe:	2100      	movs	r1, #0
 8002600:	6244      	str	r4, [r0, #36]	; 0x24
 8002602:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002606:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800260a:	bd38      	pop	{r3, r4, r5, pc}
 800260c:	681c      	ldr	r4, [r3, #0]
 800260e:	68d1      	ldr	r1, [r2, #12]
 8002610:	f011 0104 	ands.w	r1, r1, #4
 8002614:	d195      	bne.n	8002542 <acc_integration_sleep_us.constprop.0+0x42>
 8002616:	6818      	ldr	r0, [r3, #0]
 8002618:	1b00      	subs	r0, r0, r4
 800261a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800261e:	d9f6      	bls.n	800260e <acc_integration_sleep_us.constprop.0+0x10e>
 8002620:	24ff      	movs	r4, #255	; 0xff
 8002622:	2003      	movs	r0, #3
 8002624:	6254      	str	r4, [r2, #36]	; 0x24
 8002626:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800262a:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800262e:	f7ff ff55 	bl	80024dc <__NVIC_SystemReset>
 8002632:	24ff      	movs	r4, #255	; 0xff
 8002634:	2103      	movs	r1, #3
 8002636:	6244      	str	r4, [r0, #36]	; 0x24
 8002638:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800263c:	f883 1025 	strb.w	r1, [r3, #37]	; 0x25
 8002640:	f7ff ff4c 	bl	80024dc <__NVIC_SystemReset>
 8002644:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002648:	e7b9      	b.n	80025be <acc_integration_sleep_us.constprop.0+0xbe>
 800264a:	bf00      	nop
 800264c:	200000ac 	.word	0x200000ac
 8002650:	40010400 	.word	0x40010400

08002654 <HAL_UART_Init.constprop.0>:
 8002654:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002658:	6f86      	ldr	r6, [r0, #120]	; 0x78
 800265a:	b0a1      	sub	sp, #132	; 0x84
 800265c:	4604      	mov	r4, r0
 800265e:	2e00      	cmp	r6, #0
 8002660:	d05e      	beq.n	8002720 <HAL_UART_Init.constprop.0+0xcc>
 8002662:	6825      	ldr	r5, [r4, #0]
 8002664:	68a3      	ldr	r3, [r4, #8]
 8002666:	6926      	ldr	r6, [r4, #16]
 8002668:	6960      	ldr	r0, [r4, #20]
 800266a:	4ac6      	ldr	r2, [pc, #792]	; (8002984 <HAL_UART_Init.constprop.0+0x330>)
 800266c:	2124      	movs	r1, #36	; 0x24
 800266e:	67a1      	str	r1, [r4, #120]	; 0x78
 8002670:	6829      	ldr	r1, [r5, #0]
 8002672:	f021 0101 	bic.w	r1, r1, #1
 8002676:	6029      	str	r1, [r5, #0]
 8002678:	4333      	orrs	r3, r6
 800267a:	6829      	ldr	r1, [r5, #0]
 800267c:	4303      	orrs	r3, r0
 800267e:	69e0      	ldr	r0, [r4, #28]
 8002680:	400a      	ands	r2, r1
 8002682:	4303      	orrs	r3, r0
 8002684:	4313      	orrs	r3, r2
 8002686:	602b      	str	r3, [r5, #0]
 8002688:	686b      	ldr	r3, [r5, #4]
 800268a:	68e1      	ldr	r1, [r4, #12]
 800268c:	4abe      	ldr	r2, [pc, #760]	; (8002988 <HAL_UART_Init.constprop.0+0x334>)
 800268e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002692:	430b      	orrs	r3, r1
 8002694:	606b      	str	r3, [r5, #4]
 8002696:	4295      	cmp	r5, r2
 8002698:	69a3      	ldr	r3, [r4, #24]
 800269a:	68aa      	ldr	r2, [r5, #8]
 800269c:	f000 80ba 	beq.w	8002814 <HAL_UART_Init.constprop.0+0x1c0>
 80026a0:	6a26      	ldr	r6, [r4, #32]
 80026a2:	49ba      	ldr	r1, [pc, #744]	; (800298c <HAL_UART_Init.constprop.0+0x338>)
 80026a4:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 80026a8:	4333      	orrs	r3, r6
 80026aa:	4313      	orrs	r3, r2
 80026ac:	428d      	cmp	r5, r1
 80026ae:	60ab      	str	r3, [r5, #8]
 80026b0:	d00e      	beq.n	80026d0 <HAL_UART_Init.constprop.0+0x7c>
 80026b2:	4bb7      	ldr	r3, [pc, #732]	; (8002990 <HAL_UART_Init.constprop.0+0x33c>)
 80026b4:	429d      	cmp	r5, r3
 80026b6:	f000 8215 	beq.w	8002ae4 <HAL_UART_Init.constprop.0+0x490>
 80026ba:	4bb6      	ldr	r3, [pc, #728]	; (8002994 <HAL_UART_Init.constprop.0+0x340>)
 80026bc:	429d      	cmp	r5, r3
 80026be:	f000 812e 	beq.w	800291e <HAL_UART_Init.constprop.0+0x2ca>
 80026c2:	2300      	movs	r3, #0
 80026c4:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80026c8:	2001      	movs	r0, #1
 80026ca:	b021      	add	sp, #132	; 0x84
 80026cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80026d0:	4bb1      	ldr	r3, [pc, #708]	; (8002998 <HAL_UART_Init.constprop.0+0x344>)
 80026d2:	4ab2      	ldr	r2, [pc, #712]	; (800299c <HAL_UART_Init.constprop.0+0x348>)
 80026d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80026d8:	f003 0303 	and.w	r3, r3, #3
 80026dc:	3b01      	subs	r3, #1
 80026de:	2b02      	cmp	r3, #2
 80026e0:	f200 813f 	bhi.w	8002962 <HAL_UART_Init.constprop.0+0x30e>
 80026e4:	4413      	add	r3, r2
 80026e6:	f893 3d08 	ldrb.w	r3, [r3, #3336]	; 0xd08
 80026ea:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80026ee:	f000 8163 	beq.w	80029b8 <HAL_UART_Init.constprop.0+0x364>
 80026f2:	2b08      	cmp	r3, #8
 80026f4:	d8e5      	bhi.n	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 80026f6:	a101      	add	r1, pc, #4	; (adr r1, 80026fc <HAL_UART_Init.constprop.0+0xa8>)
 80026f8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80026fc:	0800295d 	.word	0x0800295d
 8002700:	0800296b 	.word	0x0800296b
 8002704:	0800291b 	.word	0x0800291b
 8002708:	080026c3 	.word	0x080026c3
 800270c:	08002943 	.word	0x08002943
 8002710:	080026c3 	.word	0x080026c3
 8002714:	080026c3 	.word	0x080026c3
 8002718:	080026c3 	.word	0x080026c3
 800271c:	080028a9 	.word	0x080028a9
 8002720:	f880 6074 	strb.w	r6, [r0, #116]	; 0x74
 8002724:	225c      	movs	r2, #92	; 0x5c
 8002726:	a809      	add	r0, sp, #36	; 0x24
 8002728:	4631      	mov	r1, r6
 800272a:	e9cd 6604 	strd	r6, r6, [sp, #16]
 800272e:	e9cd 6606 	strd	r6, r6, [sp, #24]
 8002732:	9608      	str	r6, [sp, #32]
 8002734:	f004 f91e 	bl	8006974 <memset>
 8002738:	6825      	ldr	r5, [r4, #0]
 800273a:	4b94      	ldr	r3, [pc, #592]	; (800298c <HAL_UART_Init.constprop.0+0x338>)
 800273c:	429d      	cmp	r5, r3
 800273e:	f000 8200 	beq.w	8002b42 <HAL_UART_Init.constprop.0+0x4ee>
 8002742:	4b93      	ldr	r3, [pc, #588]	; (8002990 <HAL_UART_Init.constprop.0+0x33c>)
 8002744:	429d      	cmp	r5, r3
 8002746:	d18d      	bne.n	8002664 <HAL_UART_Init.constprop.0+0x10>
 8002748:	a809      	add	r0, sp, #36	; 0x24
 800274a:	2702      	movs	r7, #2
 800274c:	9612      	str	r6, [sp, #72]	; 0x48
 800274e:	9709      	str	r7, [sp, #36]	; 0x24
 8002750:	f7ff faf8 	bl	8001d44 <HAL_RCCEx_PeriphCLKConfig>
 8002754:	4606      	mov	r6, r0
 8002756:	2800      	cmp	r0, #0
 8002758:	f040 821e 	bne.w	8002b98 <HAL_UART_Init.constprop.0+0x544>
 800275c:	4b8e      	ldr	r3, [pc, #568]	; (8002998 <HAL_UART_Init.constprop.0+0x344>)
 800275e:	4d90      	ldr	r5, [pc, #576]	; (80029a0 <HAL_UART_Init.constprop.0+0x34c>)
 8002760:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8002762:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002766:	659a      	str	r2, [r3, #88]	; 0x58
 8002768:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800276a:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 800276e:	9201      	str	r2, [sp, #4]
 8002770:	9a01      	ldr	r2, [sp, #4]
 8002772:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002774:	f042 0201 	orr.w	r2, r2, #1
 8002778:	64da      	str	r2, [r3, #76]	; 0x4c
 800277a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800277c:	9705      	str	r7, [sp, #20]
 800277e:	f003 0301 	and.w	r3, r3, #1
 8002782:	200f      	movs	r0, #15
 8002784:	9300      	str	r3, [sp, #0]
 8002786:	2203      	movs	r2, #3
 8002788:	2307      	movs	r3, #7
 800278a:	a904      	add	r1, sp, #16
 800278c:	9004      	str	r0, [sp, #16]
 800278e:	f105 0954 	add.w	r9, r5, #84	; 0x54
 8002792:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002796:	f8dd c000 	ldr.w	ip, [sp]
 800279a:	9207      	str	r2, [sp, #28]
 800279c:	9308      	str	r3, [sp, #32]
 800279e:	9606      	str	r6, [sp, #24]
 80027a0:	f04f 0880 	mov.w	r8, #128	; 0x80
 80027a4:	f7ff fce4 	bl	8002170 <HAL_GPIO_Init>
 80027a8:	4b7e      	ldr	r3, [pc, #504]	; (80029a4 <HAL_UART_Init.constprop.0+0x350>)
 80027aa:	656b      	str	r3, [r5, #84]	; 0x54
 80027ac:	4648      	mov	r0, r9
 80027ae:	e9c5 6617 	strd	r6, r6, [r5, #92]	; 0x5c
 80027b2:	e9c5 661a 	strd	r6, r6, [r5, #104]	; 0x68
 80027b6:	e9c5 661c 	strd	r6, r6, [r5, #112]	; 0x70
 80027ba:	65af      	str	r7, [r5, #88]	; 0x58
 80027bc:	f8c5 8064 	str.w	r8, [r5, #100]	; 0x64
 80027c0:	f7fd fd8a 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80027c4:	4603      	mov	r3, r0
 80027c6:	2800      	cmp	r0, #0
 80027c8:	f040 81e6 	bne.w	8002b98 <HAL_UART_Init.constprop.0+0x544>
 80027cc:	f105 069c 	add.w	r6, r5, #156	; 0x9c
 80027d0:	4975      	ldr	r1, [pc, #468]	; (80029a8 <HAL_UART_Init.constprop.0+0x354>)
 80027d2:	f8c4 9070 	str.w	r9, [r4, #112]	; 0x70
 80027d6:	2210      	movs	r2, #16
 80027d8:	4630      	mov	r0, r6
 80027da:	f8c5 109c 	str.w	r1, [r5, #156]	; 0x9c
 80027de:	e9c5 382a 	strd	r3, r8, [r5, #168]	; 0xa8
 80027e2:	e9c5 332c 	strd	r3, r3, [r5, #176]	; 0xb0
 80027e6:	e9c5 332e 	strd	r3, r3, [r5, #184]	; 0xb8
 80027ea:	67ec      	str	r4, [r5, #124]	; 0x7c
 80027ec:	f8c5 70a0 	str.w	r7, [r5, #160]	; 0xa0
 80027f0:	f8c5 20a4 	str.w	r2, [r5, #164]	; 0xa4
 80027f4:	f7fd fd70 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80027f8:	4601      	mov	r1, r0
 80027fa:	2800      	cmp	r0, #0
 80027fc:	f040 81cc 	bne.w	8002b98 <HAL_UART_Init.constprop.0+0x544>
 8002800:	66e6      	str	r6, [r4, #108]	; 0x6c
 8002802:	2026      	movs	r0, #38	; 0x26
 8002804:	f8c5 40c4 	str.w	r4, [r5, #196]	; 0xc4
 8002808:	f7fd fce2 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800280c:	2026      	movs	r0, #38	; 0x26
 800280e:	f7ff fe2f 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8002812:	e726      	b.n	8002662 <HAL_UART_Init.constprop.0+0xe>
 8002814:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 8002818:	4313      	orrs	r3, r2
 800281a:	495f      	ldr	r1, [pc, #380]	; (8002998 <HAL_UART_Init.constprop.0+0x344>)
 800281c:	60ab      	str	r3, [r5, #8]
 800281e:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8002822:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8002826:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800282a:	f000 8188 	beq.w	8002b3e <HAL_UART_Init.constprop.0+0x4ea>
 800282e:	d80c      	bhi.n	800284a <HAL_UART_Init.constprop.0+0x1f6>
 8002830:	2b00      	cmp	r3, #0
 8002832:	f000 817e 	beq.w	8002b32 <HAL_UART_Init.constprop.0+0x4de>
 8002836:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800283a:	f47f af42 	bne.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 800283e:	f7ff fc41 	bl	80020c4 <HAL_RCC_GetSysClockFreq>
 8002842:	2800      	cmp	r0, #0
 8002844:	f000 8081 	beq.w	800294a <HAL_UART_Init.constprop.0+0x2f6>
 8002848:	e005      	b.n	8002856 <HAL_UART_Init.constprop.0+0x202>
 800284a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800284e:	f47f af38 	bne.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 8002852:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8002856:	6862      	ldr	r2, [r4, #4]
 8002858:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800285c:	4283      	cmp	r3, r0
 800285e:	f63f af30 	bhi.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 8002862:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 8002866:	f63f af2c 	bhi.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 800286a:	0856      	lsrs	r6, r2, #1
 800286c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002870:	2700      	movs	r7, #0
 8002872:	fbe3 6700 	umlal	r6, r7, r3, r0
 8002876:	f04f 0800 	mov.w	r8, #0
 800287a:	4643      	mov	r3, r8
 800287c:	4630      	mov	r0, r6
 800287e:	4639      	mov	r1, r7
 8002880:	f003 f88a 	bl	8005998 <__aeabi_uldivmod>
 8002884:	4b49      	ldr	r3, [pc, #292]	; (80029ac <HAL_UART_Init.constprop.0+0x358>)
 8002886:	f5a0 7240 	sub.w	r2, r0, #768	; 0x300
 800288a:	429a      	cmp	r2, r3
 800288c:	f63f af19 	bhi.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 8002890:	6825      	ldr	r5, [r4, #0]
 8002892:	60e8      	str	r0, [r5, #12]
 8002894:	e9c4 8819 	strd	r8, r8, [r4, #100]	; 0x64
 8002898:	e019      	b.n	80028ce <HAL_UART_Init.constprop.0+0x27a>
 800289a:	2b30      	cmp	r3, #48	; 0x30
 800289c:	f47f af11 	bne.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 80028a0:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80028a4:	f000 80a1 	beq.w	80029ea <HAL_UART_Init.constprop.0+0x396>
 80028a8:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80028ac:	6863      	ldr	r3, [r4, #4]
 80028ae:	f64f 72ef 	movw	r2, #65519	; 0xffef
 80028b2:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 80028b6:	fbb0 f0f3 	udiv	r0, r0, r3
 80028ba:	f1a0 0310 	sub.w	r3, r0, #16
 80028be:	4293      	cmp	r3, r2
 80028c0:	f63f aeff 	bhi.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 80028c4:	6825      	ldr	r5, [r4, #0]
 80028c6:	2300      	movs	r3, #0
 80028c8:	60e8      	str	r0, [r5, #12]
 80028ca:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80028ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80028d0:	2b00      	cmp	r3, #0
 80028d2:	f040 80af 	bne.w	8002a34 <HAL_UART_Init.constprop.0+0x3e0>
 80028d6:	686b      	ldr	r3, [r5, #4]
 80028d8:	4a31      	ldr	r2, [pc, #196]	; (80029a0 <HAL_UART_Init.constprop.0+0x34c>)
 80028da:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 80028de:	606b      	str	r3, [r5, #4]
 80028e0:	68ab      	ldr	r3, [r5, #8]
 80028e2:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 80028e6:	60ab      	str	r3, [r5, #8]
 80028e8:	682b      	ldr	r3, [r5, #0]
 80028ea:	2100      	movs	r1, #0
 80028ec:	f043 0301 	orr.w	r3, r3, #1
 80028f0:	602b      	str	r3, [r5, #0]
 80028f2:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 80028f6:	6816      	ldr	r6, [r2, #0]
 80028f8:	682b      	ldr	r3, [r5, #0]
 80028fa:	071a      	lsls	r2, r3, #28
 80028fc:	f100 808e 	bmi.w	8002a1c <HAL_UART_Init.constprop.0+0x3c8>
 8002900:	682b      	ldr	r3, [r5, #0]
 8002902:	075b      	lsls	r3, r3, #29
 8002904:	f100 80e1 	bmi.w	8002aca <HAL_UART_Init.constprop.0+0x476>
 8002908:	2300      	movs	r3, #0
 800290a:	2220      	movs	r2, #32
 800290c:	67a2      	str	r2, [r4, #120]	; 0x78
 800290e:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
 8002912:	67e2      	str	r2, [r4, #124]	; 0x7c
 8002914:	4618      	mov	r0, r3
 8002916:	6623      	str	r3, [r4, #96]	; 0x60
 8002918:	e6d7      	b.n	80026ca <HAL_UART_Init.constprop.0+0x76>
 800291a:	4825      	ldr	r0, [pc, #148]	; (80029b0 <HAL_UART_Init.constprop.0+0x35c>)
 800291c:	e7c6      	b.n	80028ac <HAL_UART_Init.constprop.0+0x258>
 800291e:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8002922:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002926:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800292a:	2b20      	cmp	r3, #32
 800292c:	f000 8136 	beq.w	8002b9c <HAL_UART_Init.constprop.0+0x548>
 8002930:	d8b3      	bhi.n	800289a <HAL_UART_Init.constprop.0+0x246>
 8002932:	b17b      	cbz	r3, 8002954 <HAL_UART_Init.constprop.0+0x300>
 8002934:	2b10      	cmp	r3, #16
 8002936:	f47f aec4 	bne.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 800293a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800293e:	f000 80e2 	beq.w	8002b06 <HAL_UART_Init.constprop.0+0x4b2>
 8002942:	f7ff fbbf 	bl	80020c4 <HAL_RCC_GetSysClockFreq>
 8002946:	2800      	cmp	r0, #0
 8002948:	d1b0      	bne.n	80028ac <HAL_UART_Init.constprop.0+0x258>
 800294a:	2300      	movs	r3, #0
 800294c:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002950:	6825      	ldr	r5, [r4, #0]
 8002952:	e7bc      	b.n	80028ce <HAL_UART_Init.constprop.0+0x27a>
 8002954:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002958:	f000 80cf 	beq.w	8002afa <HAL_UART_Init.constprop.0+0x4a6>
 800295c:	f7ff fb9e 	bl	800209c <HAL_RCC_GetPCLK1Freq>
 8002960:	e7f1      	b.n	8002946 <HAL_UART_Init.constprop.0+0x2f2>
 8002962:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002966:	f000 80d4 	beq.w	8002b12 <HAL_UART_Init.constprop.0+0x4be>
 800296a:	4b0b      	ldr	r3, [pc, #44]	; (8002998 <HAL_UART_Init.constprop.0+0x344>)
 800296c:	4911      	ldr	r1, [pc, #68]	; (80029b4 <HAL_UART_Init.constprop.0+0x360>)
 800296e:	689b      	ldr	r3, [r3, #8]
 8002970:	6808      	ldr	r0, [r1, #0]
 8002972:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002976:	441a      	add	r2, r3
 8002978:	f892 3cd0 	ldrb.w	r3, [r2, #3280]	; 0xcd0
 800297c:	f003 031f 	and.w	r3, r3, #31
 8002980:	40d8      	lsrs	r0, r3
 8002982:	e7e0      	b.n	8002946 <HAL_UART_Init.constprop.0+0x2f2>
 8002984:	efff69f3 	.word	0xefff69f3
 8002988:	40008000 	.word	0x40008000
 800298c:	40013800 	.word	0x40013800
 8002990:	40004400 	.word	0x40004400
 8002994:	40004800 	.word	0x40004800
 8002998:	40021000 	.word	0x40021000
 800299c:	080076b0 	.word	0x080076b0
 80029a0:	200000ac 	.word	0x200000ac
 80029a4:	4002006c 	.word	0x4002006c
 80029a8:	40020080 	.word	0x40020080
 80029ac:	000ffcff 	.word	0x000ffcff
 80029b0:	00f42400 	.word	0x00f42400
 80029b4:	20000000 	.word	0x20000000
 80029b8:	2b08      	cmp	r3, #8
 80029ba:	f63f ae82 	bhi.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 80029be:	a101      	add	r1, pc, #4	; (adr r1, 80029c4 <HAL_UART_Init.constprop.0+0x370>)
 80029c0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80029c4:	08002afb 	.word	0x08002afb
 80029c8:	08002b13 	.word	0x08002b13
 80029cc:	080029e9 	.word	0x080029e9
 80029d0:	080026c3 	.word	0x080026c3
 80029d4:	08002b07 	.word	0x08002b07
 80029d8:	080026c3 	.word	0x080026c3
 80029dc:	080026c3 	.word	0x080026c3
 80029e0:	080026c3 	.word	0x080026c3
 80029e4:	080029eb 	.word	0x080029eb
 80029e8:	486f      	ldr	r0, [pc, #444]	; (8002ba8 <HAL_UART_Init.constprop.0+0x554>)
 80029ea:	6862      	ldr	r2, [r4, #4]
 80029ec:	0853      	lsrs	r3, r2, #1
 80029ee:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80029f2:	f64f 73ef 	movw	r3, #65519	; 0xffef
 80029f6:	fbb0 f0f2 	udiv	r0, r0, r2
 80029fa:	f1a0 0210 	sub.w	r2, r0, #16
 80029fe:	429a      	cmp	r2, r3
 8002a00:	f63f ae5f 	bhi.w	80026c2 <HAL_UART_Init.constprop.0+0x6e>
 8002a04:	f020 030f 	bic.w	r3, r0, #15
 8002a08:	b29b      	uxth	r3, r3
 8002a0a:	6825      	ldr	r5, [r4, #0]
 8002a0c:	f3c0 0042 	ubfx	r0, r0, #1, #3
 8002a10:	4318      	orrs	r0, r3
 8002a12:	2300      	movs	r3, #0
 8002a14:	60e8      	str	r0, [r5, #12]
 8002a16:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002a1a:	e758      	b.n	80028ce <HAL_UART_Init.constprop.0+0x27a>
 8002a1c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002a20:	4632      	mov	r2, r6
 8002a22:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8002a26:	4620      	mov	r0, r4
 8002a28:	f7fd fbfe 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002a2c:	2800      	cmp	r0, #0
 8002a2e:	d157      	bne.n	8002ae0 <HAL_UART_Init.constprop.0+0x48c>
 8002a30:	6825      	ldr	r5, [r4, #0]
 8002a32:	e765      	b.n	8002900 <HAL_UART_Init.constprop.0+0x2ac>
 8002a34:	07de      	lsls	r6, r3, #31
 8002a36:	d505      	bpl.n	8002a44 <HAL_UART_Init.constprop.0+0x3f0>
 8002a38:	686a      	ldr	r2, [r5, #4]
 8002a3a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8002a3c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002a40:	430a      	orrs	r2, r1
 8002a42:	606a      	str	r2, [r5, #4]
 8002a44:	0798      	lsls	r0, r3, #30
 8002a46:	d505      	bpl.n	8002a54 <HAL_UART_Init.constprop.0+0x400>
 8002a48:	686a      	ldr	r2, [r5, #4]
 8002a4a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002a4c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002a50:	430a      	orrs	r2, r1
 8002a52:	606a      	str	r2, [r5, #4]
 8002a54:	0759      	lsls	r1, r3, #29
 8002a56:	d505      	bpl.n	8002a64 <HAL_UART_Init.constprop.0+0x410>
 8002a58:	686a      	ldr	r2, [r5, #4]
 8002a5a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002a5c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002a60:	430a      	orrs	r2, r1
 8002a62:	606a      	str	r2, [r5, #4]
 8002a64:	071a      	lsls	r2, r3, #28
 8002a66:	d505      	bpl.n	8002a74 <HAL_UART_Init.constprop.0+0x420>
 8002a68:	686a      	ldr	r2, [r5, #4]
 8002a6a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002a6c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002a70:	430a      	orrs	r2, r1
 8002a72:	606a      	str	r2, [r5, #4]
 8002a74:	06df      	lsls	r7, r3, #27
 8002a76:	d505      	bpl.n	8002a84 <HAL_UART_Init.constprop.0+0x430>
 8002a78:	68aa      	ldr	r2, [r5, #8]
 8002a7a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8002a7c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002a80:	430a      	orrs	r2, r1
 8002a82:	60aa      	str	r2, [r5, #8]
 8002a84:	069e      	lsls	r6, r3, #26
 8002a86:	d505      	bpl.n	8002a94 <HAL_UART_Init.constprop.0+0x440>
 8002a88:	68aa      	ldr	r2, [r5, #8]
 8002a8a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8002a8c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002a90:	430a      	orrs	r2, r1
 8002a92:	60aa      	str	r2, [r5, #8]
 8002a94:	0658      	lsls	r0, r3, #25
 8002a96:	d50e      	bpl.n	8002ab6 <HAL_UART_Init.constprop.0+0x462>
 8002a98:	686a      	ldr	r2, [r5, #4]
 8002a9a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8002a9c:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8002aa0:	430a      	orrs	r2, r1
 8002aa2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8002aa6:	606a      	str	r2, [r5, #4]
 8002aa8:	d105      	bne.n	8002ab6 <HAL_UART_Init.constprop.0+0x462>
 8002aaa:	686a      	ldr	r2, [r5, #4]
 8002aac:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8002aae:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8002ab2:	430a      	orrs	r2, r1
 8002ab4:	606a      	str	r2, [r5, #4]
 8002ab6:	0619      	lsls	r1, r3, #24
 8002ab8:	f57f af0d 	bpl.w	80028d6 <HAL_UART_Init.constprop.0+0x282>
 8002abc:	686b      	ldr	r3, [r5, #4]
 8002abe:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8002ac0:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8002ac4:	4313      	orrs	r3, r2
 8002ac6:	606b      	str	r3, [r5, #4]
 8002ac8:	e705      	b.n	80028d6 <HAL_UART_Init.constprop.0+0x282>
 8002aca:	4632      	mov	r2, r6
 8002acc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002ad0:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	f7fd fba7 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002ada:	2800      	cmp	r0, #0
 8002adc:	f43f af14 	beq.w	8002908 <HAL_UART_Init.constprop.0+0x2b4>
 8002ae0:	2003      	movs	r0, #3
 8002ae2:	e5f2      	b.n	80026ca <HAL_UART_Init.constprop.0+0x76>
 8002ae4:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8002ae8:	4a30      	ldr	r2, [pc, #192]	; (8002bac <HAL_UART_Init.constprop.0+0x558>)
 8002aea:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002aee:	f003 030c 	and.w	r3, r3, #12
 8002af2:	4413      	add	r3, r2
 8002af4:	f893 3d0c 	ldrb.w	r3, [r3, #3340]	; 0xd0c
 8002af8:	e5f7      	b.n	80026ea <HAL_UART_Init.constprop.0+0x96>
 8002afa:	f7ff facf 	bl	800209c <HAL_RCC_GetPCLK1Freq>
 8002afe:	2800      	cmp	r0, #0
 8002b00:	f43f af23 	beq.w	800294a <HAL_UART_Init.constprop.0+0x2f6>
 8002b04:	e771      	b.n	80029ea <HAL_UART_Init.constprop.0+0x396>
 8002b06:	f7ff fadd 	bl	80020c4 <HAL_RCC_GetSysClockFreq>
 8002b0a:	2800      	cmp	r0, #0
 8002b0c:	f43f af1d 	beq.w	800294a <HAL_UART_Init.constprop.0+0x2f6>
 8002b10:	e76b      	b.n	80029ea <HAL_UART_Init.constprop.0+0x396>
 8002b12:	4b27      	ldr	r3, [pc, #156]	; (8002bb0 <HAL_UART_Init.constprop.0+0x55c>)
 8002b14:	4927      	ldr	r1, [pc, #156]	; (8002bb4 <HAL_UART_Init.constprop.0+0x560>)
 8002b16:	689b      	ldr	r3, [r3, #8]
 8002b18:	6808      	ldr	r0, [r1, #0]
 8002b1a:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002b1e:	441a      	add	r2, r3
 8002b20:	f892 3cd0 	ldrb.w	r3, [r2, #3280]	; 0xcd0
 8002b24:	f003 031f 	and.w	r3, r3, #31
 8002b28:	40d8      	lsrs	r0, r3
 8002b2a:	2800      	cmp	r0, #0
 8002b2c:	f43f af0d 	beq.w	800294a <HAL_UART_Init.constprop.0+0x2f6>
 8002b30:	e75b      	b.n	80029ea <HAL_UART_Init.constprop.0+0x396>
 8002b32:	f7ff fab3 	bl	800209c <HAL_RCC_GetPCLK1Freq>
 8002b36:	2800      	cmp	r0, #0
 8002b38:	f43f af07 	beq.w	800294a <HAL_UART_Init.constprop.0+0x2f6>
 8002b3c:	e68b      	b.n	8002856 <HAL_UART_Init.constprop.0+0x202>
 8002b3e:	481a      	ldr	r0, [pc, #104]	; (8002ba8 <HAL_UART_Init.constprop.0+0x554>)
 8002b40:	e689      	b.n	8002856 <HAL_UART_Init.constprop.0+0x202>
 8002b42:	2301      	movs	r3, #1
 8002b44:	a809      	add	r0, sp, #36	; 0x24
 8002b46:	9611      	str	r6, [sp, #68]	; 0x44
 8002b48:	9309      	str	r3, [sp, #36]	; 0x24
 8002b4a:	f7ff f8fb 	bl	8001d44 <HAL_RCCEx_PeriphCLKConfig>
 8002b4e:	bb18      	cbnz	r0, 8002b98 <HAL_UART_Init.constprop.0+0x544>
 8002b50:	4b17      	ldr	r3, [pc, #92]	; (8002bb0 <HAL_UART_Init.constprop.0+0x55c>)
 8002b52:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002b54:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002b58:	661a      	str	r2, [r3, #96]	; 0x60
 8002b5a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002b5c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002b60:	9203      	str	r2, [sp, #12]
 8002b62:	9a03      	ldr	r2, [sp, #12]
 8002b64:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002b66:	f042 0201 	orr.w	r2, r2, #1
 8002b6a:	64da      	str	r2, [r3, #76]	; 0x4c
 8002b6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b6e:	9006      	str	r0, [sp, #24]
 8002b70:	f003 0301 	and.w	r3, r3, #1
 8002b74:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002b78:	9302      	str	r3, [sp, #8]
 8002b7a:	2502      	movs	r5, #2
 8002b7c:	2203      	movs	r2, #3
 8002b7e:	2307      	movs	r3, #7
 8002b80:	9004      	str	r0, [sp, #16]
 8002b82:	a904      	add	r1, sp, #16
 8002b84:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002b88:	9505      	str	r5, [sp, #20]
 8002b8a:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8002b8e:	9e02      	ldr	r6, [sp, #8]
 8002b90:	f7ff faee 	bl	8002170 <HAL_GPIO_Init>
 8002b94:	6825      	ldr	r5, [r4, #0]
 8002b96:	e565      	b.n	8002664 <HAL_UART_Init.constprop.0+0x10>
 8002b98:	f7ff fca0 	bl	80024dc <__NVIC_SystemReset>
 8002b9c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002ba0:	4801      	ldr	r0, [pc, #4]	; (8002ba8 <HAL_UART_Init.constprop.0+0x554>)
 8002ba2:	f47f ae83 	bne.w	80028ac <HAL_UART_Init.constprop.0+0x258>
 8002ba6:	e720      	b.n	80029ea <HAL_UART_Init.constprop.0+0x396>
 8002ba8:	00f42400 	.word	0x00f42400
 8002bac:	080076b0 	.word	0x080076b0
 8002bb0:	40021000 	.word	0x40021000
 8002bb4:	20000000 	.word	0x20000000

08002bb8 <acc_hal_integration_sensor_transfer16>:
 8002bb8:	b570      	push	{r4, r5, r6, lr}
 8002bba:	4c86      	ldr	r4, [pc, #536]	; (8002dd4 <acc_hal_integration_sensor_transfer16+0x21c>)
 8002bbc:	f894 3140 	ldrb.w	r3, [r4, #320]	; 0x140
 8002bc0:	2000      	movs	r0, #0
 8002bc2:	2b01      	cmp	r3, #1
 8002bc4:	f884 0050 	strb.w	r0, [r4, #80]	; 0x50
 8002bc8:	d00f      	beq.n	8002bea <acc_hal_integration_sensor_transfer16+0x32>
 8002bca:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002bce:	2001      	movs	r0, #1
 8002bd0:	4283      	cmp	r3, r0
 8002bd2:	b2dd      	uxtb	r5, r3
 8002bd4:	f884 0140 	strb.w	r0, [r4, #320]	; 0x140
 8002bd8:	d00e      	beq.n	8002bf8 <acc_hal_integration_sensor_transfer16+0x40>
 8002bda:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8002bde:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002be2:	d003      	beq.n	8002bec <acc_hal_integration_sensor_transfer16+0x34>
 8002be4:	2300      	movs	r3, #0
 8002be6:	f884 3140 	strb.w	r3, [r4, #320]	; 0x140
 8002bea:	bd70      	pop	{r4, r5, r6, pc}
 8002bec:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d1f7      	bne.n	8002be4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002bf4:	2d04      	cmp	r5, #4
 8002bf6:	d1f5      	bne.n	8002be4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002bf8:	2900      	cmp	r1, #0
 8002bfa:	d0f3      	beq.n	8002be4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002bfc:	b293      	uxth	r3, r2
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d0f0      	beq.n	8002be4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002c02:	f894 2141 	ldrb.w	r2, [r4, #321]	; 0x141
 8002c06:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8002c0a:	f8d4 60f0 	ldr.w	r6, [r4, #240]	; 0xf0
 8002c0e:	2a04      	cmp	r2, #4
 8002c10:	bf18      	it	ne
 8002c12:	2205      	movne	r2, #5
 8002c14:	f04f 0000 	mov.w	r0, #0
 8002c18:	bf18      	it	ne
 8002c1a:	f884 2141 	strbne.w	r2, [r4, #321]	; 0x141
 8002c1e:	f8c4 0144 	str.w	r0, [r4, #324]	; 0x144
 8002c22:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002c26:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002c2a:	686a      	ldr	r2, [r5, #4]
 8002c2c:	f8c4 111c 	str.w	r1, [r4, #284]	; 0x11c
 8002c30:	f422 42c0 	bic.w	r2, r2, #24576	; 0x6000
 8002c34:	f5b6 6fe0 	cmp.w	r6, #1792	; 0x700
 8002c38:	e9c4 004c 	strd	r0, r0, [r4, #304]	; 0x130
 8002c3c:	f8a4 3120 	strh.w	r3, [r4, #288]	; 0x120
 8002c40:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8002c44:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
 8002c48:	606a      	str	r2, [r5, #4]
 8002c4a:	d929      	bls.n	8002ca0 <acc_hal_integration_sensor_transfer16+0xe8>
 8002c4c:	686b      	ldr	r3, [r5, #4]
 8002c4e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002c52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002c56:	606b      	str	r3, [r5, #4]
 8002c58:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002c5c:	2b04      	cmp	r3, #4
 8002c5e:	bf07      	ittee	eq
 8002c60:	4a5d      	ldreq	r2, [pc, #372]	; (8002dd8 <acc_hal_integration_sensor_transfer16+0x220>)
 8002c62:	4b5e      	ldreq	r3, [pc, #376]	; (8002ddc <acc_hal_integration_sensor_transfer16+0x224>)
 8002c64:	4a5e      	ldrne	r2, [pc, #376]	; (8002de0 <acc_hal_integration_sensor_transfer16+0x228>)
 8002c66:	4b5f      	ldrne	r3, [pc, #380]	; (8002de4 <acc_hal_integration_sensor_transfer16+0x22c>)
 8002c68:	e9c0 320b 	strd	r3, r2, [r0, #44]	; 0x2c
 8002c6c:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002c70:	4a5d      	ldr	r2, [pc, #372]	; (8002de8 <acc_hal_integration_sensor_transfer16+0x230>)
 8002c72:	6342      	str	r2, [r0, #52]	; 0x34
 8002c74:	2600      	movs	r6, #0
 8002c76:	460a      	mov	r2, r1
 8002c78:	b29b      	uxth	r3, r3
 8002c7a:	f105 010c 	add.w	r1, r5, #12
 8002c7e:	6386      	str	r6, [r0, #56]	; 0x38
 8002c80:	f7ff fbb0 	bl	80023e4 <HAL_DMA_Start_IT>
 8002c84:	4605      	mov	r5, r0
 8002c86:	b378      	cbz	r0, 8002ce8 <acc_hal_integration_sensor_transfer16+0x130>
 8002c88:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002c8c:	f884 6140 	strb.w	r6, [r4, #320]	; 0x140
 8002c90:	f043 0310 	orr.w	r3, r3, #16
 8002c94:	2201      	movs	r2, #1
 8002c96:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002c9a:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002c9e:	bd70      	pop	{r4, r5, r6, pc}
 8002ca0:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002ca4:	686a      	ldr	r2, [r5, #4]
 8002ca6:	6980      	ldr	r0, [r0, #24]
 8002ca8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002cac:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002cb0:	606a      	str	r2, [r5, #4]
 8002cb2:	d05f      	beq.n	8002d74 <acc_hal_integration_sensor_transfer16+0x1bc>
 8002cb4:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002cb8:	6983      	ldr	r3, [r0, #24]
 8002cba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002cbe:	d1cb      	bne.n	8002c58 <acc_hal_integration_sensor_transfer16+0xa0>
 8002cc0:	686b      	ldr	r3, [r5, #4]
 8002cc2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002cc6:	606b      	str	r3, [r5, #4]
 8002cc8:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002ccc:	f013 0f01 	tst.w	r3, #1
 8002cd0:	686b      	ldr	r3, [r5, #4]
 8002cd2:	d169      	bne.n	8002da8 <acc_hal_integration_sensor_transfer16+0x1f0>
 8002cd4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002cd8:	606b      	str	r3, [r5, #4]
 8002cda:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002cde:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002ce2:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002ce6:	e7b7      	b.n	8002c58 <acc_hal_integration_sensor_transfer16+0xa0>
 8002ce8:	f8d4 20e4 	ldr.w	r2, [r4, #228]	; 0xe4
 8002cec:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002cf0:	6853      	ldr	r3, [r2, #4]
 8002cf2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002cf6:	f043 0301 	orr.w	r3, r3, #1
 8002cfa:	6053      	str	r3, [r2, #4]
 8002cfc:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002d00:	6305      	str	r5, [r0, #48]	; 0x30
 8002d02:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002d06:	320c      	adds	r2, #12
 8002d08:	b29b      	uxth	r3, r3
 8002d0a:	62c5      	str	r5, [r0, #44]	; 0x2c
 8002d0c:	f7ff fb6a 	bl	80023e4 <HAL_DMA_Start_IT>
 8002d10:	2800      	cmp	r0, #0
 8002d12:	d13d      	bne.n	8002d90 <acc_hal_integration_sensor_transfer16+0x1d8>
 8002d14:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8002d18:	681a      	ldr	r2, [r3, #0]
 8002d1a:	0652      	lsls	r2, r2, #25
 8002d1c:	d525      	bpl.n	8002d6a <acc_hal_integration_sensor_transfer16+0x1b2>
 8002d1e:	685a      	ldr	r2, [r3, #4]
 8002d20:	f042 0220 	orr.w	r2, r2, #32
 8002d24:	605a      	str	r2, [r3, #4]
 8002d26:	685a      	ldr	r2, [r3, #4]
 8002d28:	f042 0202 	orr.w	r2, r2, #2
 8002d2c:	605a      	str	r2, [r3, #4]
 8002d2e:	6822      	ldr	r2, [r4, #0]
 8002d30:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002d34:	2100      	movs	r1, #0
 8002d36:	f884 1140 	strb.w	r1, [r4, #320]	; 0x140
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	f47f af55 	bne.w	8002bea <acc_hal_integration_sensor_transfer16+0x32>
 8002d40:	f241 3187 	movw	r1, #4999	; 0x1387
 8002d44:	e00c      	b.n	8002d60 <acc_hal_integration_sensor_transfer16+0x1a8>
 8002d46:	b672      	cpsid	i
 8002d48:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002d4c:	b903      	cbnz	r3, 8002d50 <acc_hal_integration_sensor_transfer16+0x198>
 8002d4e:	bf30      	wfi
 8002d50:	b662      	cpsie	i
 8002d52:	f3bf 8f6f 	isb	sy
 8002d56:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	f47f af45 	bne.w	8002bea <acc_hal_integration_sensor_transfer16+0x32>
 8002d60:	6823      	ldr	r3, [r4, #0]
 8002d62:	1a9b      	subs	r3, r3, r2
 8002d64:	428b      	cmp	r3, r1
 8002d66:	d9ee      	bls.n	8002d46 <acc_hal_integration_sensor_transfer16+0x18e>
 8002d68:	bd70      	pop	{r4, r5, r6, pc}
 8002d6a:	681a      	ldr	r2, [r3, #0]
 8002d6c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002d70:	601a      	str	r2, [r3, #0]
 8002d72:	e7d4      	b.n	8002d1e <acc_hal_integration_sensor_transfer16+0x166>
 8002d74:	f013 0f01 	tst.w	r3, #1
 8002d78:	686b      	ldr	r3, [r5, #4]
 8002d7a:	d120      	bne.n	8002dbe <acc_hal_integration_sensor_transfer16+0x206>
 8002d7c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002d80:	606b      	str	r3, [r5, #4]
 8002d82:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002d86:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002d8a:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002d8e:	e791      	b.n	8002cb4 <acc_hal_integration_sensor_transfer16+0xfc>
 8002d90:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002d94:	f884 5140 	strb.w	r5, [r4, #320]	; 0x140
 8002d98:	f043 0310 	orr.w	r3, r3, #16
 8002d9c:	2201      	movs	r2, #1
 8002d9e:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002da2:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002da6:	bd70      	pop	{r4, r5, r6, pc}
 8002da8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002dac:	606b      	str	r3, [r5, #4]
 8002dae:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002db2:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002db6:	3301      	adds	r3, #1
 8002db8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002dbc:	e74c      	b.n	8002c58 <acc_hal_integration_sensor_transfer16+0xa0>
 8002dbe:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002dc2:	606b      	str	r3, [r5, #4]
 8002dc4:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002dc8:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002dcc:	3301      	adds	r3, #1
 8002dce:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002dd2:	e76f      	b.n	8002cb4 <acc_hal_integration_sensor_transfer16+0xfc>
 8002dd4:	200000ac 	.word	0x200000ac
 8002dd8:	08001ae9 	.word	0x08001ae9
 8002ddc:	08001b69 	.word	0x08001b69
 8002de0:	08001aed 	.word	0x08001aed
 8002de4:	08001af1 	.word	0x08001af1
 8002de8:	08001ac5 	.word	0x08001ac5

08002dec <run_test.constprop.0>:
 8002dec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002df0:	4d74      	ldr	r5, [pc, #464]	; (8002fc4 <run_test.constprop.0+0x1d8>)
 8002df2:	4e75      	ldr	r6, [pc, #468]	; (8002fc8 <run_test.constprop.0+0x1dc>)
 8002df4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002df8:	4604      	mov	r4, r0
 8002dfa:	61ab      	str	r3, [r5, #24]
 8002dfc:	f7ff fb80 	bl	8002500 <acc_integration_sleep_us.constprop.0>
 8002e00:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002e02:	2b05      	cmp	r3, #5
 8002e04:	f04f 0100 	mov.w	r1, #0
 8002e08:	d905      	bls.n	8002e16 <run_test.constprop.0+0x2a>
 8002e0a:	e037      	b.n	8002e7c <run_test.constprop.0+0x90>
 8002e0c:	3301      	adds	r3, #1
 8002e0e:	b29b      	uxth	r3, r3
 8002e10:	2b06      	cmp	r3, #6
 8002e12:	8463      	strh	r3, [r4, #34]	; 0x22
 8002e14:	d034      	beq.n	8002e80 <run_test.constprop.0+0x94>
 8002e16:	18e2      	adds	r2, r4, r3
 8002e18:	7f12      	ldrb	r2, [r2, #28]
 8002e1a:	2a00      	cmp	r2, #0
 8002e1c:	d0f6      	beq.n	8002e0c <run_test.constprop.0+0x20>
 8002e1e:	2900      	cmp	r1, #0
 8002e20:	d17e      	bne.n	8002f20 <run_test.constprop.0+0x134>
 8002e22:	005a      	lsls	r2, r3, #1
 8002e24:	2700      	movs	r7, #0
 8002e26:	4413      	add	r3, r2
 8002e28:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002e2c:	4620      	mov	r0, r4
 8002e2e:	f8d3 3c90 	ldr.w	r3, [r3, #3216]	; 0xc90
 8002e32:	4798      	blx	r3
 8002e34:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002e36:	8d21      	ldrh	r1, [r4, #40]	; 0x28
 8002e38:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002e3a:	eb03 0c43 	add.w	ip, r3, r3, lsl #1
 8002e3e:	eb06 0c8c 	add.w	ip, r6, ip, lsl #2
 8002e42:	eb04 0e01 	add.w	lr, r4, r1
 8002e46:	3201      	adds	r2, #1
 8002e48:	f89c cc88 	ldrb.w	ip, [ip, #3208]	; 0xc88
 8002e4c:	6262      	str	r2, [r4, #36]	; 0x24
 8002e4e:	3801      	subs	r0, #1
 8002e50:	005a      	lsls	r2, r3, #1
 8002e52:	f88e c02a 	strb.w	ip, [lr, #42]	; 0x2a
 8002e56:	2803      	cmp	r0, #3
 8002e58:	f200 80ab 	bhi.w	8002fb2 <run_test.constprop.0+0x1c6>
 8002e5c:	e8df f000 	tbb	[pc, r0]
 8002e60:	7891024c 	.word	0x7891024c
 8002e64:	4a59      	ldr	r2, [pc, #356]	; (8002fcc <run_test.constprop.0+0x1e0>)
 8002e66:	6811      	ldr	r1, [r2, #0]
 8002e68:	6928      	ldr	r0, [r5, #16]
 8002e6a:	0707      	lsls	r7, r0, #28
 8002e6c:	d532      	bpl.n	8002ed4 <run_test.constprop.0+0xe8>
 8002e6e:	6929      	ldr	r1, [r5, #16]
 8002e70:	2b05      	cmp	r3, #5
 8002e72:	f081 0108 	eor.w	r1, r1, #8
 8002e76:	f3c1 01c0 	ubfx	r1, r1, #3, #1
 8002e7a:	d9cc      	bls.n	8002e16 <run_test.constprop.0+0x2a>
 8002e7c:	2b06      	cmp	r3, #6
 8002e7e:	d1ce      	bne.n	8002e1e <run_test.constprop.0+0x32>
 8002e80:	4b50      	ldr	r3, [pc, #320]	; (8002fc4 <run_test.constprop.0+0x1d8>)
 8002e82:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002e86:	629a      	str	r2, [r3, #40]	; 0x28
 8002e88:	f7ff fb3a 	bl	8002500 <acc_integration_sleep_us.constprop.0>
 8002e8c:	8d26      	ldrh	r6, [r4, #40]	; 0x28
 8002e8e:	2501      	movs	r5, #1
 8002e90:	b1ee      	cbz	r6, 8002ece <run_test.constprop.0+0xe2>
 8002e92:	3e01      	subs	r6, #1
 8002e94:	b2b3      	uxth	r3, r6
 8002e96:	f8df 8144 	ldr.w	r8, [pc, #324]	; 8002fdc <run_test.constprop.0+0x1f0>
 8002e9a:	4f4d      	ldr	r7, [pc, #308]	; (8002fd0 <run_test.constprop.0+0x1e4>)
 8002e9c:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8002fe0 <run_test.constprop.0+0x1f4>
 8002ea0:	f104 0608 	add.w	r6, r4, #8
 8002ea4:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
 8002ea8:	2501      	movs	r5, #1
 8002eaa:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8002eae:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002eb0:	2a00      	cmp	r2, #0
 8002eb2:	bf14      	ite	ne
 8002eb4:	4642      	movne	r2, r8
 8002eb6:	463a      	moveq	r2, r7
 8002eb8:	4648      	mov	r0, r9
 8002eba:	f003 fe73 	bl	8006ba4 <__wrap_printf>
 8002ebe:	f894 3034 	ldrb.w	r3, [r4, #52]	; 0x34
 8002ec2:	3408      	adds	r4, #8
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	bf08      	it	eq
 8002ec8:	2500      	moveq	r5, #0
 8002eca:	42a6      	cmp	r6, r4
 8002ecc:	d1ed      	bne.n	8002eaa <run_test.constprop.0+0xbe>
 8002ece:	4628      	mov	r0, r5
 8002ed0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002ed4:	6813      	ldr	r3, [r2, #0]
 8002ed6:	1a5b      	subs	r3, r3, r1
 8002ed8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002edc:	d20a      	bcs.n	8002ef4 <run_test.constprop.0+0x108>
 8002ede:	b672      	cpsid	i
 8002ee0:	692b      	ldr	r3, [r5, #16]
 8002ee2:	0718      	lsls	r0, r3, #28
 8002ee4:	d400      	bmi.n	8002ee8 <run_test.constprop.0+0xfc>
 8002ee6:	bf30      	wfi
 8002ee8:	b662      	cpsie	i
 8002eea:	f3bf 8f6f 	isb	sy
 8002eee:	692b      	ldr	r3, [r5, #16]
 8002ef0:	071b      	lsls	r3, r3, #28
 8002ef2:	d5ef      	bpl.n	8002ed4 <run_test.constprop.0+0xe8>
 8002ef4:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002ef6:	e7ba      	b.n	8002e6e <run_test.constprop.0+0x82>
 8002ef8:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 8002efc:	f8c5 8028 	str.w	r8, [r5, #40]	; 0x28
 8002f00:	f7ff fafe 	bl	8002500 <acc_integration_sleep_us.constprop.0>
 8002f04:	f8c5 8018 	str.w	r8, [r5, #24]
 8002f08:	f7ff fafa 	bl	8002500 <acc_integration_sleep_us.constprop.0>
 8002f0c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002f0e:	2b05      	cmp	r3, #5
 8002f10:	f04f 0100 	mov.w	r1, #0
 8002f14:	f67f af7f 	bls.w	8002e16 <run_test.constprop.0+0x2a>
 8002f18:	2b06      	cmp	r3, #6
 8002f1a:	d0b1      	beq.n	8002e80 <run_test.constprop.0+0x94>
 8002f1c:	005a      	lsls	r2, r3, #1
 8002f1e:	e782      	b.n	8002e26 <run_test.constprop.0+0x3a>
 8002f20:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8002f24:	4a29      	ldr	r2, [pc, #164]	; (8002fcc <run_test.constprop.0+0x1e0>)
 8002f26:	492b      	ldr	r1, [pc, #172]	; (8002fd4 <run_test.constprop.0+0x1e8>)
 8002f28:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8002f2a:	4a2b      	ldr	r2, [pc, #172]	; (8002fd8 <run_test.constprop.0+0x1ec>)
 8002f2c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002f30:	2000      	movs	r0, #0
 8002f32:	f8d3 3c8c 	ldr.w	r3, [r3, #3212]	; 0xc8c
 8002f36:	47b8      	blx	r7
 8002f38:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002f3a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
 8002f3c:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8002f40:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8002f44:	1860      	adds	r0, r4, r1
 8002f46:	f892 2c88 	ldrb.w	r2, [r2, #3208]	; 0xc88
 8002f4a:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8002f4e:	005a      	lsls	r2, r3, #1
 8002f50:	441a      	add	r2, r3
 8002f52:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8002f56:	eb04 07c1 	add.w	r7, r4, r1, lsl #3
 8002f5a:	3301      	adds	r3, #1
 8002f5c:	f8d2 2c8c 	ldr.w	r2, [r2, #3212]	; 0xc8c
 8002f60:	633a      	str	r2, [r7, #48]	; 0x30
 8002f62:	b29b      	uxth	r3, r3
 8002f64:	2000      	movs	r0, #0
 8002f66:	1c4a      	adds	r2, r1, #1
 8002f68:	2b05      	cmp	r3, #5
 8002f6a:	f887 0034 	strb.w	r0, [r7, #52]	; 0x34
 8002f6e:	4601      	mov	r1, r0
 8002f70:	8463      	strh	r3, [r4, #34]	; 0x22
 8002f72:	8522      	strh	r2, [r4, #40]	; 0x28
 8002f74:	6260      	str	r0, [r4, #36]	; 0x24
 8002f76:	f67f af4e 	bls.w	8002e16 <run_test.constprop.0+0x2a>
 8002f7a:	2b06      	cmp	r3, #6
 8002f7c:	f47f af51 	bne.w	8002e22 <run_test.constprop.0+0x36>
 8002f80:	e77e      	b.n	8002e80 <run_test.constprop.0+0x94>
 8002f82:	441a      	add	r2, r3
 8002f84:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8002f88:	eb04 00c1 	add.w	r0, r4, r1, lsl #3
 8002f8c:	3301      	adds	r3, #1
 8002f8e:	f8d2 2c8c 	ldr.w	r2, [r2, #3212]	; 0xc8c
 8002f92:	6302      	str	r2, [r0, #48]	; 0x30
 8002f94:	b29b      	uxth	r3, r3
 8002f96:	1c4a      	adds	r2, r1, #1
 8002f98:	2b05      	cmp	r3, #5
 8002f9a:	f04f 0101 	mov.w	r1, #1
 8002f9e:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 8002fa2:	f04f 0100 	mov.w	r1, #0
 8002fa6:	8463      	strh	r3, [r4, #34]	; 0x22
 8002fa8:	8522      	strh	r2, [r4, #40]	; 0x28
 8002faa:	6267      	str	r7, [r4, #36]	; 0x24
 8002fac:	f67f af33 	bls.w	8002e16 <run_test.constprop.0+0x2a>
 8002fb0:	e7b2      	b.n	8002f18 <run_test.constprop.0+0x12c>
 8002fb2:	2b05      	cmp	r3, #5
 8002fb4:	f04f 0100 	mov.w	r1, #0
 8002fb8:	f67f af2d 	bls.w	8002e16 <run_test.constprop.0+0x2a>
 8002fbc:	2b06      	cmp	r3, #6
 8002fbe:	f47f af32 	bne.w	8002e26 <run_test.constprop.0+0x3a>
 8002fc2:	e75d      	b.n	8002e80 <run_test.constprop.0+0x94>
 8002fc4:	48000400 	.word	0x48000400
 8002fc8:	080076b0 	.word	0x080076b0
 8002fcc:	200000ac 	.word	0x200000ac
 8002fd0:	0800a50c 	.word	0x0800a50c
 8002fd4:	0800a254 	.word	0x0800a254
 8002fd8:	0800a514 	.word	0x0800a514
 8002fdc:	0800a504 	.word	0x0800a504
 8002fe0:	0800a534 	.word	0x0800a534

08002fe4 <HAL_RTC_DeactivateAlarm.constprop.0>:
 8002fe4:	491c      	ldr	r1, [pc, #112]	; (8003058 <HAL_RTC_DeactivateAlarm.constprop.0+0x74>)
 8002fe6:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002fea:	2b01      	cmp	r3, #1
 8002fec:	d032      	beq.n	8003054 <HAL_RTC_DeactivateAlarm.constprop.0+0x70>
 8002fee:	b430      	push	{r4, r5}
 8002ff0:	684c      	ldr	r4, [r1, #4]
 8002ff2:	2353      	movs	r3, #83	; 0x53
 8002ff4:	2001      	movs	r0, #1
 8002ff6:	2502      	movs	r5, #2
 8002ff8:	22ca      	movs	r2, #202	; 0xca
 8002ffa:	f881 5025 	strb.w	r5, [r1, #37]	; 0x25
 8002ffe:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8003002:	6262      	str	r2, [r4, #36]	; 0x24
 8003004:	6263      	str	r3, [r4, #36]	; 0x24
 8003006:	68a3      	ldr	r3, [r4, #8]
 8003008:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800300c:	60a3      	str	r3, [r4, #8]
 800300e:	68a3      	ldr	r3, [r4, #8]
 8003010:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003014:	60a3      	str	r3, [r4, #8]
 8003016:	6808      	ldr	r0, [r1, #0]
 8003018:	e004      	b.n	8003024 <HAL_RTC_DeactivateAlarm.constprop.0+0x40>
 800301a:	680a      	ldr	r2, [r1, #0]
 800301c:	1a12      	subs	r2, r2, r0
 800301e:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
 8003022:	d80d      	bhi.n	8003040 <HAL_RTC_DeactivateAlarm.constprop.0+0x5c>
 8003024:	68e3      	ldr	r3, [r4, #12]
 8003026:	f013 0301 	ands.w	r3, r3, #1
 800302a:	d0f6      	beq.n	800301a <HAL_RTC_DeactivateAlarm.constprop.0+0x36>
 800302c:	2000      	movs	r0, #0
 800302e:	22ff      	movs	r2, #255	; 0xff
 8003030:	2301      	movs	r3, #1
 8003032:	6262      	str	r2, [r4, #36]	; 0x24
 8003034:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8003038:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
 800303c:	bc30      	pop	{r4, r5}
 800303e:	4770      	bx	lr
 8003040:	20ff      	movs	r0, #255	; 0xff
 8003042:	2203      	movs	r2, #3
 8003044:	6260      	str	r0, [r4, #36]	; 0x24
 8003046:	f881 3024 	strb.w	r3, [r1, #36]	; 0x24
 800304a:	f881 2025 	strb.w	r2, [r1, #37]	; 0x25
 800304e:	4610      	mov	r0, r2
 8003050:	bc30      	pop	{r4, r5}
 8003052:	4770      	bx	lr
 8003054:	2002      	movs	r0, #2
 8003056:	4770      	bx	lr
 8003058:	200000ac 	.word	0x200000ac

0800305c <acc_a121_cal_session_ack_program>:
 800305c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800305e:	b085      	sub	sp, #20
 8003060:	f10d 020e 	add.w	r2, sp, #14
 8003064:	2700      	movs	r7, #0
 8003066:	2133      	movs	r1, #51	; 0x33
 8003068:	4605      	mov	r5, r0
 800306a:	f8ad 700e 	strh.w	r7, [sp, #14]
 800306e:	f7fe f967 	bl	8001340 <acc_sensor_reg_read>
 8003072:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8003076:	f003 0407 	and.w	r4, r3, #7
 800307a:	2c01      	cmp	r4, #1
 800307c:	d046      	beq.n	800310c <acc_a121_cal_session_ack_program+0xb0>
 800307e:	f013 0f06 	tst.w	r3, #6
 8003082:	d129      	bne.n	80030d8 <acc_a121_cal_session_ack_program+0x7c>
 8003084:	2c00      	cmp	r4, #0
 8003086:	d138      	bne.n	80030fa <acc_a121_cal_session_ack_program+0x9e>
 8003088:	4e24      	ldr	r6, [pc, #144]	; (800311c <acc_a121_cal_session_ack_program+0xc0>)
 800308a:	9500      	str	r5, [sp, #0]
 800308c:	6c37      	ldr	r7, [r6, #64]	; 0x40
 800308e:	4a24      	ldr	r2, [pc, #144]	; (8003120 <acc_a121_cal_session_ack_program+0xc4>)
 8003090:	4924      	ldr	r1, [pc, #144]	; (8003124 <acc_a121_cal_session_ack_program+0xc8>)
 8003092:	4620      	mov	r0, r4
 8003094:	47b8      	blx	r7
 8003096:	2300      	movs	r3, #0
 8003098:	f10d 020e 	add.w	r2, sp, #14
 800309c:	2145      	movs	r1, #69	; 0x45
 800309e:	4628      	mov	r0, r5
 80030a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80030a4:	f7fe f94c 	bl	8001340 <acc_sensor_reg_read>
 80030a8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80030ac:	b95b      	cbnz	r3, 80030c6 <acc_a121_cal_session_ack_program+0x6a>
 80030ae:	6c36      	ldr	r6, [r6, #64]	; 0x40
 80030b0:	4a1d      	ldr	r2, [pc, #116]	; (8003128 <acc_a121_cal_session_ack_program+0xcc>)
 80030b2:	491c      	ldr	r1, [pc, #112]	; (8003124 <acc_a121_cal_session_ack_program+0xc8>)
 80030b4:	462b      	mov	r3, r5
 80030b6:	2000      	movs	r0, #0
 80030b8:	47b0      	blx	r6
 80030ba:	2c02      	cmp	r4, #2
 80030bc:	d102      	bne.n	80030c4 <acc_a121_cal_session_ack_program+0x68>
 80030be:	2001      	movs	r0, #1
 80030c0:	b005      	add	sp, #20
 80030c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030c4:	4e15      	ldr	r6, [pc, #84]	; (800311c <acc_a121_cal_session_ack_program+0xc0>)
 80030c6:	6c35      	ldr	r5, [r6, #64]	; 0x40
 80030c8:	4a18      	ldr	r2, [pc, #96]	; (800312c <acc_a121_cal_session_ack_program+0xd0>)
 80030ca:	4919      	ldr	r1, [pc, #100]	; (8003130 <acc_a121_cal_session_ack_program+0xd4>)
 80030cc:	4623      	mov	r3, r4
 80030ce:	2000      	movs	r0, #0
 80030d0:	47a8      	blx	r5
 80030d2:	2000      	movs	r0, #0
 80030d4:	b005      	add	sp, #20
 80030d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030d8:	1ea2      	subs	r2, r4, #2
 80030da:	2a01      	cmp	r2, #1
 80030dc:	d80d      	bhi.n	80030fa <acc_a121_cal_session_ack_program+0x9e>
 80030de:	f10d 020e 	add.w	r2, sp, #14
 80030e2:	2145      	movs	r1, #69	; 0x45
 80030e4:	4628      	mov	r0, r5
 80030e6:	f8ad 700e 	strh.w	r7, [sp, #14]
 80030ea:	f7fe f929 	bl	8001340 <acc_sensor_reg_read>
 80030ee:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d1e1      	bne.n	80030ba <acc_a121_cal_session_ack_program+0x5e>
 80030f6:	4e09      	ldr	r6, [pc, #36]	; (800311c <acc_a121_cal_session_ack_program+0xc0>)
 80030f8:	e7d9      	b.n	80030ae <acc_a121_cal_session_ack_program+0x52>
 80030fa:	4e08      	ldr	r6, [pc, #32]	; (800311c <acc_a121_cal_session_ack_program+0xc0>)
 80030fc:	9500      	str	r5, [sp, #0]
 80030fe:	6c34      	ldr	r4, [r6, #64]	; 0x40
 8003100:	4a0c      	ldr	r2, [pc, #48]	; (8003134 <acc_a121_cal_session_ack_program+0xd8>)
 8003102:	4908      	ldr	r1, [pc, #32]	; (8003124 <acc_a121_cal_session_ack_program+0xc8>)
 8003104:	2000      	movs	r0, #0
 8003106:	47a0      	blx	r4
 8003108:	2400      	movs	r4, #0
 800310a:	e7c4      	b.n	8003096 <acc_a121_cal_session_ack_program+0x3a>
 800310c:	4e03      	ldr	r6, [pc, #12]	; (800311c <acc_a121_cal_session_ack_program+0xc0>)
 800310e:	9500      	str	r5, [sp, #0]
 8003110:	4638      	mov	r0, r7
 8003112:	4a09      	ldr	r2, [pc, #36]	; (8003138 <acc_a121_cal_session_ack_program+0xdc>)
 8003114:	6c37      	ldr	r7, [r6, #64]	; 0x40
 8003116:	4903      	ldr	r1, [pc, #12]	; (8003124 <acc_a121_cal_session_ack_program+0xc8>)
 8003118:	47b8      	blx	r7
 800311a:	e7bc      	b.n	8003096 <acc_a121_cal_session_ack_program+0x3a>
 800311c:	200000ac 	.word	0x200000ac
 8003120:	0800a54c 	.word	0x0800a54c
 8003124:	0800a124 	.word	0x0800a124
 8003128:	0800a5e4 	.word	0x0800a5e4
 800312c:	0800a618 	.word	0x0800a618
 8003130:	0800a660 	.word	0x0800a660
 8003134:	0800a5b0 	.word	0x0800a5b0
 8003138:	0800a57c 	.word	0x0800a57c

0800313c <acc_sensor_a121_lut_buffer_write.constprop.0>:
 800313c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003140:	4c16      	ldr	r4, [pc, #88]	; (800319c <acc_sensor_a121_lut_buffer_write.constprop.0+0x60>)
 8003142:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8003144:	8e27      	ldrh	r7, [r4, #48]	; 0x30
 8003146:	3a04      	subs	r2, #4
 8003148:	3f04      	subs	r7, #4
 800314a:	0852      	lsrs	r2, r2, #1
 800314c:	087f      	lsrs	r7, r7, #1
 800314e:	4297      	cmp	r7, r2
 8003150:	460d      	mov	r5, r1
 8003152:	4681      	mov	r9, r0
 8003154:	4698      	mov	r8, r3
 8003156:	bf28      	it	cs
 8003158:	4617      	movcs	r7, r2
 800315a:	f101 0a04 	add.w	sl, r1, #4
 800315e:	2400      	movs	r4, #0
 8003160:	1b33      	subs	r3, r6, r4
 8003162:	42bb      	cmp	r3, r7
 8003164:	bf28      	it	cs
 8003166:	463b      	movcs	r3, r7
 8003168:	ea6f 4184 	mvn.w	r1, r4, lsl #18
 800316c:	1e5a      	subs	r2, r3, #1
 800316e:	ea6f 4191 	mvn.w	r1, r1, lsr #18
 8003172:	469b      	mov	fp, r3
 8003174:	806a      	strh	r2, [r5, #2]
 8003176:	8029      	strh	r1, [r5, #0]
 8003178:	005a      	lsls	r2, r3, #1
 800317a:	eb08 0144 	add.w	r1, r8, r4, lsl #1
 800317e:	4650      	mov	r0, sl
 8003180:	441c      	add	r4, r3
 8003182:	f003 fc01 	bl	8006988 <memcpy>
 8003186:	f10b 0202 	add.w	r2, fp, #2
 800318a:	2300      	movs	r3, #0
 800318c:	4629      	mov	r1, r5
 800318e:	4648      	mov	r0, r9
 8003190:	f7fd ffee 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 8003194:	42a6      	cmp	r6, r4
 8003196:	d8e3      	bhi.n	8003160 <acc_sensor_a121_lut_buffer_write.constprop.0+0x24>
 8003198:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800319c:	200000ac 	.word	0x200000ac

080031a0 <adl_data_new_line_test>:
 80031a0:	b138      	cbz	r0, 80031b2 <adl_data_new_line_test+0x12>
 80031a2:	b538      	push	{r3, r4, r5, lr}
 80031a4:	fbb0 f3f1 	udiv	r3, r0, r1
 80031a8:	fb01 0113 	mls	r1, r1, r3, r0
 80031ac:	b119      	cbz	r1, 80031b6 <adl_data_new_line_test+0x16>
 80031ae:	4610      	mov	r0, r2
 80031b0:	bd38      	pop	{r3, r4, r5, pc}
 80031b2:	4610      	mov	r0, r2
 80031b4:	4770      	bx	lr
 80031b6:	4c0a      	ldr	r4, [pc, #40]	; (80031e0 <adl_data_new_line_test+0x40>)
 80031b8:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 80031bc:	2b01      	cmp	r3, #1
 80031be:	d905      	bls.n	80031cc <adl_data_new_line_test+0x2c>
 80031c0:	6c25      	ldr	r5, [r4, #64]	; 0x40
 80031c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80031c4:	4a07      	ldr	r2, [pc, #28]	; (80031e4 <adl_data_new_line_test+0x44>)
 80031c6:	4908      	ldr	r1, [pc, #32]	; (80031e8 <adl_data_new_line_test+0x48>)
 80031c8:	2002      	movs	r0, #2
 80031ca:	47a8      	blx	r5
 80031cc:	4b07      	ldr	r3, [pc, #28]	; (80031ec <adl_data_new_line_test+0x4c>)
 80031ce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80031d0:	cb03      	ldmia	r3!, {r0, r1}
 80031d2:	781b      	ldrb	r3, [r3, #0]
 80031d4:	6010      	str	r0, [r2, #0]
 80031d6:	7213      	strb	r3, [r2, #8]
 80031d8:	6051      	str	r1, [r2, #4]
 80031da:	2209      	movs	r2, #9
 80031dc:	4610      	mov	r0, r2
 80031de:	bd38      	pop	{r3, r4, r5, pc}
 80031e0:	200000ac 	.word	0x200000ac
 80031e4:	08009fa4 	.word	0x08009fa4
 80031e8:	08009fa8 	.word	0x08009fa8
 80031ec:	0800a680 	.word	0x0800a680

080031f0 <diagnostic_log_data_i8>:
 80031f0:	4b1b      	ldr	r3, [pc, #108]	; (8003260 <diagnostic_log_data_i8+0x70>)
 80031f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031f6:	4e1b      	ldr	r6, [pc, #108]	; (8003264 <diagnostic_log_data_i8+0x74>)
 80031f8:	4605      	mov	r5, r0
 80031fa:	460c      	mov	r4, r1
 80031fc:	cb03      	ldmia	r3!, {r0, r1}
 80031fe:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003200:	781b      	ldrb	r3, [r3, #0]
 8003202:	7213      	strb	r3, [r2, #8]
 8003204:	6010      	str	r0, [r2, #0]
 8003206:	6051      	str	r1, [r2, #4]
 8003208:	b1fc      	cbz	r4, 800324a <diagnostic_log_data_i8+0x5a>
 800320a:	192c      	adds	r4, r5, r4
 800320c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8003210:	3c01      	subs	r4, #1
 8003212:	f1c5 0501 	rsb	r5, r5, #1
 8003216:	2209      	movs	r2, #9
 8003218:	272d      	movs	r7, #45	; 0x2d
 800321a:	2112      	movs	r1, #18
 800321c:	eb05 0008 	add.w	r0, r5, r8
 8003220:	f7ff ffbe 	bl	80031a0 <adl_data_new_line_test>
 8003224:	f918 3f01 	ldrsb.w	r3, [r8, #1]!
 8003228:	2b00      	cmp	r3, #0
 800322a:	4601      	mov	r1, r0
 800322c:	da04      	bge.n	8003238 <diagnostic_log_data_i8+0x48>
 800322e:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 8003230:	541f      	strb	r7, [r3, r0]
 8003232:	f998 3000 	ldrsb.w	r3, [r8]
 8003236:	3101      	adds	r1, #1
 8003238:	2b00      	cmp	r3, #0
 800323a:	bfb8      	it	lt
 800323c:	425b      	neglt	r3, r3
 800323e:	b2d8      	uxtb	r0, r3
 8003240:	f7fd fbe2 	bl	8000a08 <adl_add_value_to_buffer>
 8003244:	45a0      	cmp	r8, r4
 8003246:	4602      	mov	r2, r0
 8003248:	d1e7      	bne.n	800321a <diagnostic_log_data_i8+0x2a>
 800324a:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 800324e:	2b01      	cmp	r3, #1
 8003250:	d903      	bls.n	800325a <diagnostic_log_data_i8+0x6a>
 8003252:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003256:	f7fd bba5 	b.w	80009a4 <diagnostic_log_data_i16.part.0>
 800325a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800325e:	bf00      	nop
 8003260:	0800a680 	.word	0x0800a680
 8003264:	200000ac 	.word	0x200000ac

08003268 <diagnostic_log_data_u8>:
 8003268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800326a:	4b13      	ldr	r3, [pc, #76]	; (80032b8 <diagnostic_log_data_u8+0x50>)
 800326c:	4e13      	ldr	r6, [pc, #76]	; (80032bc <diagnostic_log_data_u8+0x54>)
 800326e:	4607      	mov	r7, r0
 8003270:	460d      	mov	r5, r1
 8003272:	cb03      	ldmia	r3!, {r0, r1}
 8003274:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003276:	781b      	ldrb	r3, [r3, #0]
 8003278:	7213      	strb	r3, [r2, #8]
 800327a:	6010      	str	r0, [r2, #0]
 800327c:	6051      	str	r1, [r2, #4]
 800327e:	b18d      	cbz	r5, 80032a4 <diagnostic_log_data_u8+0x3c>
 8003280:	197d      	adds	r5, r7, r5
 8003282:	1e7c      	subs	r4, r7, #1
 8003284:	3d01      	subs	r5, #1
 8003286:	f1c7 0701 	rsb	r7, r7, #1
 800328a:	2209      	movs	r2, #9
 800328c:	2116      	movs	r1, #22
 800328e:	1938      	adds	r0, r7, r4
 8003290:	f7ff ff86 	bl	80031a0 <adl_data_new_line_test>
 8003294:	4601      	mov	r1, r0
 8003296:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 800329a:	f7fd fbb5 	bl	8000a08 <adl_add_value_to_buffer>
 800329e:	42ac      	cmp	r4, r5
 80032a0:	4602      	mov	r2, r0
 80032a2:	d1f3      	bne.n	800328c <diagnostic_log_data_u8+0x24>
 80032a4:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80032a8:	2b01      	cmp	r3, #1
 80032aa:	d903      	bls.n	80032b4 <diagnostic_log_data_u8+0x4c>
 80032ac:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80032b0:	f7fd bb78 	b.w	80009a4 <diagnostic_log_data_i16.part.0>
 80032b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80032b6:	bf00      	nop
 80032b8:	0800a680 	.word	0x0800a680
 80032bc:	200000ac 	.word	0x200000ac

080032c0 <diagnostic_log_data_i16>:
 80032c0:	4b1a      	ldr	r3, [pc, #104]	; (800332c <diagnostic_log_data_i16+0x6c>)
 80032c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80032c6:	4e1a      	ldr	r6, [pc, #104]	; (8003330 <diagnostic_log_data_i16+0x70>)
 80032c8:	4604      	mov	r4, r0
 80032ca:	460d      	mov	r5, r1
 80032cc:	cb03      	ldmia	r3!, {r0, r1}
 80032ce:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80032d0:	781b      	ldrb	r3, [r3, #0]
 80032d2:	7213      	strb	r3, [r2, #8]
 80032d4:	6010      	str	r0, [r2, #0]
 80032d6:	6051      	str	r1, [r2, #4]
 80032d8:	b1ed      	cbz	r5, 8003316 <diagnostic_log_data_i16+0x56>
 80032da:	3c02      	subs	r4, #2
 80032dc:	f04f 0800 	mov.w	r8, #0
 80032e0:	2209      	movs	r2, #9
 80032e2:	272d      	movs	r7, #45	; 0x2d
 80032e4:	210c      	movs	r1, #12
 80032e6:	4640      	mov	r0, r8
 80032e8:	f7ff ff5a 	bl	80031a0 <adl_data_new_line_test>
 80032ec:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	f108 0801 	add.w	r8, r8, #1
 80032f6:	4601      	mov	r1, r0
 80032f8:	da04      	bge.n	8003304 <diagnostic_log_data_i16+0x44>
 80032fa:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 80032fc:	541f      	strb	r7, [r3, r0]
 80032fe:	f9b4 3000 	ldrsh.w	r3, [r4]
 8003302:	3101      	adds	r1, #1
 8003304:	2b00      	cmp	r3, #0
 8003306:	bfb8      	it	lt
 8003308:	425b      	neglt	r3, r3
 800330a:	b298      	uxth	r0, r3
 800330c:	f7fd fb7c 	bl	8000a08 <adl_add_value_to_buffer>
 8003310:	4545      	cmp	r5, r8
 8003312:	4602      	mov	r2, r0
 8003314:	d1e6      	bne.n	80032e4 <diagnostic_log_data_i16+0x24>
 8003316:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 800331a:	2b01      	cmp	r3, #1
 800331c:	d903      	bls.n	8003326 <diagnostic_log_data_i16+0x66>
 800331e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003322:	f7fd bb3f 	b.w	80009a4 <diagnostic_log_data_i16.part.0>
 8003326:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800332a:	bf00      	nop
 800332c:	0800a680 	.word	0x0800a680
 8003330:	200000ac 	.word	0x200000ac

08003334 <diagnostic_log_data_u16>:
 8003334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003336:	4b12      	ldr	r3, [pc, #72]	; (8003380 <diagnostic_log_data_u16+0x4c>)
 8003338:	4e12      	ldr	r6, [pc, #72]	; (8003384 <diagnostic_log_data_u16+0x50>)
 800333a:	4605      	mov	r5, r0
 800333c:	460f      	mov	r7, r1
 800333e:	cb03      	ldmia	r3!, {r0, r1}
 8003340:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003342:	781b      	ldrb	r3, [r3, #0]
 8003344:	7213      	strb	r3, [r2, #8]
 8003346:	6010      	str	r0, [r2, #0]
 8003348:	6051      	str	r1, [r2, #4]
 800334a:	b17f      	cbz	r7, 800336c <diagnostic_log_data_u16+0x38>
 800334c:	3d02      	subs	r5, #2
 800334e:	2400      	movs	r4, #0
 8003350:	2209      	movs	r2, #9
 8003352:	210f      	movs	r1, #15
 8003354:	4620      	mov	r0, r4
 8003356:	f7ff ff23 	bl	80031a0 <adl_data_new_line_test>
 800335a:	4601      	mov	r1, r0
 800335c:	f835 0f02 	ldrh.w	r0, [r5, #2]!
 8003360:	f7fd fb52 	bl	8000a08 <adl_add_value_to_buffer>
 8003364:	3401      	adds	r4, #1
 8003366:	42a7      	cmp	r7, r4
 8003368:	4602      	mov	r2, r0
 800336a:	d1f2      	bne.n	8003352 <diagnostic_log_data_u16+0x1e>
 800336c:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003370:	2b01      	cmp	r3, #1
 8003372:	d903      	bls.n	800337c <diagnostic_log_data_u16+0x48>
 8003374:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003378:	f7fd bb14 	b.w	80009a4 <diagnostic_log_data_i16.part.0>
 800337c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800337e:	bf00      	nop
 8003380:	0800a680 	.word	0x0800a680
 8003384:	200000ac 	.word	0x200000ac

08003388 <diagnostic_log_data_i32>:
 8003388:	4b19      	ldr	r3, [pc, #100]	; (80033f0 <diagnostic_log_data_i32+0x68>)
 800338a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800338e:	4e19      	ldr	r6, [pc, #100]	; (80033f4 <diagnostic_log_data_i32+0x6c>)
 8003390:	4604      	mov	r4, r0
 8003392:	460d      	mov	r5, r1
 8003394:	cb03      	ldmia	r3!, {r0, r1}
 8003396:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003398:	781b      	ldrb	r3, [r3, #0]
 800339a:	7213      	strb	r3, [r2, #8]
 800339c:	6010      	str	r0, [r2, #0]
 800339e:	6051      	str	r1, [r2, #4]
 80033a0:	b1e5      	cbz	r5, 80033dc <diagnostic_log_data_i32+0x54>
 80033a2:	3c04      	subs	r4, #4
 80033a4:	f04f 0800 	mov.w	r8, #0
 80033a8:	2209      	movs	r2, #9
 80033aa:	272d      	movs	r7, #45	; 0x2d
 80033ac:	2107      	movs	r1, #7
 80033ae:	4640      	mov	r0, r8
 80033b0:	f7ff fef6 	bl	80031a0 <adl_data_new_line_test>
 80033b4:	f854 3f04 	ldr.w	r3, [r4, #4]!
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	f108 0801 	add.w	r8, r8, #1
 80033be:	4601      	mov	r1, r0
 80033c0:	da03      	bge.n	80033ca <diagnostic_log_data_i32+0x42>
 80033c2:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 80033c4:	541f      	strb	r7, [r3, r0]
 80033c6:	6823      	ldr	r3, [r4, #0]
 80033c8:	3101      	adds	r1, #1
 80033ca:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
 80033ce:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
 80033d2:	f7fd fb19 	bl	8000a08 <adl_add_value_to_buffer>
 80033d6:	4545      	cmp	r5, r8
 80033d8:	4602      	mov	r2, r0
 80033da:	d1e7      	bne.n	80033ac <diagnostic_log_data_i32+0x24>
 80033dc:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80033e0:	2b01      	cmp	r3, #1
 80033e2:	d903      	bls.n	80033ec <diagnostic_log_data_i32+0x64>
 80033e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80033e8:	f7fd badc 	b.w	80009a4 <diagnostic_log_data_i16.part.0>
 80033ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80033f0:	0800a680 	.word	0x0800a680
 80033f4:	200000ac 	.word	0x200000ac

080033f8 <diagnostic_log_data_u32>:
 80033f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033fa:	4b12      	ldr	r3, [pc, #72]	; (8003444 <diagnostic_log_data_u32+0x4c>)
 80033fc:	4e12      	ldr	r6, [pc, #72]	; (8003448 <diagnostic_log_data_u32+0x50>)
 80033fe:	4605      	mov	r5, r0
 8003400:	460f      	mov	r7, r1
 8003402:	cb03      	ldmia	r3!, {r0, r1}
 8003404:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003406:	781b      	ldrb	r3, [r3, #0]
 8003408:	7213      	strb	r3, [r2, #8]
 800340a:	6010      	str	r0, [r2, #0]
 800340c:	6051      	str	r1, [r2, #4]
 800340e:	b17f      	cbz	r7, 8003430 <diagnostic_log_data_u32+0x38>
 8003410:	3d04      	subs	r5, #4
 8003412:	2400      	movs	r4, #0
 8003414:	2209      	movs	r2, #9
 8003416:	2108      	movs	r1, #8
 8003418:	4620      	mov	r0, r4
 800341a:	f7ff fec1 	bl	80031a0 <adl_data_new_line_test>
 800341e:	4601      	mov	r1, r0
 8003420:	f855 0f04 	ldr.w	r0, [r5, #4]!
 8003424:	f7fd faf0 	bl	8000a08 <adl_add_value_to_buffer>
 8003428:	3401      	adds	r4, #1
 800342a:	42a7      	cmp	r7, r4
 800342c:	4602      	mov	r2, r0
 800342e:	d1f2      	bne.n	8003416 <diagnostic_log_data_u32+0x1e>
 8003430:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003434:	2b01      	cmp	r3, #1
 8003436:	d903      	bls.n	8003440 <diagnostic_log_data_u32+0x48>
 8003438:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800343c:	f7fd bab2 	b.w	80009a4 <diagnostic_log_data_i16.part.0>
 8003440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003442:	bf00      	nop
 8003444:	0800a680 	.word	0x0800a680
 8003448:	200000ac 	.word	0x200000ac

0800344c <internal_buffer_processed_read.part.0.constprop.0>:
 800344c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003450:	4b23      	ldr	r3, [pc, #140]	; (80034e0 <internal_buffer_processed_read.part.0.constprop.0+0x94>)
 8003452:	f8b3 9030 	ldrh.w	r9, [r3, #48]	; 0x30
 8003456:	b083      	sub	sp, #12
 8003458:	2300      	movs	r3, #0
 800345a:	ea4f 0959 	mov.w	r9, r9, lsr #1
 800345e:	e9cd 3300 	strd	r3, r3, [sp]
 8003462:	4688      	mov	r8, r1
 8003464:	4692      	mov	sl, r2
 8003466:	461e      	mov	r6, r3
 8003468:	4683      	mov	fp, r0
 800346a:	f1a9 0904 	sub.w	r9, r9, #4
 800346e:	460d      	mov	r5, r1
 8003470:	4617      	mov	r7, r2
 8003472:	e024      	b.n	80034be <internal_buffer_processed_read.part.0.constprop.0+0x72>
 8003474:	f248 0200 	movw	r2, #32768	; 0x8000
 8003478:	1e63      	subs	r3, r4, #1
 800347a:	802a      	strh	r2, [r5, #0]
 800347c:	f04f 0200 	mov.w	r2, #0
 8003480:	806e      	strh	r6, [r5, #2]
 8003482:	80ea      	strh	r2, [r5, #6]
 8003484:	80ab      	strh	r3, [r5, #4]
 8003486:	0062      	lsls	r2, r4, #1
 8003488:	2100      	movs	r1, #0
 800348a:	f105 0008 	add.w	r0, r5, #8
 800348e:	f003 fa71 	bl	8006974 <memset>
 8003492:	4629      	mov	r1, r5
 8003494:	2301      	movs	r3, #1
 8003496:	4658      	mov	r0, fp
 8003498:	1d22      	adds	r2, r4, #4
 800349a:	f7fd fe69 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 800349e:	466b      	mov	r3, sp
 80034a0:	cb03      	ldmia	r3!, {r0, r1}
 80034a2:	4426      	add	r6, r4
 80034a4:	6069      	str	r1, [r5, #4]
 80034a6:	6028      	str	r0, [r5, #0]
 80034a8:	eb08 0546 	add.w	r5, r8, r6, lsl #1
 80034ac:	f858 0016 	ldr.w	r0, [r8, r6, lsl #1]
 80034b0:	6869      	ldr	r1, [r5, #4]
 80034b2:	466b      	mov	r3, sp
 80034b4:	4556      	cmp	r6, sl
 80034b6:	c303      	stmia	r3!, {r0, r1}
 80034b8:	eba7 0704 	sub.w	r7, r7, r4
 80034bc:	d20a      	bcs.n	80034d4 <internal_buffer_processed_read.part.0.constprop.0+0x88>
 80034be:	45b9      	cmp	r9, r7
 80034c0:	464c      	mov	r4, r9
 80034c2:	bf28      	it	cs
 80034c4:	463c      	movcs	r4, r7
 80034c6:	45b9      	cmp	r9, r7
 80034c8:	d2d4      	bcs.n	8003474 <internal_buffer_processed_read.part.0.constprop.0+0x28>
 80034ca:	e000      	b.n	80034ce <internal_buffer_processed_read.part.0.constprop.0+0x82>
 80034cc:	3c01      	subs	r4, #1
 80034ce:	07e3      	lsls	r3, r4, #31
 80034d0:	d4fc      	bmi.n	80034cc <internal_buffer_processed_read.part.0.constprop.0+0x80>
 80034d2:	e7cf      	b.n	8003474 <internal_buffer_processed_read.part.0.constprop.0+0x28>
 80034d4:	f108 0008 	add.w	r0, r8, #8
 80034d8:	b003      	add	sp, #12
 80034da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034de:	bf00      	nop
 80034e0:	200000ac 	.word	0x200000ac

080034e4 <test_clock_and_supply_test.isra.0>:
 80034e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034e8:	f5ad 7d09 	sub.w	sp, sp, #548	; 0x224
 80034ec:	f10d 021e 	add.w	r2, sp, #30
 80034f0:	4604      	mov	r4, r0
 80034f2:	460d      	mov	r5, r1
 80034f4:	6800      	ldr	r0, [r0, #0]
 80034f6:	2132      	movs	r1, #50	; 0x32
 80034f8:	f7fd ff22 	bl	8001340 <acc_sensor_reg_read>
 80034fc:	4862      	ldr	r0, [pc, #392]	; (8003688 <test_clock_and_supply_test.isra.0+0x1a4>)
 80034fe:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8003502:	f7fd fa71 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003506:	f8bd 001e 	ldrh.w	r0, [sp, #30]
 800350a:	b9a0      	cbnz	r0, 8003536 <test_clock_and_supply_test.isra.0+0x52>
 800350c:	4b5f      	ldr	r3, [pc, #380]	; (800368c <test_clock_and_supply_test.isra.0+0x1a8>)
 800350e:	4960      	ldr	r1, [pc, #384]	; (8003690 <test_clock_and_supply_test.isra.0+0x1ac>)
 8003510:	4a60      	ldr	r2, [pc, #384]	; (8003694 <test_clock_and_supply_test.isra.0+0x1b0>)
 8003512:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003514:	4607      	mov	r7, r0
 8003516:	f04f 0b04 	mov.w	fp, #4
 800351a:	4798      	blx	r3
 800351c:	4639      	mov	r1, r7
 800351e:	485e      	ldr	r0, [pc, #376]	; (8003698 <test_clock_and_supply_test.isra.0+0x1b4>)
 8003520:	f7fd fa62 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003524:	485d      	ldr	r0, [pc, #372]	; (800369c <test_clock_and_supply_test.isra.0+0x1b8>)
 8003526:	4639      	mov	r1, r7
 8003528:	f7fd fa5e 	bl	80009e8 <acc_diagnostic_log_scalar>
 800352c:	4658      	mov	r0, fp
 800352e:	f50d 7d09 	add.w	sp, sp, #548	; 0x224
 8003532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003536:	6829      	ldr	r1, [r5, #0]
 8003538:	6820      	ldr	r0, [r4, #0]
 800353a:	4f59      	ldr	r7, [pc, #356]	; (80036a0 <test_clock_and_supply_test.isra.0+0x1bc>)
 800353c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003540:	f7ff ff84 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8003544:	4682      	mov	sl, r0
 8003546:	4857      	ldr	r0, [pc, #348]	; (80036a4 <test_clock_and_supply_test.isra.0+0x1c0>)
 8003548:	f7fd f9f6 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 800354c:	ae48      	add	r6, sp, #288	; 0x120
 800354e:	4650      	mov	r0, sl
 8003550:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003554:	f7fd fa40 	bl	80009d8 <acc_diagnostic_log_data_u16>
 8003558:	f1aa 0402 	sub.w	r4, sl, #2
 800355c:	4631      	mov	r1, r6
 800355e:	ad88      	add	r5, sp, #544	; 0x220
 8003560:	2000      	movs	r0, #0
 8003562:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 8003566:	fb07 f203 	mul.w	r2, r7, r3
 800356a:	2b00      	cmp	r3, #0
 800356c:	bfa8      	it	ge
 800356e:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 8003572:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8003576:	bfa8      	it	ge
 8003578:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 800357c:	f1c2 0200 	rsb	r2, r2, #0
 8003580:	bfb4      	ite	lt
 8003582:	b213      	sxthlt	r3, r2
 8003584:	131b      	asrge	r3, r3, #12
 8003586:	f821 3b02 	strh.w	r3, [r1], #2
 800358a:	42a9      	cmp	r1, r5
 800358c:	4418      	add	r0, r3
 800358e:	d1e8      	bne.n	8003562 <test_clock_and_supply_test.isra.0+0x7e>
 8003590:	2800      	cmp	r0, #0
 8003592:	bfb8      	it	lt
 8003594:	307f      	addlt	r0, #127	; 0x7f
 8003596:	f340 15cf 	sbfx	r5, r0, #7, #16
 800359a:	4629      	mov	r1, r5
 800359c:	4842      	ldr	r0, [pc, #264]	; (80036a8 <test_clock_and_supply_test.isra.0+0x1c4>)
 800359e:	f8df 9118 	ldr.w	r9, [pc, #280]	; 80036b8 <test_clock_and_supply_test.isra.0+0x1d4>
 80035a2:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 80036a0 <test_clock_and_supply_test.isra.0+0x1bc>
 80035a6:	f7fd fa1f 	bl	80009e8 <acc_diagnostic_log_scalar>
 80035aa:	4840      	ldr	r0, [pc, #256]	; (80036ac <test_clock_and_supply_test.isra.0+0x1c8>)
 80035ac:	f7fd f9c4 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 80035b0:	2180      	movs	r1, #128	; 0x80
 80035b2:	4630      	mov	r0, r6
 80035b4:	f7fd fa08 	bl	80009c8 <acc_diagnostic_log_data_i16>
 80035b8:	2301      	movs	r3, #1
 80035ba:	461f      	mov	r7, r3
 80035bc:	f44f 6cfa 	mov.w	ip, #2000	; 0x7d0
 80035c0:	f44f 60c8 	mov.w	r0, #1600	; 0x640
 80035c4:	f04f 0b03 	mov.w	fp, #3
 80035c8:	4619      	mov	r1, r3
 80035ca:	eb0a 2101 	add.w	r1, sl, r1, lsl #8
 80035ce:	3902      	subs	r1, #2
 80035d0:	aa08      	add	r2, sp, #32
 80035d2:	f647 74ff 	movw	r4, #32767	; 0x7fff
 80035d6:	f931 3f02 	ldrsh.w	r3, [r1, #2]!
 80035da:	fb08 fe03 	mul.w	lr, r8, r3
 80035de:	2b00      	cmp	r3, #0
 80035e0:	bfa8      	it	ge
 80035e2:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 80035e6:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 80035ea:	bfa8      	it	ge
 80035ec:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 80035f0:	f1ce 0e00 	rsb	lr, lr, #0
 80035f4:	bfb4      	ite	lt
 80035f6:	fa0f f38e 	sxthlt.w	r3, lr
 80035fa:	131b      	asrge	r3, r3, #12
 80035fc:	442b      	add	r3, r5
 80035fe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8003602:	02db      	lsls	r3, r3, #11
 8003604:	f1c3 0e00 	rsb	lr, r3, #0
 8003608:	ea4f 3e1e 	mov.w	lr, lr, lsr #12
 800360c:	f1ce 0e00 	rsb	lr, lr, #0
 8003610:	bf4c      	ite	mi
 8003612:	fa0f f38e 	sxthmi.w	r3, lr
 8003616:	f343 330f 	sbfxpl	r3, r3, #12, #16
 800361a:	f822 3b02 	strh.w	r3, [r2], #2
 800361e:	429c      	cmp	r4, r3
 8003620:	bfa8      	it	ge
 8003622:	461c      	movge	r4, r3
 8003624:	4296      	cmp	r6, r2
 8003626:	b224      	sxth	r4, r4
 8003628:	d1d5      	bne.n	80035d6 <test_clock_and_supply_test.isra.0+0xf2>
 800362a:	4284      	cmp	r4, r0
 800362c:	db01      	blt.n	8003632 <test_clock_and_supply_test.isra.0+0x14e>
 800362e:	4564      	cmp	r4, ip
 8003630:	dd0f      	ble.n	8003652 <test_clock_and_supply_test.isra.0+0x16e>
 8003632:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8003636:	e9cd 9c03 	strd	r9, ip, [sp, #12]
 800363a:	4b14      	ldr	r3, [pc, #80]	; (800368c <test_clock_and_supply_test.isra.0+0x1a8>)
 800363c:	f8cd 9000 	str.w	r9, [sp]
 8003640:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8003642:	4a1b      	ldr	r2, [pc, #108]	; (80036b0 <test_clock_and_supply_test.isra.0+0x1cc>)
 8003644:	4912      	ldr	r1, [pc, #72]	; (8003690 <test_clock_and_supply_test.isra.0+0x1ac>)
 8003646:	464b      	mov	r3, r9
 8003648:	2000      	movs	r0, #0
 800364a:	47b8      	blx	r7
 800364c:	f04f 0b04 	mov.w	fp, #4
 8003650:	2700      	movs	r7, #0
 8003652:	4621      	mov	r1, r4
 8003654:	4648      	mov	r0, r9
 8003656:	f7fd f9c7 	bl	80009e8 <acc_diagnostic_log_scalar>
 800365a:	f109 000c 	add.w	r0, r9, #12
 800365e:	f7fd f96b 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8003662:	2180      	movs	r1, #128	; 0x80
 8003664:	a808      	add	r0, sp, #32
 8003666:	f7fd f9af 	bl	80009c8 <acc_diagnostic_log_data_i16>
 800366a:	4b12      	ldr	r3, [pc, #72]	; (80036b4 <test_clock_and_supply_test.isra.0+0x1d0>)
 800366c:	f109 091c 	add.w	r9, r9, #28
 8003670:	4599      	cmp	r9, r3
 8003672:	d006      	beq.n	8003682 <test_clock_and_supply_test.isra.0+0x19e>
 8003674:	f8d9 1014 	ldr.w	r1, [r9, #20]
 8003678:	f9b9 0018 	ldrsh.w	r0, [r9, #24]
 800367c:	f9b9 c01a 	ldrsh.w	ip, [r9, #26]
 8003680:	e7a3      	b.n	80035ca <test_clock_and_supply_test.isra.0+0xe6>
 8003682:	2101      	movs	r1, #1
 8003684:	e74b      	b.n	800351e <test_clock_and_supply_test.isra.0+0x3a>
 8003686:	bf00      	nop
 8003688:	0800a68c 	.word	0x0800a68c
 800368c:	200000ac 	.word	0x200000ac
 8003690:	0800a254 	.word	0x0800a254
 8003694:	0800a698 	.word	0x0800a698
 8003698:	0800a760 	.word	0x0800a760
 800369c:	0800a774 	.word	0x0800a774
 80036a0:	fffffb50 	.word	0xfffffb50
 80036a4:	0800a6ec 	.word	0x0800a6ec
 80036a8:	0800a704 	.word	0x0800a704
 80036ac:	0800a710 	.word	0x0800a710
 80036b0:	0800a718 	.word	0x0800a718
 80036b4:	08008420 	.word	0x08008420
 80036b8:	080083cc 	.word	0x080083cc

080036bc <test_clock_and_supply>:
 80036bc:	b530      	push	{r4, r5, lr}
 80036be:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80036c0:	2b01      	cmp	r3, #1
 80036c2:	b083      	sub	sp, #12
 80036c4:	4604      	mov	r4, r0
 80036c6:	d005      	beq.n	80036d4 <test_clock_and_supply+0x18>
 80036c8:	2b02      	cmp	r3, #2
 80036ca:	d02e      	beq.n	800372a <test_clock_and_supply+0x6e>
 80036cc:	b1eb      	cbz	r3, 800370a <test_clock_and_supply+0x4e>
 80036ce:	2000      	movs	r0, #0
 80036d0:	b003      	add	sp, #12
 80036d2:	bd30      	pop	{r4, r5, pc}
 80036d4:	4d1d      	ldr	r5, [pc, #116]	; (800374c <test_clock_and_supply+0x90>)
 80036d6:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 80036da:	2b01      	cmp	r3, #1
 80036dc:	d904      	bls.n	80036e8 <test_clock_and_supply+0x2c>
 80036de:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80036e0:	4a1b      	ldr	r2, [pc, #108]	; (8003750 <test_clock_and_supply+0x94>)
 80036e2:	491c      	ldr	r1, [pc, #112]	; (8003754 <test_clock_and_supply+0x98>)
 80036e4:	2002      	movs	r0, #2
 80036e6:	4798      	blx	r3
 80036e8:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80036ea:	9301      	str	r3, [sp, #4]
 80036ec:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 80036f0:	6820      	ldr	r0, [r4, #0]
 80036f2:	ab01      	add	r3, sp, #4
 80036f4:	f7fd feca 	bl	800148c <acc_cpd_assembly_test_load_program>
 80036f8:	b9e8      	cbnz	r0, 8003736 <test_clock_and_supply+0x7a>
 80036fa:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80036fc:	4a16      	ldr	r2, [pc, #88]	; (8003758 <test_clock_and_supply+0x9c>)
 80036fe:	4915      	ldr	r1, [pc, #84]	; (8003754 <test_clock_and_supply+0x98>)
 8003700:	2000      	movs	r0, #0
 8003702:	4798      	blx	r3
 8003704:	2004      	movs	r0, #4
 8003706:	b003      	add	sp, #12
 8003708:	bd30      	pop	{r4, r5, pc}
 800370a:	4b10      	ldr	r3, [pc, #64]	; (800374c <test_clock_and_supply+0x90>)
 800370c:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8003710:	2a01      	cmp	r2, #1
 8003712:	d904      	bls.n	800371e <test_clock_and_supply+0x62>
 8003714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003716:	4a11      	ldr	r2, [pc, #68]	; (800375c <test_clock_and_supply+0xa0>)
 8003718:	490e      	ldr	r1, [pc, #56]	; (8003754 <test_clock_and_supply+0x98>)
 800371a:	2002      	movs	r0, #2
 800371c:	4798      	blx	r3
 800371e:	4810      	ldr	r0, [pc, #64]	; (8003760 <test_clock_and_supply+0xa4>)
 8003720:	f7fd f96a 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8003724:	2001      	movs	r0, #1
 8003726:	b003      	add	sp, #12
 8003728:	bd30      	pop	{r4, r5, pc}
 800372a:	f100 010c 	add.w	r1, r0, #12
 800372e:	f7ff fed9 	bl	80034e4 <test_clock_and_supply_test.isra.0>
 8003732:	b003      	add	sp, #12
 8003734:	bd30      	pop	{r4, r5, pc}
 8003736:	6820      	ldr	r0, [r4, #0]
 8003738:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 800373c:	f7fd fe16 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8003740:	2800      	cmp	r0, #0
 8003742:	d0da      	beq.n	80036fa <test_clock_and_supply+0x3e>
 8003744:	2002      	movs	r0, #2
 8003746:	b003      	add	sp, #12
 8003748:	bd30      	pop	{r4, r5, pc}
 800374a:	bf00      	nop
 800374c:	200000ac 	.word	0x200000ac
 8003750:	0800a7c0 	.word	0x0800a7c0
 8003754:	0800a254 	.word	0x0800a254
 8003758:	0800a7e0 	.word	0x0800a7e0
 800375c:	0800a788 	.word	0x0800a788
 8003760:	0800a7a8 	.word	0x0800a7a8

08003764 <acc_confprogram_live_patch.constprop.0>:
 8003764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003768:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 800376c:	b089      	sub	sp, #36	; 0x24
 800376e:	8873      	ldrh	r3, [r6, #2]
 8003770:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8003772:	b34b      	cbz	r3, 80037c8 <acc_confprogram_live_patch.constprop.0+0x64>
 8003774:	4680      	mov	r8, r0
 8003776:	4689      	mov	r9, r1
 8003778:	2500      	movs	r5, #0
 800377a:	f04f 0b01 	mov.w	fp, #1
 800377e:	6873      	ldr	r3, [r6, #4]
 8003780:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8003784:	f3c4 7001 	ubfx	r0, r4, #28, #2
 8003788:	2801      	cmp	r0, #1
 800378a:	d00c      	beq.n	80037a6 <acc_confprogram_live_patch.constprop.0+0x42>
 800378c:	2802      	cmp	r0, #2
 800378e:	d033      	beq.n	80037f8 <acc_confprogram_live_patch.constprop.0+0x94>
 8003790:	b1f0      	cbz	r0, 80037d0 <acc_confprogram_live_patch.constprop.0+0x6c>
 8003792:	4b34      	ldr	r3, [pc, #208]	; (8003864 <acc_confprogram_live_patch.constprop.0+0x100>)
 8003794:	4a34      	ldr	r2, [pc, #208]	; (8003868 <acc_confprogram_live_patch.constprop.0+0x104>)
 8003796:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003798:	4934      	ldr	r1, [pc, #208]	; (800386c <acc_confprogram_live_patch.constprop.0+0x108>)
 800379a:	2000      	movs	r0, #0
 800379c:	4798      	blx	r3
 800379e:	2000      	movs	r0, #0
 80037a0:	b009      	add	sp, #36	; 0x24
 80037a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037a6:	b2a3      	uxth	r3, r4
 80037a8:	4619      	mov	r1, r3
 80037aa:	f859 2023 	ldr.w	r2, [r9, r3, lsl #2]
 80037ae:	f022 020f 	bic.w	r2, r2, #15
 80037b2:	b117      	cbz	r7, 80037ba <acc_confprogram_live_patch.constprop.0+0x56>
 80037b4:	f3c4 4403 	ubfx	r4, r4, #16, #4
 80037b8:	4322      	orrs	r2, r4
 80037ba:	4640      	mov	r0, r8
 80037bc:	f7fd fd0e 	bl	80011dc <acc_sensor_a121_conf_write_instr>
 80037c0:	8873      	ldrh	r3, [r6, #2]
 80037c2:	3501      	adds	r5, #1
 80037c4:	429d      	cmp	r5, r3
 80037c6:	d3da      	bcc.n	800377e <acc_confprogram_live_patch.constprop.0+0x1a>
 80037c8:	2001      	movs	r0, #1
 80037ca:	b009      	add	sp, #36	; 0x24
 80037cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037d0:	f3c4 5a44 	ubfx	sl, r4, #21, #5
 80037d4:	fa0b f30a 	lsl.w	r3, fp, sl
 80037d8:	429f      	cmp	r7, r3
 80037da:	d316      	bcc.n	800380a <acc_confprogram_live_patch.constprop.0+0xa6>
 80037dc:	4a21      	ldr	r2, [pc, #132]	; (8003864 <acc_confprogram_live_patch.constprop.0+0x100>)
 80037de:	9700      	str	r7, [sp, #0]
 80037e0:	3b01      	subs	r3, #1
 80037e2:	9301      	str	r3, [sp, #4]
 80037e4:	4921      	ldr	r1, [pc, #132]	; (800386c <acc_confprogram_live_patch.constprop.0+0x108>)
 80037e6:	9003      	str	r0, [sp, #12]
 80037e8:	b2a3      	uxth	r3, r4
 80037ea:	6c14      	ldr	r4, [r2, #64]	; 0x40
 80037ec:	4a20      	ldr	r2, [pc, #128]	; (8003870 <acc_confprogram_live_patch.constprop.0+0x10c>)
 80037ee:	47a0      	blx	r4
 80037f0:	9803      	ldr	r0, [sp, #12]
 80037f2:	b009      	add	sp, #36	; 0x24
 80037f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037f8:	b2a3      	uxth	r3, r4
 80037fa:	4619      	mov	r1, r3
 80037fc:	f859 2023 	ldr.w	r2, [r9, r3, lsl #2]
 8003800:	f022 020f 	bic.w	r2, r2, #15
 8003804:	2f00      	cmp	r7, #0
 8003806:	d1d8      	bne.n	80037ba <acc_confprogram_live_patch.constprop.0+0x56>
 8003808:	e7d4      	b.n	80037b4 <acc_confprogram_live_patch.constprop.0+0x50>
 800380a:	b2a3      	uxth	r3, r4
 800380c:	f443 4c20 	orr.w	ip, r3, #40960	; 0xa000
 8003810:	9303      	str	r3, [sp, #12]
 8003812:	a905      	add	r1, sp, #20
 8003814:	2301      	movs	r3, #1
 8003816:	f8ad 0018 	strh.w	r0, [sp, #24]
 800381a:	f8cd 001a 	str.w	r0, [sp, #26]
 800381e:	2205      	movs	r2, #5
 8003820:	4640      	mov	r0, r8
 8003822:	f8ad c014 	strh.w	ip, [sp, #20]
 8003826:	f8ad b016 	strh.w	fp, [sp, #22]
 800382a:	f7fd fca1 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 800382e:	a904      	add	r1, sp, #16
 8003830:	f10d 001a 	add.w	r0, sp, #26
 8003834:	2201      	movs	r2, #1
 8003836:	f7fd f9a5 	bl	8000b84 <acc_utils_transfer_buffer_to_uint32>
 800383a:	f1ca 0a20 	rsb	sl, sl, #32
 800383e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003842:	f3c4 4404 	ubfx	r4, r4, #16, #5
 8003846:	fa23 fa0a 	lsr.w	sl, r3, sl
 800384a:	9b04      	ldr	r3, [sp, #16]
 800384c:	9903      	ldr	r1, [sp, #12]
 800384e:	fa0a fa04 	lsl.w	sl, sl, r4
 8003852:	ea23 020a 	bic.w	r2, r3, sl
 8003856:	fa07 f404 	lsl.w	r4, r7, r4
 800385a:	4322      	orrs	r2, r4
 800385c:	4640      	mov	r0, r8
 800385e:	f7fd fcbd 	bl	80011dc <acc_sensor_a121_conf_write_instr>
 8003862:	e7ad      	b.n	80037c0 <acc_confprogram_live_patch.constprop.0+0x5c>
 8003864:	200000ac 	.word	0x200000ac
 8003868:	0800a83c 	.word	0x0800a83c
 800386c:	0800a0a4 	.word	0x0800a0a4
 8003870:	0800a804 	.word	0x0800a804

08003874 <test_communication>:
 8003874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003878:	f8df a340 	ldr.w	sl, [pc, #832]	; 8003bbc <test_communication+0x348>
 800387c:	ed2d 8b02 	vpush	{d8}
 8003880:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003884:	2b01      	cmp	r3, #1
 8003886:	b095      	sub	sp, #84	; 0x54
 8003888:	4683      	mov	fp, r0
 800388a:	d905      	bls.n	8003898 <test_communication+0x24>
 800388c:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003890:	4aba      	ldr	r2, [pc, #744]	; (8003b7c <test_communication+0x308>)
 8003892:	49bb      	ldr	r1, [pc, #748]	; (8003b80 <test_communication+0x30c>)
 8003894:	2002      	movs	r0, #2
 8003896:	4798      	blx	r3
 8003898:	48ba      	ldr	r0, [pc, #744]	; (8003b84 <test_communication+0x310>)
 800389a:	f8df 92e4 	ldr.w	r9, [pc, #740]	; 8003b80 <test_communication+0x30c>
 800389e:	f7fd f8ab 	bl	80009f8 <acc_diagnostic_log_set_scope>
 80038a2:	4bb9      	ldr	r3, [pc, #740]	; (8003b88 <test_communication+0x314>)
 80038a4:	f8da 404c 	ldr.w	r4, [sl, #76]	; 0x4c
 80038a8:	f8db 0000 	ldr.w	r0, [fp]
 80038ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80038b0:	2101      	movs	r1, #1
 80038b2:	fba3 3404 	umull	r3, r4, r3, r4
 80038b6:	f7fd fd33 	bl	8001320 <acc_sensor_reg_write>
 80038ba:	f8db 0000 	ldr.w	r0, [fp]
 80038be:	2200      	movs	r2, #0
 80038c0:	2101      	movs	r1, #1
 80038c2:	f7fd fd2d 	bl	8001320 <acc_sensor_reg_write>
 80038c6:	f8db 0000 	ldr.w	r0, [fp]
 80038ca:	2201      	movs	r2, #1
 80038cc:	215d      	movs	r1, #93	; 0x5d
 80038ce:	f7fd fd27 	bl	8001320 <acc_sensor_reg_write>
 80038d2:	f8db 0000 	ldr.w	r0, [fp]
 80038d6:	2200      	movs	r2, #0
 80038d8:	215d      	movs	r1, #93	; 0x5d
 80038da:	f7fd fd21 	bl	8001320 <acc_sensor_reg_write>
 80038de:	f8db 0000 	ldr.w	r0, [fp]
 80038e2:	2200      	movs	r2, #0
 80038e4:	2174      	movs	r1, #116	; 0x74
 80038e6:	f7fd fd1b 	bl	8001320 <acc_sensor_reg_write>
 80038ea:	f8db 0000 	ldr.w	r0, [fp]
 80038ee:	2201      	movs	r2, #1
 80038f0:	21d5      	movs	r1, #213	; 0xd5
 80038f2:	f7fd fd15 	bl	8001320 <acc_sensor_reg_write>
 80038f6:	09a5      	lsrs	r5, r4, #6
 80038f8:	0da2      	lsrs	r2, r4, #22
 80038fa:	f8db 0000 	ldr.w	r0, [fp]
 80038fe:	2155      	movs	r1, #85	; 0x55
 8003900:	f7fd fd0e 	bl	8001320 <acc_sensor_reg_write>
 8003904:	b2aa      	uxth	r2, r5
 8003906:	f8db 0000 	ldr.w	r0, [fp]
 800390a:	2156      	movs	r1, #86	; 0x56
 800390c:	f7fd fd08 	bl	8001320 <acc_sensor_reg_write>
 8003910:	f8db 0000 	ldr.w	r0, [fp]
 8003914:	2203      	movs	r2, #3
 8003916:	2154      	movs	r1, #84	; 0x54
 8003918:	f7fd fd02 	bl	8001320 <acc_sensor_reg_write>
 800391c:	4b9b      	ldr	r3, [pc, #620]	; (8003b8c <test_communication+0x318>)
 800391e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003922:	ab0f      	add	r3, sp, #60	; 0x3c
 8003924:	c303      	stmia	r3!, {r0, r1}
 8003926:	2500      	movs	r5, #0
 8003928:	801a      	strh	r2, [r3, #0]
 800392a:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
 800392e:	240a      	movs	r4, #10
 8003930:	af0f      	add	r7, sp, #60	; 0x3c
 8003932:	2601      	movs	r6, #1
 8003934:	9402      	str	r4, [sp, #8]
 8003936:	f837 8b02 	ldrh.w	r8, [r7], #2
 800393a:	f8db 0000 	ldr.w	r0, [fp]
 800393e:	4642      	mov	r2, r8
 8003940:	212c      	movs	r1, #44	; 0x2c
 8003942:	f7fd fced 	bl	8001320 <acc_sensor_reg_write>
 8003946:	f8db 0000 	ldr.w	r0, [fp]
 800394a:	aa0d      	add	r2, sp, #52	; 0x34
 800394c:	212c      	movs	r1, #44	; 0x2c
 800394e:	f7fd fcf7 	bl	8001340 <acc_sensor_reg_read>
 8003952:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 8003956:	45e0      	cmp	r8, ip
 8003958:	d00e      	beq.n	8003978 <test_communication+0x104>
 800395a:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 800395e:	4a8c      	ldr	r2, [pc, #560]	; (8003b90 <test_communication+0x31c>)
 8003960:	2b03      	cmp	r3, #3
 8003962:	4649      	mov	r1, r9
 8003964:	4633      	mov	r3, r6
 8003966:	f04f 0004 	mov.w	r0, #4
 800396a:	d904      	bls.n	8003976 <test_communication+0x102>
 800396c:	e9cd 8c00 	strd	r8, ip, [sp]
 8003970:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003974:	47a0      	blx	r4
 8003976:	3501      	adds	r5, #1
 8003978:	3601      	adds	r6, #1
 800397a:	2e06      	cmp	r6, #6
 800397c:	d1db      	bne.n	8003936 <test_communication+0xc2>
 800397e:	9c02      	ldr	r4, [sp, #8]
 8003980:	3c01      	subs	r4, #1
 8003982:	d1d5      	bne.n	8003930 <test_communication+0xbc>
 8003984:	2d00      	cmp	r5, #0
 8003986:	f000 816b 	beq.w	8003c60 <test_communication+0x3ec>
 800398a:	2232      	movs	r2, #50	; 0x32
 800398c:	462b      	mov	r3, r5
 800398e:	497c      	ldr	r1, [pc, #496]	; (8003b80 <test_communication+0x30c>)
 8003990:	9200      	str	r2, [sp, #0]
 8003992:	4620      	mov	r0, r4
 8003994:	4a7f      	ldr	r2, [pc, #508]	; (8003b94 <test_communication+0x320>)
 8003996:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 800399a:	47a8      	blx	r5
 800399c:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 80039a0:	4977      	ldr	r1, [pc, #476]	; (8003b80 <test_communication+0x30c>)
 80039a2:	4a7d      	ldr	r2, [pc, #500]	; (8003b98 <test_communication+0x324>)
 80039a4:	4620      	mov	r0, r4
 80039a6:	4798      	blx	r3
 80039a8:	2304      	movs	r3, #4
 80039aa:	9305      	str	r3, [sp, #20]
 80039ac:	4621      	mov	r1, r4
 80039ae:	4d7b      	ldr	r5, [pc, #492]	; (8003b9c <test_communication+0x328>)
 80039b0:	487b      	ldr	r0, [pc, #492]	; (8003ba0 <test_communication+0x32c>)
 80039b2:	f7fd f819 	bl	80009e8 <acc_diagnostic_log_scalar>
 80039b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80039b8:	ac0f      	add	r4, sp, #60	; 0x3c
 80039ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80039bc:	f8db 2018 	ldr.w	r2, [fp, #24]
 80039c0:	682b      	ldr	r3, [r5, #0]
 80039c2:	6023      	str	r3, [r4, #0]
 80039c4:	2300      	movs	r3, #0
 80039c6:	0897      	lsrs	r7, r2, #2
 80039c8:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 80039cc:	920a      	str	r2, [sp, #40]	; 0x28
 80039ce:	9302      	str	r3, [sp, #8]
 80039d0:	f022 0203 	bic.w	r2, r2, #3
 80039d4:	230a      	movs	r3, #10
 80039d6:	46d9      	mov	r9, fp
 80039d8:	920b      	str	r2, [sp, #44]	; 0x2c
 80039da:	9306      	str	r3, [sp, #24]
 80039dc:	46bb      	mov	fp, r7
 80039de:	ab0f      	add	r3, sp, #60	; 0x3c
 80039e0:	9303      	str	r3, [sp, #12]
 80039e2:	465f      	mov	r7, fp
 80039e4:	2f00      	cmp	r7, #0
 80039e6:	f000 80bc 	beq.w	8003b62 <test_communication+0x2ee>
 80039ea:	9b03      	ldr	r3, [sp, #12]
 80039ec:	f8d9 2014 	ldr.w	r2, [r9, #20]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80039f4:	9307      	str	r3, [sp, #28]
 80039f6:	1f13      	subs	r3, r2, #4
 80039f8:	1859      	adds	r1, r3, r1
 80039fa:	9807      	ldr	r0, [sp, #28]
 80039fc:	f843 0f04 	str.w	r0, [r3, #4]!
 8003a00:	4299      	cmp	r1, r3
 8003a02:	d1fa      	bne.n	80039fa <test_communication+0x186>
 8003a04:	ab0d      	add	r3, sp, #52	; 0x34
 8003a06:	9300      	str	r3, [sp, #0]
 8003a08:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8003a0c:	f8d9 0000 	ldr.w	r0, [r9]
 8003a10:	463b      	mov	r3, r7
 8003a12:	f7fd fbfd 	bl	8001210 <acc_sensor_a121_buffer_write.constprop.0>
 8003a16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a18:	f8d9 0014 	ldr.w	r0, [r9, #20]
 8003a1c:	f023 0203 	bic.w	r2, r3, #3
 8003a20:	2100      	movs	r1, #0
 8003a22:	f002 ffa7 	bl	8006974 <memset>
 8003a26:	f8ba 3030 	ldrh.w	r3, [sl, #48]	; 0x30
 8003a2a:	f8d9 2000 	ldr.w	r2, [r9]
 8003a2e:	f8d9 600c 	ldr.w	r6, [r9, #12]
 8003a32:	9704      	str	r7, [sp, #16]
 8003a34:	3b08      	subs	r3, #8
 8003a36:	ee08 2a10 	vmov	s16, r2
 8003a3a:	089b      	lsrs	r3, r3, #2
 8003a3c:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003a40:	9209      	str	r2, [sp, #36]	; 0x24
 8003a42:	9308      	str	r3, [sp, #32]
 8003a44:	f04f 0800 	mov.w	r8, #0
 8003a48:	e00f      	b.n	8003a6a <test_communication+0x1f6>
 8003a4a:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003a4e:	4798      	blx	r3
 8003a50:	2500      	movs	r5, #0
 8003a52:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003a56:	4415      	add	r5, r2
 8003a58:	9a04      	ldr	r2, [sp, #16]
 8003a5a:	44a0      	add	r8, r4
 8003a5c:	3301      	adds	r3, #1
 8003a5e:	1b12      	subs	r2, r2, r4
 8003a60:	4547      	cmp	r7, r8
 8003a62:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
 8003a66:	9204      	str	r2, [sp, #16]
 8003a68:	d92e      	bls.n	8003ac8 <test_communication+0x254>
 8003a6a:	9b08      	ldr	r3, [sp, #32]
 8003a6c:	9a04      	ldr	r2, [sp, #16]
 8003a6e:	494d      	ldr	r1, [pc, #308]	; (8003ba4 <test_communication+0x330>)
 8003a70:	4293      	cmp	r3, r2
 8003a72:	bf28      	it	cs
 8003a74:	4613      	movcs	r3, r2
 8003a76:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003a7a:	4a4b      	ldr	r2, [pc, #300]	; (8003ba8 <test_communication+0x334>)
 8003a7c:	461c      	mov	r4, r3
 8003a7e:	f04f 0000 	mov.w	r0, #0
 8003a82:	d8e2      	bhi.n	8003a4a <test_communication+0x1d6>
 8003a84:	005b      	lsls	r3, r3, #1
 8003a86:	3b01      	subs	r3, #1
 8003a88:	2100      	movs	r1, #0
 8003a8a:	00a5      	lsls	r5, r4, #2
 8003a8c:	f106 0b08 	add.w	fp, r6, #8
 8003a90:	f249 0200 	movw	r2, #36864	; 0x9000
 8003a94:	8032      	strh	r2, [r6, #0]
 8003a96:	80b3      	strh	r3, [r6, #4]
 8003a98:	462a      	mov	r2, r5
 8003a9a:	80f1      	strh	r1, [r6, #6]
 8003a9c:	f8a6 8002 	strh.w	r8, [r6, #2]
 8003aa0:	4658      	mov	r0, fp
 8003aa2:	f002 ff67 	bl	8006974 <memset>
 8003aa6:	1ca2      	adds	r2, r4, #2
 8003aa8:	ee18 0a10 	vmov	r0, s16
 8003aac:	0052      	lsls	r2, r2, #1
 8003aae:	2301      	movs	r3, #1
 8003ab0:	4631      	mov	r1, r6
 8003ab2:	f7fd fb5d 	bl	8001170 <acc_rss_integration_sensor_device_transfer>
 8003ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ab8:	4622      	mov	r2, r4
 8003aba:	4658      	mov	r0, fp
 8003abc:	eb03 0188 	add.w	r1, r3, r8, lsl #2
 8003ac0:	f7fd f860 	bl	8000b84 <acc_utils_transfer_buffer_to_uint32>
 8003ac4:	3508      	adds	r5, #8
 8003ac6:	e7c4      	b.n	8003a52 <test_communication+0x1de>
 8003ac8:	9e07      	ldr	r6, [sp, #28]
 8003aca:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8003ace:	2500      	movs	r5, #0
 8003ad0:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8003ad4:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8003ad8:	42a6      	cmp	r6, r4
 8003ada:	d00f      	beq.n	8003afc <test_communication+0x288>
 8003adc:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003ae0:	4a32      	ldr	r2, [pc, #200]	; (8003bac <test_communication+0x338>)
 8003ae2:	4927      	ldr	r1, [pc, #156]	; (8003b80 <test_communication+0x30c>)
 8003ae4:	2b03      	cmp	r3, #3
 8003ae6:	f04f 0004 	mov.w	r0, #4
 8003aea:	462b      	mov	r3, r5
 8003aec:	d904      	bls.n	8003af8 <test_communication+0x284>
 8003aee:	e9cd 6400 	strd	r6, r4, [sp]
 8003af2:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003af6:	47a0      	blx	r4
 8003af8:	f108 0801 	add.w	r8, r8, #1
 8003afc:	3501      	adds	r5, #1
 8003afe:	42af      	cmp	r7, r5
 8003b00:	d1e6      	bne.n	8003ad0 <test_communication+0x25c>
 8003b02:	f8cd 8008 	str.w	r8, [sp, #8]
 8003b06:	9b03      	ldr	r3, [sp, #12]
 8003b08:	aa14      	add	r2, sp, #80	; 0x50
 8003b0a:	3304      	adds	r3, #4
 8003b0c:	4293      	cmp	r3, r2
 8003b0e:	9303      	str	r3, [sp, #12]
 8003b10:	f47f af68 	bne.w	80039e4 <test_communication+0x170>
 8003b14:	9b06      	ldr	r3, [sp, #24]
 8003b16:	3b01      	subs	r3, #1
 8003b18:	46bb      	mov	fp, r7
 8003b1a:	9306      	str	r3, [sp, #24]
 8003b1c:	f47f af5f 	bne.w	80039de <test_communication+0x16a>
 8003b20:	9b02      	ldr	r3, [sp, #8]
 8003b22:	46cb      	mov	fp, r9
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	d04b      	beq.n	8003bc0 <test_communication+0x34c>
 8003b28:	9d06      	ldr	r5, [sp, #24]
 8003b2a:	4915      	ldr	r1, [pc, #84]	; (8003b80 <test_communication+0x30c>)
 8003b2c:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003b30:	2232      	movs	r2, #50	; 0x32
 8003b32:	fb02 f207 	mul.w	r2, r2, r7
 8003b36:	9200      	str	r2, [sp, #0]
 8003b38:	4628      	mov	r0, r5
 8003b3a:	4a1d      	ldr	r2, [pc, #116]	; (8003bb0 <test_communication+0x33c>)
 8003b3c:	47a0      	blx	r4
 8003b3e:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003b42:	4a1c      	ldr	r2, [pc, #112]	; (8003bb4 <test_communication+0x340>)
 8003b44:	490e      	ldr	r1, [pc, #56]	; (8003b80 <test_communication+0x30c>)
 8003b46:	4628      	mov	r0, r5
 8003b48:	4798      	blx	r3
 8003b4a:	481b      	ldr	r0, [pc, #108]	; (8003bb8 <test_communication+0x344>)
 8003b4c:	4629      	mov	r1, r5
 8003b4e:	f7fc ff4b 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003b52:	2304      	movs	r3, #4
 8003b54:	9305      	str	r3, [sp, #20]
 8003b56:	9805      	ldr	r0, [sp, #20]
 8003b58:	b015      	add	sp, #84	; 0x54
 8003b5a:	ecbd 8b02 	vpop	{d8}
 8003b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b62:	ab0d      	add	r3, sp, #52	; 0x34
 8003b64:	9300      	str	r3, [sp, #0]
 8003b66:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003b6a:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8003b6e:	f8d9 0000 	ldr.w	r0, [r9]
 8003b72:	463b      	mov	r3, r7
 8003b74:	f7fd fb4c 	bl	8001210 <acc_sensor_a121_buffer_write.constprop.0>
 8003b78:	e7c5      	b.n	8003b06 <test_communication+0x292>
 8003b7a:	bf00      	nop
 8003b7c:	0800a864 	.word	0x0800a864
 8003b80:	0800a254 	.word	0x0800a254
 8003b84:	0800a880 	.word	0x0800a880
 8003b88:	10624dd3 	.word	0x10624dd3
 8003b8c:	08008420 	.word	0x08008420
 8003b90:	0800a894 	.word	0x0800a894
 8003b94:	0800a900 	.word	0x0800a900
 8003b98:	0800a934 	.word	0x0800a934
 8003b9c:	0800842c 	.word	0x0800842c
 8003ba0:	0800a954 	.word	0x0800a954
 8003ba4:	0800a1b8 	.word	0x0800a1b8
 8003ba8:	0800a978 	.word	0x0800a978
 8003bac:	0800a990 	.word	0x0800a990
 8003bb0:	0800a9e4 	.word	0x0800a9e4
 8003bb4:	0800aa14 	.word	0x0800aa14
 8003bb8:	0800aa34 	.word	0x0800aa34
 8003bbc:	200000ac 	.word	0x200000ac
 8003bc0:	482f      	ldr	r0, [pc, #188]	; (8003c80 <test_communication+0x40c>)
 8003bc2:	2101      	movs	r1, #1
 8003bc4:	f7fc ff10 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003bc8:	9b05      	ldr	r3, [sp, #20]
 8003bca:	2b04      	cmp	r3, #4
 8003bcc:	d0c3      	beq.n	8003b56 <test_communication+0x2e2>
 8003bce:	9c02      	ldr	r4, [sp, #8]
 8003bd0:	f8db 0000 	ldr.w	r0, [fp]
 8003bd4:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 8003bd8:	aa0f      	add	r2, sp, #60	; 0x3c
 8003bda:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003bde:	f7fd fbaf 	bl	8001340 <acc_sensor_reg_read>
 8003be2:	f8db 5018 	ldr.w	r5, [fp, #24]
 8003be6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8003bea:	9410      	str	r4, [sp, #64]	; 0x40
 8003bec:	940f      	str	r4, [sp, #60]	; 0x3c
 8003bee:	08ad      	lsrs	r5, r5, #2
 8003bf0:	2464      	movs	r4, #100	; 0x64
 8003bf2:	ab0f      	add	r3, sp, #60	; 0x3c
 8003bf4:	9300      	str	r3, [sp, #0]
 8003bf6:	f8db 2014 	ldr.w	r2, [fp, #20]
 8003bfa:	f8db 100c 	ldr.w	r1, [fp, #12]
 8003bfe:	f8db 0000 	ldr.w	r0, [fp]
 8003c02:	462b      	mov	r3, r5
 8003c04:	f7fd fb04 	bl	8001210 <acc_sensor_a121_buffer_write.constprop.0>
 8003c08:	3c01      	subs	r4, #1
 8003c0a:	d1f2      	bne.n	8003bf2 <test_communication+0x37e>
 8003c0c:	f8db 0000 	ldr.w	r0, [fp]
 8003c10:	f8ad 4034 	strh.w	r4, [sp, #52]	; 0x34
 8003c14:	aa0d      	add	r2, sp, #52	; 0x34
 8003c16:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003c1a:	f7fd fb91 	bl	8001340 <acc_sensor_reg_read>
 8003c1e:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8003c22:	1b9b      	subs	r3, r3, r6
 8003c24:	b29b      	uxth	r3, r3
 8003c26:	b1fb      	cbz	r3, 8003c68 <test_communication+0x3f4>
 8003c28:	f89a 2048 	ldrb.w	r2, [sl, #72]	; 0x48
 8003c2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8003c2e:	2a01      	cmp	r2, #1
 8003c30:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8003c34:	fbb4 f4f3 	udiv	r4, r4, r3
 8003c38:	d906      	bls.n	8003c48 <test_communication+0x3d4>
 8003c3a:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 8003c3e:	4a11      	ldr	r2, [pc, #68]	; (8003c84 <test_communication+0x410>)
 8003c40:	4911      	ldr	r1, [pc, #68]	; (8003c88 <test_communication+0x414>)
 8003c42:	4623      	mov	r3, r4
 8003c44:	2002      	movs	r0, #2
 8003c46:	47a8      	blx	r5
 8003c48:	4810      	ldr	r0, [pc, #64]	; (8003c8c <test_communication+0x418>)
 8003c4a:	4621      	mov	r1, r4
 8003c4c:	f7fc fecc 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003c50:	2303      	movs	r3, #3
 8003c52:	9305      	str	r3, [sp, #20]
 8003c54:	9805      	ldr	r0, [sp, #20]
 8003c56:	b015      	add	sp, #84	; 0x54
 8003c58:	ecbd 8b02 	vpop	{d8}
 8003c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c60:	2303      	movs	r3, #3
 8003c62:	2101      	movs	r1, #1
 8003c64:	9305      	str	r3, [sp, #20]
 8003c66:	e6a2      	b.n	80039ae <test_communication+0x13a>
 8003c68:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	d0ef      	beq.n	8003c50 <test_communication+0x3dc>
 8003c70:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003c74:	4a06      	ldr	r2, [pc, #24]	; (8003c90 <test_communication+0x41c>)
 8003c76:	4904      	ldr	r1, [pc, #16]	; (8003c88 <test_communication+0x414>)
 8003c78:	2001      	movs	r0, #1
 8003c7a:	4798      	blx	r3
 8003c7c:	e7e8      	b.n	8003c50 <test_communication+0x3dc>
 8003c7e:	bf00      	nop
 8003c80:	0800aa34 	.word	0x0800aa34
 8003c84:	0800aa58 	.word	0x0800aa58
 8003c88:	0800a254 	.word	0x0800a254
 8003c8c:	0800aa88 	.word	0x0800aa88
 8003c90:	0800aaa0 	.word	0x0800aaa0

08003c94 <acc_calibration_a121_calibrate>:
 8003c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c98:	ed2d 8b02 	vpush	{d8}
 8003c9c:	f2ad 7d14 	subw	sp, sp, #1812	; 0x714
 8003ca0:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8003ca4:	9302      	str	r3, [sp, #8]
 8003ca6:	781b      	ldrb	r3, [r3, #0]
 8003ca8:	4604      	mov	r4, r0
 8003caa:	2b0a      	cmp	r3, #10
 8003cac:	d84c      	bhi.n	8003d48 <acc_calibration_a121_calibrate+0xb4>
 8003cae:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003cb2:	000b      	.short	0x000b
 8003cb4:	00ed005c 	.word	0x00ed005c
 8003cb8:	02180169 	.word	0x02180169
 8003cbc:	042102fb 	.word	0x042102fb
 8003cc0:	063a05c7 	.word	0x063a05c7
 8003cc4:	000b06c2 	.word	0x000b06c2
 8003cc8:	4e9b      	ldr	r6, [pc, #620]	; (8003f38 <acc_calibration_a121_calibrate+0x2a4>)
 8003cca:	f8dd 0740 	ldr.w	r0, [sp, #1856]	; 0x740
 8003cce:	228c      	movs	r2, #140	; 0x8c
 8003cd0:	2100      	movs	r1, #0
 8003cd2:	f002 fe4f 	bl	8006974 <memset>
 8003cd6:	edd6 7a13 	vldr	s15, [r6, #76]	; 0x4c
 8003cda:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003cde:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003ce2:	f103 0180 	add.w	r1, r3, #128	; 0x80
 8003ce6:	a844      	add	r0, sp, #272	; 0x110
 8003ce8:	edcd 7a44 	vstr	s15, [sp, #272]	; 0x110
 8003cec:	f7fc ff6a 	bl	8000bc4 <acc_cpd_pll_divisors_calculate>
 8003cf0:	4605      	mov	r5, r0
 8003cf2:	4892      	ldr	r0, [pc, #584]	; (8003f3c <acc_calibration_a121_calibrate+0x2a8>)
 8003cf4:	f7fc fe80 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8003cf8:	4891      	ldr	r0, [pc, #580]	; (8003f40 <acc_calibration_a121_calibrate+0x2ac>)
 8003cfa:	4621      	mov	r1, r4
 8003cfc:	f7fc fe74 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003d00:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003d04:	488f      	ldr	r0, [pc, #572]	; (8003f44 <acc_calibration_a121_calibrate+0x2b0>)
 8003d06:	f8b3 1082 	ldrh.w	r1, [r3, #130]	; 0x82
 8003d0a:	f7fc fe6d 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003d0e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003d12:	488d      	ldr	r0, [pc, #564]	; (8003f48 <acc_calibration_a121_calibrate+0x2b4>)
 8003d14:	f8b3 1084 	ldrh.w	r1, [r3, #132]	; 0x84
 8003d18:	f7fc fe66 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003d1c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003d20:	488a      	ldr	r0, [pc, #552]	; (8003f4c <acc_calibration_a121_calibrate+0x2b8>)
 8003d22:	f8b3 1086 	ldrh.w	r1, [r3, #134]	; 0x86
 8003d26:	f7fc fe5f 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003d2a:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003d2e:	4888      	ldr	r0, [pc, #544]	; (8003f50 <acc_calibration_a121_calibrate+0x2bc>)
 8003d30:	f8b3 1080 	ldrh.w	r1, [r3, #128]	; 0x80
 8003d34:	f7fc fe58 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003d38:	4886      	ldr	r0, [pc, #536]	; (8003f54 <acc_calibration_a121_calibrate+0x2c0>)
 8003d3a:	f7fc fe5d 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8003d3e:	2d00      	cmp	r5, #0
 8003d40:	f041 8038 	bne.w	8004db4 <acc_calibration_a121_calibrate+0x1120>
 8003d44:	9b02      	ldr	r3, [sp, #8]
 8003d46:	781b      	ldrb	r3, [r3, #0]
 8003d48:	497b      	ldr	r1, [pc, #492]	; (8003f38 <acc_calibration_a121_calibrate+0x2a4>)
 8003d4a:	4a83      	ldr	r2, [pc, #524]	; (8003f58 <acc_calibration_a121_calibrate+0x2c4>)
 8003d4c:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8003d4e:	4983      	ldr	r1, [pc, #524]	; (8003f5c <acc_calibration_a121_calibrate+0x2c8>)
 8003d50:	2000      	movs	r0, #0
 8003d52:	47a0      	blx	r4
 8003d54:	2300      	movs	r3, #0
 8003d56:	461c      	mov	r4, r3
 8003d58:	9a02      	ldr	r2, [sp, #8]
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	7013      	strb	r3, [r2, #0]
 8003d5e:	f20d 7d14 	addw	sp, sp, #1812	; 0x714
 8003d62:	ecbd 8b02 	vpop	{d8}
 8003d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d6a:	f7ff f977 	bl	800305c <acc_a121_cal_session_ack_program>
 8003d6e:	2800      	cmp	r0, #0
 8003d70:	d0e8      	beq.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003d72:	ab44      	add	r3, sp, #272	; 0x110
 8003d74:	461a      	mov	r2, r3
 8003d76:	2132      	movs	r1, #50	; 0x32
 8003d78:	4620      	mov	r0, r4
 8003d7a:	461f      	mov	r7, r3
 8003d7c:	9304      	str	r3, [sp, #16]
 8003d7e:	f7fd fadf 	bl	8001340 <acc_sensor_reg_read>
 8003d82:	2212      	movs	r2, #18
 8003d84:	9903      	ldr	r1, [sp, #12]
 8003d86:	4620      	mov	r0, r4
 8003d88:	f7ff fb60 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8003d8c:	8846      	ldrh	r6, [r0, #2]
 8003d8e:	4605      	mov	r5, r0
 8003d90:	4621      	mov	r1, r4
 8003d92:	486b      	ldr	r0, [pc, #428]	; (8003f40 <acc_calibration_a121_calibrate+0x2ac>)
 8003d94:	f8b5 8000 	ldrh.w	r8, [r5]
 8003d98:	f7fc fe26 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003d9c:	4631      	mov	r1, r6
 8003d9e:	4870      	ldr	r0, [pc, #448]	; (8003f60 <acc_calibration_a121_calibrate+0x2cc>)
 8003da0:	f7fc fe22 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003da4:	3504      	adds	r5, #4
 8003da6:	486f      	ldr	r0, [pc, #444]	; (8003f64 <acc_calibration_a121_calibrate+0x2d0>)
 8003da8:	f7fc fdc6 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8003dac:	4628      	mov	r0, r5
 8003dae:	2110      	movs	r1, #16
 8003db0:	f7fc fe12 	bl	80009d8 <acc_diagnostic_log_data_u16>
 8003db4:	2300      	movs	r3, #0
 8003db6:	8838      	ldrh	r0, [r7, #0]
 8003db8:	f64f 7cff 	movw	ip, #65535	; 0xffff
 8003dbc:	461f      	mov	r7, r3
 8003dbe:	fa40 f203 	asr.w	r2, r0, r3
 8003dc2:	07d2      	lsls	r2, r2, #31
 8003dc4:	b299      	uxth	r1, r3
 8003dc6:	d50a      	bpl.n	8003dde <acc_calibration_a121_calibrate+0x14a>
 8003dc8:	f835 2013 	ldrh.w	r2, [r5, r3, lsl #1]
 8003dcc:	1b92      	subs	r2, r2, r6
 8003dce:	2a00      	cmp	r2, #0
 8003dd0:	bfb8      	it	lt
 8003dd2:	4252      	neglt	r2, r2
 8003dd4:	b292      	uxth	r2, r2
 8003dd6:	4562      	cmp	r2, ip
 8003dd8:	bf3c      	itt	cc
 8003dda:	4694      	movcc	ip, r2
 8003ddc:	460f      	movcc	r7, r1
 8003dde:	3301      	adds	r3, #1
 8003de0:	2b10      	cmp	r3, #16
 8003de2:	d1ec      	bne.n	8003dbe <acc_calibration_a121_calibrate+0x12a>
 8003de4:	1e7b      	subs	r3, r7, #1
 8003de6:	2b0d      	cmp	r3, #13
 8003de8:	d8ac      	bhi.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003dea:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8003dee:	3b01      	subs	r3, #1
 8003df0:	eb05 0643 	add.w	r6, r5, r3, lsl #1
 8003df4:	f835 3013 	ldrh.w	r3, [r5, r3, lsl #1]
 8003df8:	8872      	ldrh	r2, [r6, #2]
 8003dfa:	f241 3187 	movw	r1, #4999	; 0x1387
 8003dfe:	1a9b      	subs	r3, r3, r2
 8003e00:	428b      	cmp	r3, r1
 8003e02:	dd9f      	ble.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003e04:	88b3      	ldrh	r3, [r6, #4]
 8003e06:	1ad2      	subs	r2, r2, r3
 8003e08:	428a      	cmp	r2, r1
 8003e0a:	dd9b      	ble.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003e0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e10:	4298      	cmp	r0, r3
 8003e12:	d097      	beq.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003e14:	f240 13e5 	movw	r3, #485	; 0x1e5
 8003e18:	fb03 f308 	mul.w	r3, r3, r8
 8003e1c:	0c1b      	lsrs	r3, r3, #16
 8003e1e:	f5a3 7389 	sub.w	r3, r3, #274	; 0x112
 8003e22:	b21a      	sxth	r2, r3
 8003e24:	3314      	adds	r3, #20
 8003e26:	f2c1 810f 	blt.w	8005048 <acc_calibration_a121_calibrate+0x13b4>
 8003e2a:	2a2c      	cmp	r2, #44	; 0x2c
 8003e2c:	f341 8114 	ble.w	8005058 <acc_calibration_a121_calibrate+0x13c4>
 8003e30:	2a4f      	cmp	r2, #79	; 0x4f
 8003e32:	f341 8115 	ble.w	8005060 <acc_calibration_a121_calibrate+0x13cc>
 8003e36:	2504      	movs	r5, #4
 8003e38:	462e      	mov	r6, r5
 8003e3a:	484b      	ldr	r0, [pc, #300]	; (8003f68 <acc_calibration_a121_calibrate+0x2d4>)
 8003e3c:	4641      	mov	r1, r8
 8003e3e:	f7fc fdd3 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003e42:	9b04      	ldr	r3, [sp, #16]
 8003e44:	4849      	ldr	r0, [pc, #292]	; (8003f6c <acc_calibration_a121_calibrate+0x2d8>)
 8003e46:	8819      	ldrh	r1, [r3, #0]
 8003e48:	f7fc fdce 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003e4c:	4848      	ldr	r0, [pc, #288]	; (8003f70 <acc_calibration_a121_calibrate+0x2dc>)
 8003e4e:	4639      	mov	r1, r7
 8003e50:	f7fc fdca 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003e54:	4847      	ldr	r0, [pc, #284]	; (8003f74 <acc_calibration_a121_calibrate+0x2e0>)
 8003e56:	4629      	mov	r1, r5
 8003e58:	f7fc fdc6 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003e5c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003e60:	4a45      	ldr	r2, [pc, #276]	; (8003f78 <acc_calibration_a121_calibrate+0x2e4>)
 8003e62:	f8a3 8000 	strh.w	r8, [r3]
 8003e66:	805f      	strh	r7, [r3, #2]
 8003e68:	849e      	strh	r6, [r3, #36]	; 0x24
 8003e6a:	4944      	ldr	r1, [pc, #272]	; (8003f7c <acc_calibration_a121_calibrate+0x2e8>)
 8003e6c:	9700      	str	r7, [sp, #0]
 8003e6e:	2325      	movs	r3, #37	; 0x25
 8003e70:	4620      	mov	r0, r4
 8003e72:	f7ff fc77 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8003e76:	4620      	mov	r0, r4
 8003e78:	f240 2132 	movw	r1, #562	; 0x232
 8003e7c:	f7fd fa76 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8003e80:	4604      	mov	r4, r0
 8003e82:	2302      	movs	r3, #2
 8003e84:	2c00      	cmp	r4, #0
 8003e86:	f47f af67 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8003e8a:	e75b      	b.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003e8c:	f7ff f8e6 	bl	800305c <acc_a121_cal_session_ack_program>
 8003e90:	4681      	mov	r9, r0
 8003e92:	2800      	cmp	r0, #0
 8003e94:	f43f af56 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003e98:	9903      	ldr	r1, [sp, #12]
 8003e9a:	2241      	movs	r2, #65	; 0x41
 8003e9c:	4620      	mov	r0, r4
 8003e9e:	f7ff fad5 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8003ea2:	4605      	mov	r5, r0
 8003ea4:	4836      	ldr	r0, [pc, #216]	; (8003f80 <acc_calibration_a121_calibrate+0x2ec>)
 8003ea6:	8c2b      	ldrh	r3, [r5, #32]
 8003ea8:	9306      	str	r3, [sp, #24]
 8003eaa:	f7fc fd45 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8003eae:	2110      	movs	r1, #16
 8003eb0:	4628      	mov	r0, r5
 8003eb2:	f7fc fd89 	bl	80009c8 <acc_diagnostic_log_data_i16>
 8003eb6:	2100      	movs	r1, #0
 8003eb8:	f105 0322 	add.w	r3, r5, #34	; 0x22
 8003ebc:	9307      	str	r3, [sp, #28]
 8003ebe:	f1a5 0a02 	sub.w	sl, r5, #2
 8003ec2:	468b      	mov	fp, r1
 8003ec4:	4688      	mov	r8, r1
 8003ec6:	f64f 7cff 	movw	ip, #65535	; 0xffff
 8003eca:	e01e      	b.n	8003f0a <acc_calibration_a121_calibrate+0x276>
 8003ecc:	f935 6011 	ldrsh.w	r6, [r5, r1, lsl #1]
 8003ed0:	f93a e011 	ldrsh.w	lr, [sl, r1, lsl #1]
 8003ed4:	f506 727a 	add.w	r2, r6, #1000	; 0x3e8
 8003ed8:	eba6 060e 	sub.w	r6, r6, lr
 8003edc:	429e      	cmp	r6, r3
 8003ede:	f6ff af31 	blt.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003ee2:	42be      	cmp	r6, r7
 8003ee4:	f73f af2e 	bgt.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003ee8:	ea82 73e2 	eor.w	r3, r2, r2, asr #31
 8003eec:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
 8003ef0:	b29b      	uxth	r3, r3
 8003ef2:	4563      	cmp	r3, ip
 8003ef4:	d205      	bcs.n	8003f02 <acc_calibration_a121_calibrate+0x26e>
 8003ef6:	ea4f 0b80 	mov.w	fp, r0, lsl #2
 8003efa:	469c      	mov	ip, r3
 8003efc:	fa1f fb8b 	uxth.w	fp, fp
 8003f00:	46c8      	mov	r8, r9
 8003f02:	280f      	cmp	r0, #15
 8003f04:	f000 87d7 	beq.w	8004eb6 <acc_calibration_a121_calibrate+0x1222>
 8003f08:	3101      	adds	r1, #1
 8003f0a:	1e4b      	subs	r3, r1, #1
 8003f0c:	fb03 f303 	mul.w	r3, r3, r3
 8003f10:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8003f14:	005a      	lsls	r2, r3, #1
 8003f16:	f502 7716 	add.w	r7, r2, #600	; 0x258
 8003f1a:	3bc8      	subs	r3, #200	; 0xc8
 8003f1c:	b288      	uxth	r0, r1
 8003f1e:	2900      	cmp	r1, #0
 8003f20:	d1d4      	bne.n	8003ecc <acc_calibration_a121_calibrate+0x238>
 8003f22:	f9b5 3000 	ldrsh.w	r3, [r5]
 8003f26:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	bfb8      	it	lt
 8003f2e:	425b      	neglt	r3, r3
 8003f30:	b29b      	uxth	r3, r3
 8003f32:	4563      	cmp	r3, ip
 8003f34:	d3df      	bcc.n	8003ef6 <acc_calibration_a121_calibrate+0x262>
 8003f36:	e7e7      	b.n	8003f08 <acc_calibration_a121_calibrate+0x274>
 8003f38:	200000ac 	.word	0x200000ac
 8003f3c:	0800a05c 	.word	0x0800a05c
 8003f40:	0800aaf8 	.word	0x0800aaf8
 8003f44:	0800ab04 	.word	0x0800ab04
 8003f48:	0800ab14 	.word	0x0800ab14
 8003f4c:	0800ab20 	.word	0x0800ab20
 8003f50:	0800ab2c 	.word	0x0800ab2c
 8003f54:	0800ab3c 	.word	0x0800ab3c
 8003f58:	0800aee0 	.word	0x0800aee0
 8003f5c:	0800af04 	.word	0x0800af04
 8003f60:	0800ab4c 	.word	0x0800ab4c
 8003f64:	0800ab58 	.word	0x0800ab58
 8003f68:	0800ab74 	.word	0x0800ab74
 8003f6c:	0800ab80 	.word	0x0800ab80
 8003f70:	0800ab88 	.word	0x0800ab88
 8003f74:	0800ab94 	.word	0x0800ab94
 8003f78:	08008440 	.word	0x08008440
 8003f7c:	08008844 	.word	0x08008844
 8003f80:	0800aba0 	.word	0x0800aba0
 8003f84:	f7ff f86a 	bl	800305c <acc_a121_cal_session_ack_program>
 8003f88:	2800      	cmp	r0, #0
 8003f8a:	f43f aedb 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003f8e:	2220      	movs	r2, #32
 8003f90:	9903      	ldr	r1, [sp, #12]
 8003f92:	4620      	mov	r0, r4
 8003f94:	f7ff fa5a 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8003f98:	4621      	mov	r1, r4
 8003f9a:	4605      	mov	r5, r0
 8003f9c:	48b7      	ldr	r0, [pc, #732]	; (800427c <acc_calibration_a121_calibrate+0x5e8>)
 8003f9e:	f7fc fd23 	bl	80009e8 <acc_diagnostic_log_scalar>
 8003fa2:	48b7      	ldr	r0, [pc, #732]	; (8004280 <acc_calibration_a121_calibrate+0x5ec>)
 8003fa4:	f7fc fcc8 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8003fa8:	4628      	mov	r0, r5
 8003faa:	2120      	movs	r1, #32
 8003fac:	f7fc fd0c 	bl	80009c8 <acc_diagnostic_log_data_i16>
 8003fb0:	f9b5 2000 	ldrsh.w	r2, [r5]
 8003fb4:	4628      	mov	r0, r5
 8003fb6:	4616      	mov	r6, r2
 8003fb8:	2101      	movs	r1, #1
 8003fba:	2700      	movs	r7, #0
 8003fbc:	4613      	mov	r3, r2
 8003fbe:	f930 2f02 	ldrsh.w	r2, [r0, #2]!
 8003fc2:	f5c3 7348 	rsb	r3, r3, #800	; 0x320
 8003fc6:	4413      	add	r3, r2
 8003fc8:	b29b      	uxth	r3, r3
 8003fca:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 8003fce:	f63f aeb9 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8003fd2:	42b2      	cmp	r2, r6
 8003fd4:	bfa8      	it	ge
 8003fd6:	460f      	movge	r7, r1
 8003fd8:	f101 0101 	add.w	r1, r1, #1
 8003fdc:	bfa8      	it	ge
 8003fde:	4616      	movge	r6, r2
 8003fe0:	2920      	cmp	r1, #32
 8003fe2:	d1eb      	bne.n	8003fbc <acc_calibration_a121_calibrate+0x328>
 8003fe4:	2f07      	cmp	r7, #7
 8003fe6:	f201 8015 	bhi.w	8005014 <acc_calibration_a121_calibrate+0x1380>
 8003fea:	2300      	movs	r3, #0
 8003fec:	f107 0208 	add.w	r2, r7, #8
 8003ff0:	1ad2      	subs	r2, r2, r3
 8003ff2:	2a00      	cmp	r2, #0
 8003ff4:	f001 802c 	beq.w	8005050 <acc_calibration_a121_calibrate+0x13bc>
 8003ff8:	a944      	add	r1, sp, #272	; 0x110
 8003ffa:	18d0      	adds	r0, r2, r3
 8003ffc:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8004000:	9104      	str	r1, [sp, #16]
 8004002:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8004006:	f935 6b02 	ldrsh.w	r6, [r5], #2
 800400a:	ee07 6a10 	vmov	s14, r6
 800400e:	fb03 f603 	mul.w	r6, r3, r3
 8004012:	ee06 3a90 	vmov	s13, r3
 8004016:	ee07 6a90 	vmov	s15, r6
 800401a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800401e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004022:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8004026:	42a8      	cmp	r0, r5
 8004028:	ed81 7a00 	vstr	s14, [r1]
 800402c:	edc1 7a01 	vstr	s15, [r1, #4]
 8004030:	edc1 6a02 	vstr	s13, [r1, #8]
 8004034:	f103 0301 	add.w	r3, r3, #1
 8004038:	f101 010c 	add.w	r1, r1, #12
 800403c:	d1e3      	bne.n	8004006 <acc_calibration_a121_calibrate+0x372>
 800403e:	9804      	ldr	r0, [sp, #16]
 8004040:	a92c      	add	r1, sp, #176	; 0xb0
 8004042:	f7fc ff49 	bl	8000ed8 <acc_alg_least_square_fit>
 8004046:	2800      	cmp	r0, #0
 8004048:	f43f ae7c 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800404c:	ed9d 6a2c 	vldr	s12, [sp, #176]	; 0xb0
 8004050:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8004054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004058:	f43f ae74 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800405c:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8004060:	eef5 6a40 	vcmp.f32	s13, #0.0
 8004064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004068:	f43f ae6c 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800406c:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8004070:	eeb1 7a47 	vneg.f32	s14, s14
 8004074:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004078:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800407c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004080:	f6ff ae60 	blt.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004084:	eef1 6a66 	vneg.f32	s13, s13
 8004088:	ee86 7a86 	vdiv.f32	s14, s13, s12
 800408c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004094:	f57f ae56 	bpl.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004098:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800409c:	ee77 7a87 	vadd.f32	s15, s15, s14
 80040a0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80040a4:	ee17 5a90 	vmov	r5, s15
 80040a8:	b2ab      	uxth	r3, r5
 80040aa:	2b3f      	cmp	r3, #63	; 0x3f
 80040ac:	f3c5 054e 	ubfx	r5, r5, #1, #15
 80040b0:	f63f ae48 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80040b4:	f085 0510 	eor.w	r5, r5, #16
 80040b8:	4629      	mov	r1, r5
 80040ba:	4872      	ldr	r0, [pc, #456]	; (8004284 <acc_calibration_a121_calibrate+0x5f0>)
 80040bc:	f7fc fc94 	bl	80009e8 <acc_diagnostic_log_scalar>
 80040c0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80040c4:	4870      	ldr	r0, [pc, #448]	; (8004288 <acc_calibration_a121_calibrate+0x5f4>)
 80040c6:	80dd      	strh	r5, [r3, #6]
 80040c8:	f7fc fc96 	bl	80009f8 <acc_diagnostic_log_set_scope>
 80040cc:	4620      	mov	r0, r4
 80040ce:	f44f 7145 	mov.w	r1, #788	; 0x314
 80040d2:	f7fd f94b 	bl	800136c <acc_sensor_protocol_a121_run_program>
 80040d6:	4604      	mov	r4, r0
 80040d8:	2304      	movs	r3, #4
 80040da:	2c00      	cmp	r4, #0
 80040dc:	f47f ae3c 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 80040e0:	e630      	b.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80040e2:	f7fe ffbb 	bl	800305c <acc_a121_cal_session_ack_program>
 80040e6:	2800      	cmp	r0, #0
 80040e8:	f43f ae2c 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80040ec:	2250      	movs	r2, #80	; 0x50
 80040ee:	9903      	ldr	r1, [sp, #12]
 80040f0:	4620      	mov	r0, r4
 80040f2:	f7ff f9ab 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 80040f6:	4621      	mov	r1, r4
 80040f8:	4680      	mov	r8, r0
 80040fa:	4860      	ldr	r0, [pc, #384]	; (800427c <acc_calibration_a121_calibrate+0x5e8>)
 80040fc:	f7fc fc74 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004100:	4862      	ldr	r0, [pc, #392]	; (800428c <acc_calibration_a121_calibrate+0x5f8>)
 8004102:	f7fc fc19 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8004106:	4640      	mov	r0, r8
 8004108:	2150      	movs	r1, #80	; 0x50
 800410a:	f7fc fc5d 	bl	80009c8 <acc_diagnostic_log_data_i16>
 800410e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004112:	ee08 4a10 	vmov	s16, r4
 8004116:	330a      	adds	r3, #10
 8004118:	f04f 0b30 	mov.w	fp, #48	; 0x30
 800411c:	461f      	mov	r7, r3
 800411e:	f8df 9184 	ldr.w	r9, [pc, #388]	; 80042a4 <acc_calibration_a121_calibrate+0x610>
 8004122:	f9b8 2000 	ldrsh.w	r2, [r8]
 8004126:	f04f 0e00 	mov.w	lr, #0
 800412a:	f647 7cff 	movw	ip, #32767	; 0x7fff
 800412e:	46f2      	mov	sl, lr
 8004130:	4666      	mov	r6, ip
 8004132:	4645      	mov	r5, r8
 8004134:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8004138:	f06f 031b 	mvn.w	r3, #27
 800413c:	4648      	mov	r0, r9
 800413e:	e015      	b.n	800416c <acc_calibration_a121_calibrate+0x4d8>
 8004140:	4562      	cmp	r2, ip
 8004142:	bfbc      	itt	lt
 8004144:	469e      	movlt	lr, r3
 8004146:	4694      	movlt	ip, r2
 8004148:	2924      	cmp	r1, #36	; 0x24
 800414a:	d017      	beq.n	800417c <acc_calibration_a121_calibrate+0x4e8>
 800414c:	f935 2f02 	ldrsh.w	r2, [r5, #2]!
 8004150:	f835 3c02 	ldrh.w	r3, [r5, #-2]
 8004154:	1ad3      	subs	r3, r2, r3
 8004156:	b21b      	sxth	r3, r3
 8004158:	429e      	cmp	r6, r3
 800415a:	bfa8      	it	ge
 800415c:	461e      	movge	r6, r3
 800415e:	f101 0408 	add.w	r4, r1, #8
 8004162:	4298      	cmp	r0, r3
 8004164:	bfb8      	it	lt
 8004166:	4618      	movlt	r0, r3
 8004168:	b20b      	sxth	r3, r1
 800416a:	b2a1      	uxth	r1, r4
 800416c:	2a00      	cmp	r2, #0
 800416e:	dae7      	bge.n	8004140 <acc_calibration_a121_calibrate+0x4ac>
 8004170:	454a      	cmp	r2, r9
 8004172:	dde9      	ble.n	8004148 <acc_calibration_a121_calibrate+0x4b4>
 8004174:	2924      	cmp	r1, #36	; 0x24
 8004176:	469a      	mov	sl, r3
 8004178:	4691      	mov	r9, r2
 800417a:	d1e7      	bne.n	800414c <acc_calibration_a121_calibrate+0x4b8>
 800417c:	f5a0 501c 	sub.w	r0, r0, #9984	; 0x2700
 8004180:	3810      	subs	r0, #16
 8004182:	b280      	uxth	r0, r0
 8004184:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004188:	4298      	cmp	r0, r3
 800418a:	f63f addb 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800418e:	2e00      	cmp	r6, #0
 8004190:	f47f add8 	bne.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004194:	f519 4f00 	cmn.w	r9, #32768	; 0x8000
 8004198:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800419c:	f000 86e8 	beq.w	8004f70 <acc_calibration_a121_calibrate+0x12dc>
 80041a0:	459c      	cmp	ip, r3
 80041a2:	f000 8727 	beq.w	8004ff4 <acc_calibration_a121_calibrate+0x1360>
 80041a6:	ebae 0e0a 	sub.w	lr, lr, sl
 80041aa:	f1be 0f08 	cmp.w	lr, #8
 80041ae:	f47f adc9 	bne.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80041b2:	ea4f 0ec9 	mov.w	lr, r9, lsl #3
 80041b6:	ebac 0c09 	sub.w	ip, ip, r9
 80041ba:	fb9e fcfc 	sdiv	ip, lr, ip
 80041be:	ebaa 0e0c 	sub.w	lr, sl, ip
 80041c2:	fa0f fe8e 	sxth.w	lr, lr
 80041c6:	f1be 0f00 	cmp.w	lr, #0
 80041ca:	f2c0 85b1 	blt.w	8004d30 <acc_calibration_a121_calibrate+0x109c>
 80041ce:	f1be 0f1f 	cmp.w	lr, #31
 80041d2:	f73f adb7 	bgt.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80041d6:	fa1f f58e 	uxth.w	r5, lr
 80041da:	482d      	ldr	r0, [pc, #180]	; (8004290 <acc_calibration_a121_calibrate+0x5fc>)
 80041dc:	f880 b00d 	strb.w	fp, [r0, #13]
 80041e0:	f10b 0b01 	add.w	fp, fp, #1
 80041e4:	4629      	mov	r1, r5
 80041e6:	fa5f fb8b 	uxtb.w	fp, fp
 80041ea:	f7fc fbfd 	bl	80009e8 <acc_diagnostic_log_scalar>
 80041ee:	f1bb 0f3a 	cmp.w	fp, #58	; 0x3a
 80041f2:	f827 5f02 	strh.w	r5, [r7, #2]!
 80041f6:	f108 0810 	add.w	r8, r8, #16
 80041fa:	d190      	bne.n	800411e <acc_calibration_a121_calibrate+0x48a>
 80041fc:	4825      	ldr	r0, [pc, #148]	; (8004294 <acc_calibration_a121_calibrate+0x600>)
 80041fe:	f7fc fbfb 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004202:	2360      	movs	r3, #96	; 0x60
 8004204:	e9dd 1203 	ldrd	r1, r2, [sp, #12]
 8004208:	ee18 0a10 	vmov	r0, s16
 800420c:	9300      	str	r3, [sp, #0]
 800420e:	4b22      	ldr	r3, [pc, #136]	; (8004298 <acc_calibration_a121_calibrate+0x604>)
 8004210:	f7fe ff94 	bl	800313c <acc_sensor_a121_lut_buffer_write.constprop.0>
 8004214:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004218:	4a20      	ldr	r2, [pc, #128]	; (800429c <acc_calibration_a121_calibrate+0x608>)
 800421a:	899b      	ldrh	r3, [r3, #12]
 800421c:	9300      	str	r3, [sp, #0]
 800421e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004222:	491f      	ldr	r1, [pc, #124]	; (80042a0 <acc_calibration_a121_calibrate+0x60c>)
 8004224:	88dd      	ldrh	r5, [r3, #6]
 8004226:	ee18 0a10 	vmov	r0, s16
 800422a:	2307      	movs	r3, #7
 800422c:	f7ff fa9a 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004230:	4a1a      	ldr	r2, [pc, #104]	; (800429c <acc_calibration_a121_calibrate+0x608>)
 8004232:	491b      	ldr	r1, [pc, #108]	; (80042a0 <acc_calibration_a121_calibrate+0x60c>)
 8004234:	9500      	str	r5, [sp, #0]
 8004236:	2308      	movs	r3, #8
 8004238:	ee18 0a10 	vmov	r0, s16
 800423c:	f7ff fa92 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004240:	2303      	movs	r3, #3
 8004242:	4a16      	ldr	r2, [pc, #88]	; (800429c <acc_calibration_a121_calibrate+0x608>)
 8004244:	4916      	ldr	r1, [pc, #88]	; (80042a0 <acc_calibration_a121_calibrate+0x60c>)
 8004246:	9300      	str	r3, [sp, #0]
 8004248:	ee18 0a10 	vmov	r0, s16
 800424c:	2309      	movs	r3, #9
 800424e:	f7ff fa89 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004252:	2306      	movs	r3, #6
 8004254:	4a11      	ldr	r2, [pc, #68]	; (800429c <acc_calibration_a121_calibrate+0x608>)
 8004256:	4912      	ldr	r1, [pc, #72]	; (80042a0 <acc_calibration_a121_calibrate+0x60c>)
 8004258:	9300      	str	r3, [sp, #0]
 800425a:	ee18 0a10 	vmov	r0, s16
 800425e:	230a      	movs	r3, #10
 8004260:	f7ff fa80 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004264:	ee18 0a10 	vmov	r0, s16
 8004268:	f240 31d5 	movw	r1, #981	; 0x3d5
 800426c:	f7fd f87e 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8004270:	4604      	mov	r4, r0
 8004272:	2305      	movs	r3, #5
 8004274:	2c00      	cmp	r4, #0
 8004276:	f47f ad6f 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 800427a:	e563      	b.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800427c:	0800aaf8 	.word	0x0800aaf8
 8004280:	0800ac28 	.word	0x0800ac28
 8004284:	0800ac4c 	.word	0x0800ac4c
 8004288:	0800ac58 	.word	0x0800ac58
 800428c:	0800ac6c 	.word	0x0800ac6c
 8004290:	20000008 	.word	0x20000008
 8004294:	0800ac84 	.word	0x0800ac84
 8004298:	08008580 	.word	0x08008580
 800429c:	08008440 	.word	0x08008440
 80042a0:	08008844 	.word	0x08008844
 80042a4:	ffff8000 	.word	0xffff8000
 80042a8:	f7fe fed8 	bl	800305c <acc_a121_cal_session_ack_program>
 80042ac:	2800      	cmp	r0, #0
 80042ae:	f43f ad49 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80042b2:	9903      	ldr	r1, [sp, #12]
 80042b4:	f8df 9234 	ldr.w	r9, [pc, #564]	; 80044ec <acc_calibration_a121_calibrate+0x858>
 80042b8:	f8df 8234 	ldr.w	r8, [pc, #564]	; 80044f0 <acc_calibration_a121_calibrate+0x85c>
 80042bc:	f44f 7240 	mov.w	r2, #768	; 0x300
 80042c0:	4620      	mov	r0, r4
 80042c2:	f7ff f8c3 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 80042c6:	4682      	mov	sl, r0
 80042c8:	4882      	ldr	r0, [pc, #520]	; (80044d4 <acc_calibration_a121_calibrate+0x840>)
 80042ca:	f7fc fb35 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 80042ce:	f44f 7140 	mov.w	r1, #768	; 0x300
 80042d2:	4650      	mov	r0, sl
 80042d4:	f7fc fb78 	bl	80009c8 <acc_diagnostic_log_data_i16>
 80042d8:	ab0b      	add	r3, sp, #44	; 0x2c
 80042da:	f50a 61c0 	add.w	r1, sl, #1536	; 0x600
 80042de:	e9cd 3105 	strd	r3, r1, [sp, #20]
 80042e2:	9307      	str	r3, [sp, #28]
 80042e4:	2300      	movs	r3, #0
 80042e6:	9303      	str	r3, [sp, #12]
 80042e8:	ee07 4a90 	vmov	s15, r4
 80042ec:	ab44      	add	r3, sp, #272	; 0x110
 80042ee:	9304      	str	r3, [sp, #16]
 80042f0:	ae2c      	add	r6, sp, #176	; 0xb0
 80042f2:	af43      	add	r7, sp, #268	; 0x10c
 80042f4:	ac14      	add	r4, sp, #80	; 0x50
 80042f6:	4655      	mov	r5, sl
 80042f8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80042fc:	f935 0b04 	ldrsh.w	r0, [r5], #4
 8004300:	f7fc feac 	bl	800105c <acc_alg_atan2_q16>
 8004304:	f844 0b04 	str.w	r0, [r4], #4
 8004308:	42a6      	cmp	r6, r4
 800430a:	d1f5      	bne.n	80042f8 <acc_calibration_a121_calibrate+0x664>
 800430c:	ac2b      	add	r4, sp, #172	; 0xac
 800430e:	46a3      	mov	fp, r4
 8004310:	4655      	mov	r5, sl
 8004312:	f9b5 1062 	ldrsh.w	r1, [r5, #98]	; 0x62
 8004316:	f9b5 0060 	ldrsh.w	r0, [r5, #96]	; 0x60
 800431a:	f7fc fe9f 	bl	800105c <acc_alg_atan2_q16>
 800431e:	f84b 0f04 	str.w	r0, [fp, #4]!
 8004322:	455f      	cmp	r7, fp
 8004324:	f105 0504 	add.w	r5, r5, #4
 8004328:	d1f3      	bne.n	8004312 <acc_calibration_a121_calibrate+0x67e>
 800432a:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800432e:	ad13      	add	r5, sp, #76	; 0x4c
 8004330:	1898      	adds	r0, r3, r2
 8004332:	2100      	movs	r1, #0
 8004334:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8004338:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800433c:	1a9b      	subs	r3, r3, r2
 800433e:	454b      	cmp	r3, r9
 8004340:	f340 847c 	ble.w	8004c3c <acc_calibration_a121_calibrate+0xfa8>
 8004344:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 8004348:	3b7e      	subs	r3, #126	; 0x7e
 800434a:	454b      	cmp	r3, r9
 800434c:	dcfa      	bgt.n	8004344 <acc_calibration_a121_calibrate+0x6b0>
 800434e:	2b00      	cmp	r3, #0
 8004350:	bfb8      	it	lt
 8004352:	425b      	neglt	r3, r3
 8004354:	4299      	cmp	r1, r3
 8004356:	bfb8      	it	lt
 8004358:	4619      	movlt	r1, r3
 800435a:	42a7      	cmp	r7, r4
 800435c:	f840 3b04 	str.w	r3, [r0], #4
 8004360:	d1e8      	bne.n	8004334 <acc_calibration_a121_calibrate+0x6a0>
 8004362:	9b05      	ldr	r3, [sp, #20]
 8004364:	1049      	asrs	r1, r1, #1
 8004366:	f843 1f04 	str.w	r1, [r3, #4]!
 800436a:	9305      	str	r3, [sp, #20]
 800436c:	9b03      	ldr	r3, [sp, #12]
 800436e:	3360      	adds	r3, #96	; 0x60
 8004370:	9303      	str	r3, [sp, #12]
 8004372:	9b06      	ldr	r3, [sp, #24]
 8004374:	f10a 0ac0 	add.w	sl, sl, #192	; 0xc0
 8004378:	4553      	cmp	r3, sl
 800437a:	d1bb      	bne.n	80042f4 <acc_calibration_a121_calibrate+0x660>
 800437c:	2000      	movs	r0, #0
 800437e:	ee17 4a90 	vmov	r4, s15
 8004382:	9d07      	ldr	r5, [sp, #28]
 8004384:	4601      	mov	r1, r0
 8004386:	4603      	mov	r3, r0
 8004388:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800438c:	428a      	cmp	r2, r1
 800438e:	bfc8      	it	gt
 8004390:	4618      	movgt	r0, r3
 8004392:	f103 0301 	add.w	r3, r3, #1
 8004396:	bfc8      	it	gt
 8004398:	4611      	movgt	r1, r2
 800439a:	2b08      	cmp	r3, #8
 800439c:	d1f4      	bne.n	8004388 <acc_calibration_a121_calibrate+0x6f4>
 800439e:	ab0c      	add	r3, sp, #48	; 0x30
 80043a0:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 80043a4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 80043a8:	9b04      	ldr	r3, [sp, #16]
 80043aa:	f10d 02af 	add.w	r2, sp, #175	; 0xaf
 80043ae:	eb03 1141 	add.w	r1, r3, r1, lsl #5
 80043b2:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
 80043b6:	f851 3b04 	ldr.w	r3, [r1], #4
 80043ba:	42ab      	cmp	r3, r5
 80043bc:	bfac      	ite	ge
 80043be:	2300      	movge	r3, #0
 80043c0:	2301      	movlt	r3, #1
 80043c2:	f802 3f01 	strb.w	r3, [r2, #1]!
 80043c6:	4290      	cmp	r0, r2
 80043c8:	7613      	strb	r3, [r2, #24]
 80043ca:	d1f4      	bne.n	80043b6 <acc_calibration_a121_calibrate+0x722>
 80043cc:	2000      	movs	r0, #0
 80043ce:	4605      	mov	r5, r0
 80043d0:	2301      	movs	r3, #1
 80043d2:	2d00      	cmp	r5, #0
 80043d4:	f000 843e 	beq.w	8004c54 <acc_calibration_a121_calibrate+0xfc0>
 80043d8:	5cf2      	ldrb	r2, [r6, r3]
 80043da:	2a00      	cmp	r2, #0
 80043dc:	f000 8432 	beq.w	8004c44 <acc_calibration_a121_calibrate+0xfb0>
 80043e0:	3001      	adds	r0, #1
 80043e2:	3301      	adds	r3, #1
 80043e4:	2b30      	cmp	r3, #48	; 0x30
 80043e6:	d1f4      	bne.n	80043d2 <acc_calibration_a121_calibrate+0x73e>
 80043e8:	f1a0 030c 	sub.w	r3, r0, #12
 80043ec:	2b08      	cmp	r3, #8
 80043ee:	f63f aca9 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80043f2:	eb05 0550 	add.w	r5, r5, r0, lsr #1
 80043f6:	2d17      	cmp	r5, #23
 80043f8:	d902      	bls.n	8004400 <acc_calibration_a121_calibrate+0x76c>
 80043fa:	3d18      	subs	r5, #24
 80043fc:	2d17      	cmp	r5, #23
 80043fe:	d8fc      	bhi.n	80043fa <acc_calibration_a121_calibrate+0x766>
 8004400:	4629      	mov	r1, r5
 8004402:	4835      	ldr	r0, [pc, #212]	; (80044d8 <acc_calibration_a121_calibrate+0x844>)
 8004404:	f7fc faf0 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004408:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800440c:	4833      	ldr	r0, [pc, #204]	; (80044dc <acc_calibration_a121_calibrate+0x848>)
 800440e:	811d      	strh	r5, [r3, #8]
 8004410:	f7fc faf2 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004414:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004418:	891b      	ldrh	r3, [r3, #8]
 800441a:	009b      	lsls	r3, r3, #2
 800441c:	b29b      	uxth	r3, r3
 800441e:	f103 0530 	add.w	r5, r3, #48	; 0x30
 8004422:	b2ad      	uxth	r5, r5
 8004424:	2d5f      	cmp	r5, #95	; 0x5f
 8004426:	f240 85df 	bls.w	8004fe8 <acc_calibration_a121_calibrate+0x1354>
 800442a:	4a2d      	ldr	r2, [pc, #180]	; (80044e0 <acc_calibration_a121_calibrate+0x84c>)
 800442c:	fba2 1205 	umull	r1, r2, r2, r5
 8004430:	0992      	lsrs	r2, r2, #6
 8004432:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8004436:	eba5 1242 	sub.w	r2, r5, r2, lsl #5
 800443a:	b292      	uxth	r2, r2
 800443c:	2700      	movs	r7, #0
 800443e:	461d      	mov	r5, r3
 8004440:	46b8      	mov	r8, r7
 8004442:	4613      	mov	r3, r2
 8004444:	2601      	movs	r6, #1
 8004446:	4a27      	ldr	r2, [pc, #156]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 8004448:	4927      	ldr	r1, [pc, #156]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 800444a:	9300      	str	r3, [sp, #0]
 800444c:	4620      	mov	r0, r4
 800444e:	2321      	movs	r3, #33	; 0x21
 8004450:	f7ff f988 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004454:	4a23      	ldr	r2, [pc, #140]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 8004456:	4924      	ldr	r1, [pc, #144]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 8004458:	9500      	str	r5, [sp, #0]
 800445a:	2322      	movs	r3, #34	; 0x22
 800445c:	4620      	mov	r0, r4
 800445e:	f7ff f981 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004462:	2503      	movs	r5, #3
 8004464:	4a1f      	ldr	r2, [pc, #124]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 8004466:	4920      	ldr	r1, [pc, #128]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 8004468:	9600      	str	r6, [sp, #0]
 800446a:	2301      	movs	r3, #1
 800446c:	4620      	mov	r0, r4
 800446e:	f7ff f979 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004472:	4a1c      	ldr	r2, [pc, #112]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 8004474:	491c      	ldr	r1, [pc, #112]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 8004476:	9500      	str	r5, [sp, #0]
 8004478:	2302      	movs	r3, #2
 800447a:	4620      	mov	r0, r4
 800447c:	f7ff f972 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004480:	4a18      	ldr	r2, [pc, #96]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 8004482:	4919      	ldr	r1, [pc, #100]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 8004484:	f8cd 8000 	str.w	r8, [sp]
 8004488:	462b      	mov	r3, r5
 800448a:	4620      	mov	r0, r4
 800448c:	f7ff f96a 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004490:	4a14      	ldr	r2, [pc, #80]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 8004492:	4915      	ldr	r1, [pc, #84]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 8004494:	9700      	str	r7, [sp, #0]
 8004496:	2304      	movs	r3, #4
 8004498:	4620      	mov	r0, r4
 800449a:	f7ff f963 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 800449e:	4a11      	ldr	r2, [pc, #68]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 80044a0:	4911      	ldr	r1, [pc, #68]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 80044a2:	9600      	str	r6, [sp, #0]
 80044a4:	2305      	movs	r3, #5
 80044a6:	4620      	mov	r0, r4
 80044a8:	f7ff f95c 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 80044ac:	2300      	movs	r3, #0
 80044ae:	4a0d      	ldr	r2, [pc, #52]	; (80044e4 <acc_calibration_a121_calibrate+0x850>)
 80044b0:	490d      	ldr	r1, [pc, #52]	; (80044e8 <acc_calibration_a121_calibrate+0x854>)
 80044b2:	9300      	str	r3, [sp, #0]
 80044b4:	4620      	mov	r0, r4
 80044b6:	2306      	movs	r3, #6
 80044b8:	f7ff f954 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 80044bc:	4620      	mov	r0, r4
 80044be:	f44f 717b 	mov.w	r1, #1004	; 0x3ec
 80044c2:	f7fc ff53 	bl	800136c <acc_sensor_protocol_a121_run_program>
 80044c6:	4604      	mov	r4, r0
 80044c8:	2306      	movs	r3, #6
 80044ca:	2c00      	cmp	r4, #0
 80044cc:	f47f ac44 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 80044d0:	e438      	b.n	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80044d2:	bf00      	nop
 80044d4:	0800ac9c 	.word	0x0800ac9c
 80044d8:	0800acc0 	.word	0x0800acc0
 80044dc:	0800accc 	.word	0x0800accc
 80044e0:	aaaaaaab 	.word	0xaaaaaaab
 80044e4:	08008440 	.word	0x08008440
 80044e8:	08008844 	.word	0x08008844
 80044ec:	0003243f 	.word	0x0003243f
 80044f0:	fffcdbc1 	.word	0xfffcdbc1
 80044f4:	f7fe fdb2 	bl	800305c <acc_a121_cal_session_ack_program>
 80044f8:	9005      	str	r0, [sp, #20]
 80044fa:	2800      	cmp	r0, #0
 80044fc:	f43f ac22 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004500:	4be3      	ldr	r3, [pc, #908]	; (8004890 <acc_calibration_a121_calibrate+0xbfc>)
 8004502:	f8dd 1740 	ldr.w	r1, [sp, #1856]	; 0x740
 8004506:	4ae3      	ldr	r2, [pc, #908]	; (8004894 <acc_calibration_a121_calibrate+0xc00>)
 8004508:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800450a:	f8b1 5080 	ldrh.w	r5, [r1, #128]	; 0x80
 800450e:	9903      	ldr	r1, [sp, #12]
 8004510:	fba2 2303 	umull	r2, r3, r2, r3
 8004514:	099b      	lsrs	r3, r3, #6
 8004516:	f44f 7240 	mov.w	r2, #768	; 0x300
 800451a:	4620      	mov	r0, r4
 800451c:	fb05 f503 	mul.w	r5, r5, r3
 8004520:	f7fe ff94 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8004524:	4606      	mov	r6, r0
 8004526:	9006      	str	r0, [sp, #24]
 8004528:	48db      	ldr	r0, [pc, #876]	; (8004898 <acc_calibration_a121_calibrate+0xc04>)
 800452a:	f7fc fa05 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 800452e:	4630      	mov	r0, r6
 8004530:	f44f 7140 	mov.w	r1, #768	; 0x300
 8004534:	f7fc fa48 	bl	80009c8 <acc_diagnostic_log_data_i16>
 8004538:	ab44      	add	r3, sp, #272	; 0x110
 800453a:	1cb7      	adds	r7, r6, #2
 800453c:	9304      	str	r3, [sp, #16]
 800453e:	f50d 7886 	add.w	r8, sp, #268	; 0x10c
 8004542:	f20d 760c 	addw	r6, sp, #1804	; 0x70c
 8004546:	f9b7 1000 	ldrsh.w	r1, [r7]
 800454a:	f937 0c02 	ldrsh.w	r0, [r7, #-2]
 800454e:	f7fc fd85 	bl	800105c <acc_alg_atan2_q16>
 8004552:	f848 0f04 	str.w	r0, [r8, #4]!
 8004556:	4546      	cmp	r6, r8
 8004558:	f107 0704 	add.w	r7, r7, #4
 800455c:	d1f3      	bne.n	8004546 <acc_calibration_a121_calibrate+0x8b2>
 800455e:	2300      	movs	r3, #0
 8004560:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8004564:	469a      	mov	sl, r3
 8004566:	e9cd 332c 	strd	r3, r3, [sp, #176]	; 0xb0
 800456a:	e9cd 332e 	strd	r3, r3, [sp, #184]	; 0xb8
 800456e:	e9cd 3330 	strd	r3, r3, [sp, #192]	; 0xc0
 8004572:	e9cd 3332 	strd	r3, r3, [sp, #200]	; 0xc8
 8004576:	9303      	str	r3, [sp, #12]
 8004578:	00d3      	lsls	r3, r2, #3
 800457a:	9a04      	ldr	r2, [sp, #16]
 800457c:	4fc7      	ldr	r7, [pc, #796]	; (800489c <acc_calibration_a121_calibrate+0xc08>)
 800457e:	ae2c      	add	r6, sp, #176	; 0xb0
 8004580:	46b3      	mov	fp, r6
 8004582:	f102 095c 	add.w	r9, r2, #92	; 0x5c
 8004586:	ee07 4a90 	vmov	s15, r4
 800458a:	4656      	mov	r6, sl
 800458c:	464c      	mov	r4, r9
 800458e:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004592:	4699      	mov	r9, r3
 8004594:	46da      	mov	sl, fp
 8004596:	f1a4 005c 	sub.w	r0, r4, #92	; 0x5c
 800459a:	f7fc f9d9 	bl	8000950 <acc_cal_algorithms_phase_unwrap.constprop.0>
 800459e:	f1a4 0c60 	sub.w	ip, r4, #96	; 0x60
 80045a2:	2000      	movs	r0, #0
 80045a4:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 80045a8:	f8dc 2060 	ldr.w	r2, [ip, #96]	; 0x60
 80045ac:	4564      	cmp	r4, ip
 80045ae:	eba3 0302 	sub.w	r3, r3, r2
 80045b2:	4418      	add	r0, r3
 80045b4:	d1f6      	bne.n	80045a4 <acc_calibration_a121_calibrate+0x910>
 80045b6:	2800      	cmp	r0, #0
 80045b8:	f2c0 83ac 	blt.w	8004d14 <acc_calibration_a121_calibrate+0x1080>
 80045bc:	0980      	lsrs	r0, r0, #6
 80045be:	f640 5394 	movw	r3, #3476	; 0xd94
 80045c2:	fb03 f000 	mul.w	r0, r3, r0
 80045c6:	0d40      	lsrs	r0, r0, #21
 80045c8:	fb05 f000 	mul.w	r0, r5, r0
 80045cc:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 80045d0:	f8cb 0000 	str.w	r0, [fp]
 80045d4:	b126      	cbz	r6, 80045e0 <acc_calibration_a121_calibrate+0x94c>
 80045d6:	f85b 3c04 	ldr.w	r3, [fp, #-4]
 80045da:	4298      	cmp	r0, r3
 80045dc:	f080 852b 	bcs.w	8005036 <acc_calibration_a121_calibrate+0x13a2>
 80045e0:	f8db 3000 	ldr.w	r3, [fp]
 80045e4:	f1a3 7366 	sub.w	r3, r3, #60293120	; 0x3980000
 80045e8:	f5a3 334a 	sub.w	r3, r3, #206848	; 0x32800
 80045ec:	3b20      	subs	r3, #32
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	bfb8      	it	lt
 80045f2:	425b      	neglt	r3, r3
 80045f4:	42bb      	cmp	r3, r7
 80045f6:	d203      	bcs.n	8004600 <acc_calibration_a121_calibrate+0x96c>
 80045f8:	461f      	mov	r7, r3
 80045fa:	9b05      	ldr	r3, [sp, #20]
 80045fc:	9303      	str	r3, [sp, #12]
 80045fe:	46b0      	mov	r8, r6
 8004600:	1c72      	adds	r2, r6, #1
 8004602:	b296      	uxth	r6, r2
 8004604:	2e08      	cmp	r6, #8
 8004606:	f10b 0b04 	add.w	fp, fp, #4
 800460a:	f104 04c0 	add.w	r4, r4, #192	; 0xc0
 800460e:	d1c2      	bne.n	8004596 <acc_calibration_a121_calibrate+0x902>
 8004610:	9a03      	ldr	r2, [sp, #12]
 8004612:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004616:	ee17 4a90 	vmov	r4, s15
 800461a:	4656      	mov	r6, sl
 800461c:	2a00      	cmp	r2, #0
 800461e:	bf08      	it	eq
 8004620:	4698      	moveq	r8, r3
 8004622:	4d9f      	ldr	r5, [pc, #636]	; (80048a0 <acc_calibration_a121_calibrate+0xc0c>)
 8004624:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 8004628:	f105 0a18 	add.w	sl, r5, #24
 800462c:	2730      	movs	r7, #48	; 0x30
 800462e:	f885 7024 	strb.w	r7, [r5, #36]	; 0x24
 8004632:	3701      	adds	r7, #1
 8004634:	f859 1f04 	ldr.w	r1, [r9, #4]!
 8004638:	4650      	mov	r0, sl
 800463a:	b2ff      	uxtb	r7, r7
 800463c:	f7fc f9d4 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004640:	2f38      	cmp	r7, #56	; 0x38
 8004642:	d1f4      	bne.n	800462e <acc_calibration_a121_calibrate+0x99a>
 8004644:	9b03      	ldr	r3, [sp, #12]
 8004646:	2b00      	cmp	r3, #0
 8004648:	f43f ab7c 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800464c:	4641      	mov	r1, r8
 800464e:	4895      	ldr	r0, [pc, #596]	; (80048a4 <acc_calibration_a121_calibrate+0xc10>)
 8004650:	f7fc f9ca 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004654:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004658:	4893      	ldr	r0, [pc, #588]	; (80048a8 <acc_calibration_a121_calibrate+0xc14>)
 800465a:	f8a3 8022 	strh.w	r8, [r3, #34]	; 0x22
 800465e:	f7fc f9cb 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004662:	4992      	ldr	r1, [pc, #584]	; (80048ac <acc_calibration_a121_calibrate+0xc18>)
 8004664:	4a92      	ldr	r2, [pc, #584]	; (80048b0 <acc_calibration_a121_calibrate+0xc1c>)
 8004666:	f8cd 8000 	str.w	r8, [sp]
 800466a:	230c      	movs	r3, #12
 800466c:	4620      	mov	r0, r4
 800466e:	f7ff f879 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004672:	4620      	mov	r0, r4
 8004674:	f240 4116 	movw	r1, #1046	; 0x416
 8004678:	f7fc fe78 	bl	800136c <acc_sensor_protocol_a121_run_program>
 800467c:	2800      	cmp	r0, #0
 800467e:	f43f ab61 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004682:	9b06      	ldr	r3, [sp, #24]
 8004684:	ed9f 6a8b 	vldr	s12, [pc, #556]	; 80048b4 <acc_calibration_a121_calibrate+0xc20>
 8004688:	4637      	mov	r7, r6
 800468a:	461a      	mov	r2, r3
 800468c:	f103 05c0 	add.w	r5, r3, #192	; 0xc0
 8004690:	f503 6cd8 	add.w	ip, r3, #1728	; 0x6c0
 8004694:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004698:	f1a5 03c0 	sub.w	r3, r5, #192	; 0xc0
 800469c:	2400      	movs	r4, #0
 800469e:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 80046a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80046a6:	fb00 f000 	mul.w	r0, r0, r0
 80046aa:	3304      	adds	r3, #4
 80046ac:	fb01 0101 	mla	r1, r1, r1, r0
 80046b0:	429d      	cmp	r5, r3
 80046b2:	440c      	add	r4, r1
 80046b4:	d1f3      	bne.n	800469e <acc_calibration_a121_calibrate+0xa0a>
 80046b6:	ee07 4a90 	vmov	s15, r4
 80046ba:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80046be:	35c0      	adds	r5, #192	; 0xc0
 80046c0:	eec7 7a06 	vdiv.f32	s15, s14, s12
 80046c4:	45ac      	cmp	ip, r5
 80046c6:	eeb1 7ae7 	vsqrt.f32	s14, s15
 80046ca:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80046ce:	ece7 7a01 	vstmia	r7!, {s15}
 80046d2:	d1e1      	bne.n	8004698 <acc_calibration_a121_calibrate+0xa04>
 80046d4:	9b06      	ldr	r3, [sp, #24]
 80046d6:	f503 60c0 	add.w	r0, r3, #1536	; 0x600
 80046da:	9b04      	ldr	r3, [sp, #16]
 80046dc:	f9b2 1000 	ldrsh.w	r1, [r2]
 80046e0:	ecf6 5a01 	vldmia	r6!, {s11}
 80046e4:	ee06 1a10 	vmov	s12, r1
 80046e8:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 80046ec:	ee06 1a90 	vmov	s13, r1
 80046f0:	f9b2 1060 	ldrsh.w	r1, [r2, #96]	; 0x60
 80046f4:	ee07 1a10 	vmov	s14, r1
 80046f8:	f9b2 1062 	ldrsh.w	r1, [r2, #98]	; 0x62
 80046fc:	ee07 1a90 	vmov	s15, r1
 8004700:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8004704:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8004708:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800470c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004710:	ee26 6a25 	vmul.f32	s12, s12, s11
 8004714:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8004718:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800471c:	ee27 7a25 	vmul.f32	s14, s14, s11
 8004720:	ee26 5a06 	vmul.f32	s10, s12, s12
 8004724:	ee67 5a07 	vmul.f32	s11, s14, s14
 8004728:	ee26 6a26 	vmul.f32	s12, s12, s13
 800472c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004730:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8004734:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8004738:	32c0      	adds	r2, #192	; 0xc0
 800473a:	4290      	cmp	r0, r2
 800473c:	ed83 5a00 	vstr	s10, [r3]
 8004740:	ed83 6a01 	vstr	s12, [r3, #4]
 8004744:	edc3 6a02 	vstr	s13, [r3, #8]
 8004748:	edc3 5a18 	vstr	s11, [r3, #96]	; 0x60
 800474c:	ed83 7a19 	vstr	s14, [r3, #100]	; 0x64
 8004750:	edc3 7a1a 	vstr	s15, [r3, #104]	; 0x68
 8004754:	f103 030c 	add.w	r3, r3, #12
 8004758:	d1c0      	bne.n	80046dc <acc_calibration_a121_calibrate+0xa48>
 800475a:	9804      	ldr	r0, [sp, #16]
 800475c:	a914      	add	r1, sp, #80	; 0x50
 800475e:	2210      	movs	r2, #16
 8004760:	f7fc fbba 	bl	8000ed8 <acc_alg_least_square_fit>
 8004764:	4604      	mov	r4, r0
 8004766:	2800      	cmp	r0, #0
 8004768:	f43f aaec 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800476c:	ed9d 6a14 	vldr	s12, [sp, #80]	; 0x50
 8004770:	ed9d 5a15 	vldr	s10, [sp, #84]	; 0x54
 8004774:	eddd 6a16 	vldr	s13, [sp, #88]	; 0x58
 8004778:	eddf 4a4f 	vldr	s9, [pc, #316]	; 80048b8 <acc_calibration_a121_calibrate+0xc24>
 800477c:	ed9f 4a4f 	vldr	s8, [pc, #316]	; 80048bc <acc_calibration_a121_calibrate+0xc28>
 8004780:	eef1 7ac6 	vsqrt.f32	s15, s12
 8004784:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8004788:	ee26 6a07 	vmul.f32	s12, s12, s14
 800478c:	ee25 7a05 	vmul.f32	s14, s10, s10
 8004790:	ee26 6a26 	vmul.f32	s12, s12, s13
 8004794:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8004798:	ee36 6a47 	vsub.f32	s12, s12, s14
 800479c:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 80047a0:	eeb1 7ac6 	vsqrt.f32	s14, s12
 80047a4:	eeb6 6a08 	vmov.f32	s12, #104	; 0x3f400000  0.750
 80047a8:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80047ac:	ee26 7a87 	vmul.f32	s14, s13, s14
 80047b0:	ee67 7aa4 	vmul.f32	s15, s15, s9
 80047b4:	ee66 6a85 	vmul.f32	s13, s13, s10
 80047b8:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 80047bc:	ee37 7a46 	vsub.f32	s14, s14, s12
 80047c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80047c4:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80047c8:	eeb3 6a0f 	vmov.f32	s12, #63	; 0x41f80000  31.0
 80047cc:	ee66 6a84 	vmul.f32	s13, s13, s8
 80047d0:	ee27 7a24 	vmul.f32	s14, s14, s9
 80047d4:	eef4 7ac6 	vcmpe.f32	s15, s12
 80047d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047dc:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80047e0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80047e4:	f300 827d 	bgt.w	8004ce2 <acc_calibration_a121_calibrate+0x104e>
 80047e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047f0:	bf48      	it	mi
 80047f2:	2300      	movmi	r3, #0
 80047f4:	f140 8441 	bpl.w	800507a <acc_calibration_a121_calibrate+0x13e6>
 80047f8:	eddf 7a31 	vldr	s15, [pc, #196]	; 80048c0 <acc_calibration_a121_calibrate+0xc2c>
 80047fc:	eef4 6ae7 	vcmpe.f32	s13, s15
 8004800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004804:	f340 8277 	ble.w	8004cf6 <acc_calibration_a121_calibrate+0x1062>
 8004808:	ea6f 5383 	mvn.w	r3, r3, lsl #22
 800480c:	ea6f 5393 	mvn.w	r3, r3, lsr #22
 8004810:	eef3 7a0f 	vmov.f32	s15, #63	; 0x41f80000  31.0
 8004814:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800481c:	f300 825e 	bgt.w	8004cdc <acc_calibration_a121_calibrate+0x1048>
 8004820:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004828:	bf48      	it	mi
 800482a:	2200      	movmi	r2, #0
 800482c:	f140 841c 	bpl.w	8005068 <acc_calibration_a121_calibrate+0x13d4>
 8004830:	4313      	orrs	r3, r2
 8004832:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004836:	f8a2 3058 	strh.w	r3, [r2, #88]	; 0x58
 800483a:	2307      	movs	r3, #7
 800483c:	f7ff ba8c 	b.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8004840:	f7fe fc0c 	bl	800305c <acc_a121_cal_session_ack_program>
 8004844:	2800      	cmp	r0, #0
 8004846:	f43f aa7d 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 800484a:	9903      	ldr	r1, [sp, #12]
 800484c:	2210      	movs	r2, #16
 800484e:	4620      	mov	r0, r4
 8004850:	f7fe fdfc 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8004854:	4680      	mov	r8, r0
 8004856:	481b      	ldr	r0, [pc, #108]	; (80048c4 <acc_calibration_a121_calibrate+0xc30>)
 8004858:	f7fc f86e 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 800485c:	4640      	mov	r0, r8
 800485e:	2110      	movs	r1, #16
 8004860:	f7fc f8b2 	bl	80009c8 <acc_diagnostic_log_data_i16>
 8004864:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004868:	f8b3 6058 	ldrh.w	r6, [r3, #88]	; 0x58
 800486c:	2500      	movs	r5, #0
 800486e:	f006 0c1f 	and.w	ip, r6, #31
 8004872:	f3c6 1044 	ubfx	r0, r6, #5, #5
 8004876:	0ab6      	lsrs	r6, r6, #10
 8004878:	f108 0902 	add.w	r9, r8, #2
 800487c:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
 8004880:	3030      	adds	r0, #48	; 0x30
 8004882:	3e20      	subs	r6, #32
 8004884:	9503      	str	r5, [sp, #12]
 8004886:	46ab      	mov	fp, r5
 8004888:	46ae      	mov	lr, r5
 800488a:	462f      	mov	r7, r5
 800488c:	e025      	b.n	80048da <acc_calibration_a121_calibrate+0xc46>
 800488e:	bf00      	nop
 8004890:	200000ac 	.word	0x200000ac
 8004894:	10624dd3 	.word	0x10624dd3
 8004898:	0800ace8 	.word	0x0800ace8
 800489c:	000f4240 	.word	0x000f4240
 80048a0:	20000000 	.word	0x20000000
 80048a4:	0800ad0c 	.word	0x0800ad0c
 80048a8:	0800ad1c 	.word	0x0800ad1c
 80048ac:	08008844 	.word	0x08008844
 80048b0:	08008440 	.word	0x08008440
 80048b4:	42400000 	.word	0x42400000
 80048b8:	42800000 	.word	0x42800000
 80048bc:	42000000 	.word	0x42000000
 80048c0:	427c0000 	.word	0x427c0000
 80048c4:	0800ad38 	.word	0x0800ad38
 80048c8:	455b      	cmp	r3, fp
 80048ca:	4677      	mov	r7, lr
 80048cc:	f200 823c 	bhi.w	8004d48 <acc_calibration_a121_calibrate+0x10b4>
 80048d0:	469e      	mov	lr, r3
 80048d2:	3501      	adds	r5, #1
 80048d4:	2d08      	cmp	r5, #8
 80048d6:	f000 823b 	beq.w	8004d50 <acc_calibration_a121_calibrate+0x10bc>
 80048da:	f938 2025 	ldrsh.w	r2, [r8, r5, lsl #2]
 80048de:	f939 3025 	ldrsh.w	r3, [r9, r5, lsl #2]
 80048e2:	fb0c f202 	mul.w	r2, ip, r2
 80048e6:	fb03 fa06 	mul.w	sl, r3, r6
 80048ea:	2a00      	cmp	r2, #0
 80048ec:	fb03 f300 	mul.w	r3, r3, r0
 80048f0:	bfb8      	it	lt
 80048f2:	323f      	addlt	r2, #63	; 0x3f
 80048f4:	f1ba 0f00 	cmp.w	sl, #0
 80048f8:	bfb8      	it	lt
 80048fa:	f10a 0a1f 	addlt.w	sl, sl, #31
 80048fe:	2b00      	cmp	r3, #0
 8004900:	bfb8      	it	lt
 8004902:	333f      	addlt	r3, #63	; 0x3f
 8004904:	1192      	asrs	r2, r2, #6
 8004906:	eb02 126a 	add.w	r2, r2, sl, asr #5
 800490a:	f343 138f 	sbfx	r3, r3, #6, #16
 800490e:	b212      	sxth	r2, r2
 8004910:	fb03 f303 	mul.w	r3, r3, r3
 8004914:	fb02 3302 	mla	r3, r2, r2, r3
 8004918:	42bb      	cmp	r3, r7
 800491a:	b2a9      	uxth	r1, r5
 800491c:	d9d9      	bls.n	80048d2 <acc_calibration_a121_calibrate+0xc3e>
 800491e:	4573      	cmp	r3, lr
 8004920:	d8d2      	bhi.n	80048c8 <acc_calibration_a121_calibrate+0xc34>
 8004922:	461f      	mov	r7, r3
 8004924:	e7d5      	b.n	80048d2 <acc_calibration_a121_calibrate+0xc3e>
 8004926:	f7fe fb99 	bl	800305c <acc_a121_cal_session_ack_program>
 800492a:	2800      	cmp	r0, #0
 800492c:	f43f aa0a 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004930:	9903      	ldr	r1, [sp, #12]
 8004932:	2260      	movs	r2, #96	; 0x60
 8004934:	4620      	mov	r0, r4
 8004936:	f7fe fd89 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 800493a:	4605      	mov	r5, r0
 800493c:	48cf      	ldr	r0, [pc, #828]	; (8004c7c <acc_calibration_a121_calibrate+0xfe8>)
 800493e:	f7fb fffb 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8004942:	4628      	mov	r0, r5
 8004944:	2160      	movs	r1, #96	; 0x60
 8004946:	f7fc f83f 	bl	80009c8 <acc_diagnostic_log_data_i16>
 800494a:	ab44      	add	r3, sp, #272	; 0x110
 800494c:	9304      	str	r3, [sp, #16]
 800494e:	1caf      	adds	r7, r5, #2
 8004950:	4699      	mov	r9, r3
 8004952:	f04f 0800 	mov.w	r8, #0
 8004956:	f640 36b7 	movw	r6, #2999	; 0xbb7
 800495a:	f937 1028 	ldrsh.w	r1, [r7, r8, lsl #2]
 800495e:	f935 0028 	ldrsh.w	r0, [r5, r8, lsl #2]
 8004962:	fb01 f301 	mul.w	r3, r1, r1
 8004966:	fb00 3300 	mla	r3, r0, r0, r3
 800496a:	42b3      	cmp	r3, r6
 800496c:	f108 0801 	add.w	r8, r8, #1
 8004970:	f77f a9e8 	ble.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004974:	f7fc fb72 	bl	800105c <acc_alg_atan2_q16>
 8004978:	f1b8 0f30 	cmp.w	r8, #48	; 0x30
 800497c:	f849 0b04 	str.w	r0, [r9], #4
 8004980:	d1eb      	bne.n	800495a <acc_calibration_a121_calibrate+0xcc6>
 8004982:	9b04      	ldr	r3, [sp, #16]
 8004984:	ad43      	add	r5, sp, #268	; 0x10c
 8004986:	f10d 06ae 	add.w	r6, sp, #174	; 0xae
 800498a:	4629      	mov	r1, r5
 800498c:	4632      	mov	r2, r6
 800498e:	f103 075c 	add.w	r7, r3, #92	; 0x5c
 8004992:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8004996:	2b00      	cmp	r3, #0
 8004998:	bfb8      	it	lt
 800499a:	330f      	addlt	r3, #15
 800499c:	3202      	adds	r2, #2
 800499e:	111b      	asrs	r3, r3, #4
 80049a0:	428f      	cmp	r7, r1
 80049a2:	8013      	strh	r3, [r2, #0]
 80049a4:	d1f5      	bne.n	8004992 <acc_calibration_a121_calibrate+0xcfe>
 80049a6:	9804      	ldr	r0, [sp, #16]
 80049a8:	f7fb ffd2 	bl	8000950 <acc_cal_algorithms_phase_unwrap.constprop.0>
 80049ac:	2100      	movs	r1, #0
 80049ae:	f855 3f04 	ldr.w	r3, [r5, #4]!
 80049b2:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 80049b4:	42af      	cmp	r7, r5
 80049b6:	eba3 0302 	sub.w	r3, r3, r2
 80049ba:	4419      	add	r1, r3
 80049bc:	d1f7      	bne.n	80049ae <acc_calibration_a121_calibrate+0xd1a>
 80049be:	4bb0      	ldr	r3, [pc, #704]	; (8004c80 <acc_calibration_a121_calibrate+0xfec>)
 80049c0:	17c8      	asrs	r0, r1, #31
 80049c2:	fb83 3101 	smull	r3, r1, r3, r1
 80049c6:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 80049ca:	f500 4399 	add.w	r3, r0, #19584	; 0x4c80
 80049ce:	3330      	adds	r3, #48	; 0x30
 80049d0:	f64c 1262 	movw	r2, #51554	; 0xc962
 80049d4:	4293      	cmp	r3, r2
 80049d6:	f63f a9b5 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 80049da:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80049de:	f10d 01de 	add.w	r1, sp, #222	; 0xde
 80049e2:	f103 0526 	add.w	r5, r3, #38	; 0x26
 80049e6:	3324      	adds	r3, #36	; 0x24
 80049e8:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 80049ec:	f823 2f02 	strh.w	r2, [r3, #2]!
 80049f0:	42b1      	cmp	r1, r6
 80049f2:	d1f9      	bne.n	80049e8 <acc_calibration_a121_calibrate+0xd54>
 80049f4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80049f8:	f8a3 0056 	strh.w	r0, [r3, #86]	; 0x56
 80049fc:	48a1      	ldr	r0, [pc, #644]	; (8004c84 <acc_calibration_a121_calibrate+0xff0>)
 80049fe:	f7fb ff9b 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8004a02:	4628      	mov	r0, r5
 8004a04:	2118      	movs	r1, #24
 8004a06:	f7fb ffdf 	bl	80009c8 <acc_diagnostic_log_data_i16>
 8004a0a:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004a0e:	489e      	ldr	r0, [pc, #632]	; (8004c88 <acc_calibration_a121_calibrate+0xff4>)
 8004a10:	f9b3 1056 	ldrsh.w	r1, [r3, #86]	; 0x56
 8004a14:	f7fb ffe8 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004a18:	489c      	ldr	r0, [pc, #624]	; (8004c8c <acc_calibration_a121_calibrate+0xff8>)
 8004a1a:	f7fb ffed 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004a1e:	4620      	mov	r0, r4
 8004a20:	f240 417b 	movw	r1, #1147	; 0x47b
 8004a24:	f7fc fca2 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8004a28:	4604      	mov	r4, r0
 8004a2a:	2309      	movs	r3, #9
 8004a2c:	2c00      	cmp	r4, #0
 8004a2e:	f47f a993 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8004a32:	f7ff b987 	b.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004a36:	f7fe fb11 	bl	800305c <acc_a121_cal_session_ack_program>
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	f43f a982 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004a40:	f44f 629c 	mov.w	r2, #1248	; 0x4e0
 8004a44:	9903      	ldr	r1, [sp, #12]
 8004a46:	4620      	mov	r0, r4
 8004a48:	f7fe fd00 	bl	800344c <internal_buffer_processed_read.part.0.constprop.0>
 8004a4c:	4680      	mov	r8, r0
 8004a4e:	4890      	ldr	r0, [pc, #576]	; (8004c90 <acc_calibration_a121_calibrate+0xffc>)
 8004a50:	f7fb ff72 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8004a54:	af0b      	add	r7, sp, #44	; 0x2c
 8004a56:	4640      	mov	r0, r8
 8004a58:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8004a5c:	ae2c      	add	r6, sp, #176	; 0xb0
 8004a5e:	f7fb ffbb 	bl	80009d8 <acc_diagnostic_log_data_u16>
 8004a62:	2400      	movs	r4, #0
 8004a64:	aa0c      	add	r2, sp, #48	; 0x30
 8004a66:	9200      	str	r2, [sp, #0]
 8004a68:	9401      	str	r4, [sp, #4]
 8004a6a:	4640      	mov	r0, r8
 8004a6c:	463b      	mov	r3, r7
 8004a6e:	aa44      	add	r2, sp, #272	; 0x110
 8004a70:	2190      	movs	r1, #144	; 0x90
 8004a72:	603c      	str	r4, [r7, #0]
 8004a74:	6034      	str	r4, [r6, #0]
 8004a76:	940c      	str	r4, [sp, #48]	; 0x30
 8004a78:	9414      	str	r4, [sp, #80]	; 0x50
 8004a7a:	f7fb fe6f 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004a7e:	f508 7940 	add.w	r9, r8, #768	; 0x300
 8004a82:	2800      	cmp	r0, #0
 8004a84:	f43f a95e 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004a88:	e9cd 6400 	strd	r6, r4, [sp]
 8004a8c:	ab14      	add	r3, sp, #80	; 0x50
 8004a8e:	aa44      	add	r2, sp, #272	; 0x110
 8004a90:	21f0      	movs	r1, #240	; 0xf0
 8004a92:	f508 7090 	add.w	r0, r8, #288	; 0x120
 8004a96:	f7fb fe61 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004a9a:	2800      	cmp	r0, #0
 8004a9c:	f43f a952 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004aa0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004aa2:	6831      	ldr	r1, [r6, #0]
 8004aa4:	4d7b      	ldr	r5, [pc, #492]	; (8004c94 <acc_calibration_a121_calibrate+0x1000>)
 8004aa6:	4b7c      	ldr	r3, [pc, #496]	; (8004c98 <acc_calibration_a121_calibrate+0x1004>)
 8004aa8:	487c      	ldr	r0, [pc, #496]	; (8004c9c <acc_calibration_a121_calibrate+0x1008>)
 8004aaa:	1a89      	subs	r1, r1, r2
 8004aac:	fb03 f301 	mul.w	r3, r3, r1
 8004ab0:	fb05 fc02 	mul.w	ip, r5, r2
 8004ab4:	683a      	ldr	r2, [r7, #0]
 8004ab6:	0c1b      	lsrs	r3, r3, #16
 8004ab8:	ebc3 3c5c 	rsb	ip, r3, ip, lsr #13
 8004abc:	fb05 f202 	mul.w	r2, r5, r2
 8004ac0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004ac4:	0b52      	lsrs	r2, r2, #13
 8004ac6:	fb05 f101 	mul.w	r1, r5, r1
 8004aca:	e9c3 c117 	strd	ip, r1, [r3, #92]	; 0x5c
 8004ace:	665a      	str	r2, [r3, #100]	; 0x64
 8004ad0:	f7fb ff8a 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004ad4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004ad8:	4871      	ldr	r0, [pc, #452]	; (8004ca0 <acc_calibration_a121_calibrate+0x100c>)
 8004ada:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
 8004adc:	f7fb ff84 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004ae0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004ae4:	486f      	ldr	r0, [pc, #444]	; (8004ca4 <acc_calibration_a121_calibrate+0x1010>)
 8004ae6:	6e59      	ldr	r1, [r3, #100]	; 0x64
 8004ae8:	f7fb ff7e 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004aec:	486e      	ldr	r0, [pc, #440]	; (8004ca8 <acc_calibration_a121_calibrate+0x1014>)
 8004aee:	f7fb ff83 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004af2:	486e      	ldr	r0, [pc, #440]	; (8004cac <acc_calibration_a121_calibrate+0x1018>)
 8004af4:	f7fb ff20 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8004af8:	4648      	mov	r0, r9
 8004afa:	f44f 7158 	mov.w	r1, #864	; 0x360
 8004afe:	f7fb ff6b 	bl	80009d8 <acc_diagnostic_log_data_u16>
 8004b02:	e9cd 7400 	strd	r7, r4, [sp]
 8004b06:	ab0a      	add	r3, sp, #40	; 0x28
 8004b08:	aa44      	add	r2, sp, #272	; 0x110
 8004b0a:	f240 111f 	movw	r1, #287	; 0x11f
 8004b0e:	f208 3002 	addw	r0, r8, #770	; 0x302
 8004b12:	f7fb fe23 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004b16:	2800      	cmp	r0, #0
 8004b18:	f43f a914 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004b1c:	ab14      	add	r3, sp, #80	; 0x50
 8004b1e:	9301      	str	r3, [sp, #4]
 8004b20:	ab0c      	add	r3, sp, #48	; 0x30
 8004b22:	9300      	str	r3, [sp, #0]
 8004b24:	aa44      	add	r2, sp, #272	; 0x110
 8004b26:	ab09      	add	r3, sp, #36	; 0x24
 8004b28:	f44f 7190 	mov.w	r1, #288	; 0x120
 8004b2c:	f508 60a8 	add.w	r0, r8, #1344	; 0x540
 8004b30:	f7fb fe14 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004b34:	2800      	cmp	r0, #0
 8004b36:	f43f a905 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004b3a:	e9cd 4600 	strd	r4, r6, [sp]
 8004b3e:	4623      	mov	r3, r4
 8004b40:	aa44      	add	r2, sp, #272	; 0x110
 8004b42:	f508 60f0 	add.w	r0, r8, #1920	; 0x780
 8004b46:	f44f 7190 	mov.w	r1, #288	; 0x120
 8004b4a:	f7fb fe07 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004b4e:	4604      	mov	r4, r0
 8004b50:	2800      	cmp	r0, #0
 8004b52:	f43f a8f7 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004b56:	f8d7 e000 	ldr.w	lr, [r7]
 8004b5a:	f8d6 c000 	ldr.w	ip, [r6]
 8004b5e:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004b60:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004b62:	4b53      	ldr	r3, [pc, #332]	; (8004cb0 <acc_calibration_a121_calibrate+0x101c>)
 8004b64:	4a53      	ldr	r2, [pc, #332]	; (8004cb4 <acc_calibration_a121_calibrate+0x1020>)
 8004b66:	4954      	ldr	r1, [pc, #336]	; (8004cb8 <acc_calibration_a121_calibrate+0x1024>)
 8004b68:	ebac 0c07 	sub.w	ip, ip, r7
 8004b6c:	e9dd 8909 	ldrd	r8, r9, [sp, #36]	; 0x24
 8004b70:	eba0 000e 	sub.w	r0, r0, lr
 8004b74:	fb03 f30c 	mul.w	r3, r3, ip
 8004b78:	fb05 f707 	mul.w	r7, r5, r7
 8004b7c:	fb02 f200 	mul.w	r2, r2, r0
 8004b80:	0c1b      	lsrs	r3, r3, #16
 8004b82:	eba9 0608 	sub.w	r6, r9, r8
 8004b86:	ebc3 3357 	rsb	r3, r3, r7, lsr #13
 8004b8a:	fb05 fe0e 	mul.w	lr, r5, lr
 8004b8e:	f8dd 7740 	ldr.w	r7, [sp, #1856]	; 0x740
 8004b92:	0c12      	lsrs	r2, r2, #16
 8004b94:	fb01 f106 	mul.w	r1, r1, r6
 8004b98:	ebc2 3e5e 	rsb	lr, r2, lr, lsr #13
 8004b9c:	fb05 f200 	mul.w	r2, r5, r0
 8004ba0:	fb05 f808 	mul.w	r8, r5, r8
 8004ba4:	0c09      	lsrs	r1, r1, #16
 8004ba6:	e9c7 e21c 	strd	lr, r2, [r7, #112]	; 0x70
 8004baa:	fb05 f606 	mul.w	r6, r5, r6
 8004bae:	ebc1 3158 	rsb	r1, r1, r8, lsr #13
 8004bb2:	fb05 f50c 	mul.w	r5, r5, ip
 8004bb6:	4841      	ldr	r0, [pc, #260]	; (8004cbc <acc_calibration_a121_calibrate+0x1028>)
 8004bb8:	e9c7 351e 	strd	r3, r5, [r7, #120]	; 0x78
 8004bbc:	e9c7 161a 	strd	r1, r6, [r7, #104]	; 0x68
 8004bc0:	1e7d      	subs	r5, r7, #1
 8004bc2:	f107 068b 	add.w	r6, r7, #139	; 0x8b
 8004bc6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004bca:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8004bce:	4053      	eors	r3, r2
 8004bd0:	2208      	movs	r2, #8
 8004bd2:	07df      	lsls	r7, r3, #31
 8004bd4:	bf4c      	ite	mi
 8004bd6:	ea80 0353 	eormi.w	r3, r0, r3, lsr #1
 8004bda:	085b      	lsrpl	r3, r3, #1
 8004bdc:	3a01      	subs	r2, #1
 8004bde:	d1f8      	bne.n	8004bd2 <acc_calibration_a121_calibrate+0xf3e>
 8004be0:	42ae      	cmp	r6, r5
 8004be2:	d1f2      	bne.n	8004bca <acc_calibration_a121_calibrate+0xf36>
 8004be4:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004be8:	4835      	ldr	r0, [pc, #212]	; (8004cc0 <acc_calibration_a121_calibrate+0x102c>)
 8004bea:	43db      	mvns	r3, r3
 8004bec:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8004bf0:	f7fb fefa 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004bf4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004bf8:	4832      	ldr	r0, [pc, #200]	; (8004cc4 <acc_calibration_a121_calibrate+0x1030>)
 8004bfa:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 8004bfc:	f7fb fef4 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004c00:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c04:	4830      	ldr	r0, [pc, #192]	; (8004cc8 <acc_calibration_a121_calibrate+0x1034>)
 8004c06:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8004c08:	f7fb feee 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004c0c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c10:	482e      	ldr	r0, [pc, #184]	; (8004ccc <acc_calibration_a121_calibrate+0x1038>)
 8004c12:	6f59      	ldr	r1, [r3, #116]	; 0x74
 8004c14:	f7fb fee8 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004c18:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c1c:	482c      	ldr	r0, [pc, #176]	; (8004cd0 <acc_calibration_a121_calibrate+0x103c>)
 8004c1e:	6f99      	ldr	r1, [r3, #120]	; 0x78
 8004c20:	f7fb fee2 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004c24:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c28:	482a      	ldr	r0, [pc, #168]	; (8004cd4 <acc_calibration_a121_calibrate+0x1040>)
 8004c2a:	6fd9      	ldr	r1, [r3, #124]	; 0x7c
 8004c2c:	f7fb fedc 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004c30:	230a      	movs	r3, #10
 8004c32:	f7ff b891 	b.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8004c36:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 8004c3a:	337e      	adds	r3, #126	; 0x7e
 8004c3c:	4543      	cmp	r3, r8
 8004c3e:	dbfa      	blt.n	8004c36 <acc_calibration_a121_calibrate+0xfa2>
 8004c40:	f7ff bb85 	b.w	800434e <acc_calibration_a121_calibrate+0x6ba>
 8004c44:	280b      	cmp	r0, #11
 8004c46:	f63f abcf 	bhi.w	80043e8 <acc_calibration_a121_calibrate+0x754>
 8004c4a:	3301      	adds	r3, #1
 8004c4c:	2b30      	cmp	r3, #48	; 0x30
 8004c4e:	f43f a879 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004c52:	4610      	mov	r0, r2
 8004c54:	1e5a      	subs	r2, r3, #1
 8004c56:	4432      	add	r2, r6
 8004c58:	1c59      	adds	r1, r3, #1
 8004c5a:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8004c5e:	1e4b      	subs	r3, r1, #1
 8004c60:	b135      	cbz	r5, 8004c70 <acc_calibration_a121_calibrate+0xfdc>
 8004c62:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8004c66:	b91d      	cbnz	r5, 8004c70 <acc_calibration_a121_calibrate+0xfdc>
 8004c68:	461d      	mov	r5, r3
 8004c6a:	2001      	movs	r0, #1
 8004c6c:	f7ff bbb9 	b.w	80043e2 <acc_calibration_a121_calibrate+0x74e>
 8004c70:	2930      	cmp	r1, #48	; 0x30
 8004c72:	f000 81d8 	beq.w	8005026 <acc_calibration_a121_calibrate+0x1392>
 8004c76:	3101      	adds	r1, #1
 8004c78:	e7ef      	b.n	8004c5a <acc_calibration_a121_calibrate+0xfc6>
 8004c7a:	bf00      	nop
 8004c7c:	0800ad5c 	.word	0x0800ad5c
 8004c80:	2aaaaaab 	.word	0x2aaaaaab
 8004c84:	0800ad88 	.word	0x0800ad88
 8004c88:	0800adb4 	.word	0x0800adb4
 8004c8c:	0800add0 	.word	0x0800add0
 8004c90:	0800ade8 	.word	0x0800ade8
 8004c94:	00010aaa 	.word	0x00010aaa
 8004c98:	00042aa8 	.word	0x00042aa8
 8004c9c:	0800adfc 	.word	0x0800adfc
 8004ca0:	0800ae10 	.word	0x0800ae10
 8004ca4:	0800ae24 	.word	0x0800ae24
 8004ca8:	0800ae34 	.word	0x0800ae34
 8004cac:	0800ae4c 	.word	0x0800ae4c
 8004cb0:	000b754e 	.word	0x000b754e
 8004cb4:	00074aa6 	.word	0x00074aa6
 8004cb8:	00021554 	.word	0x00021554
 8004cbc:	edb88320 	.word	0xedb88320
 8004cc0:	0800ae60 	.word	0x0800ae60
 8004cc4:	0800ae74 	.word	0x0800ae74
 8004cc8:	0800ae88 	.word	0x0800ae88
 8004ccc:	0800ae9c 	.word	0x0800ae9c
 8004cd0:	0800aeb0 	.word	0x0800aeb0
 8004cd4:	0800aec8 	.word	0x0800aec8
 8004cd8:	427c0000 	.word	0x427c0000
 8004cdc:	f44f 7278 	mov.w	r2, #992	; 0x3e0
 8004ce0:	e5a6      	b.n	8004830 <acc_calibration_a121_calibrate+0xb9c>
 8004ce2:	ed5f 7a03 	vldr	s15, [pc, #-12]	; 8004cd8 <acc_calibration_a121_calibrate+0x1044>
 8004ce6:	eef4 6ae7 	vcmpe.f32	s13, s15
 8004cea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cee:	f04f 031f 	mov.w	r3, #31
 8004cf2:	f73f ad89 	bgt.w	8004808 <acc_calibration_a121_calibrate+0xb74>
 8004cf6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8004cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cfe:	f53f ad87 	bmi.w	8004810 <acc_calibration_a121_calibrate+0xb7c>
 8004d02:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8004d06:	ee16 2a90 	vmov	r2, s13
 8004d0a:	b292      	uxth	r2, r2
 8004d0c:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 8004d10:	b21b      	sxth	r3, r3
 8004d12:	e57d      	b.n	8004810 <acc_calibration_a121_calibrate+0xb7c>
 8004d14:	4240      	negs	r0, r0
 8004d16:	0980      	lsrs	r0, r0, #6
 8004d18:	f640 5394 	movw	r3, #3476	; 0xd94
 8004d1c:	fb03 f000 	mul.w	r0, r3, r0
 8004d20:	0d40      	lsrs	r0, r0, #21
 8004d22:	fb05 f000 	mul.w	r0, r5, r0
 8004d26:	eba9 2010 	sub.w	r0, r9, r0, lsr #8
 8004d2a:	f8cb 0000 	str.w	r0, [fp]
 8004d2e:	e451      	b.n	80045d4 <acc_calibration_a121_calibrate+0x940>
 8004d30:	f1ce 0e00 	rsb	lr, lr, #0
 8004d34:	fa1f fe8e 	uxth.w	lr, lr
 8004d38:	f1be 0f1f 	cmp.w	lr, #31
 8004d3c:	f63f a802 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004d40:	f04e 0520 	orr.w	r5, lr, #32
 8004d44:	f7ff ba49 	b.w	80041da <acc_calibration_a121_calibrate+0x546>
 8004d48:	46de      	mov	lr, fp
 8004d4a:	9103      	str	r1, [sp, #12]
 8004d4c:	469b      	mov	fp, r3
 8004d4e:	e5c0      	b.n	80048d2 <acc_calibration_a121_calibrate+0xc3e>
 8004d50:	ebb7 0f5b 	cmp.w	r7, fp, lsr #1
 8004d54:	f4be aff6 	bcs.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004d58:	9e03      	ldr	r6, [sp, #12]
 8004d5a:	48cb      	ldr	r0, [pc, #812]	; (8005088 <acc_calibration_a121_calibrate+0x13f4>)
 8004d5c:	4631      	mov	r1, r6
 8004d5e:	f7fb fe43 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004d62:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004d66:	48c9      	ldr	r0, [pc, #804]	; (800508c <acc_calibration_a121_calibrate+0x13f8>)
 8004d68:	841e      	strh	r6, [r3, #32]
 8004d6a:	f7fb fe45 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004d6e:	4ac8      	ldr	r2, [pc, #800]	; (8005090 <acc_calibration_a121_calibrate+0x13fc>)
 8004d70:	49c8      	ldr	r1, [pc, #800]	; (8005094 <acc_calibration_a121_calibrate+0x1400>)
 8004d72:	9600      	str	r6, [sp, #0]
 8004d74:	230b      	movs	r3, #11
 8004d76:	4620      	mov	r0, r4
 8004d78:	f7fe fcf4 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004d7c:	2300      	movs	r3, #0
 8004d7e:	4ac4      	ldr	r2, [pc, #784]	; (8005090 <acc_calibration_a121_calibrate+0x13fc>)
 8004d80:	49c4      	ldr	r1, [pc, #784]	; (8005094 <acc_calibration_a121_calibrate+0x1400>)
 8004d82:	9300      	str	r3, [sp, #0]
 8004d84:	4620      	mov	r0, r4
 8004d86:	2309      	movs	r3, #9
 8004d88:	f7fe fcec 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004d8c:	237e      	movs	r3, #126	; 0x7e
 8004d8e:	4ac0      	ldr	r2, [pc, #768]	; (8005090 <acc_calibration_a121_calibrate+0x13fc>)
 8004d90:	49c0      	ldr	r1, [pc, #768]	; (8005094 <acc_calibration_a121_calibrate+0x1400>)
 8004d92:	9300      	str	r3, [sp, #0]
 8004d94:	4620      	mov	r0, r4
 8004d96:	230a      	movs	r3, #10
 8004d98:	f7fe fce4 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004d9c:	4620      	mov	r0, r4
 8004d9e:	f240 4152 	movw	r1, #1106	; 0x452
 8004da2:	f7fc fae3 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8004da6:	4604      	mov	r4, r0
 8004da8:	462b      	mov	r3, r5
 8004daa:	2c00      	cmp	r4, #0
 8004dac:	f47e afd4 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8004db0:	f7fe bfc8 	b.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004db4:	4620      	mov	r0, r4
 8004db6:	8e35      	ldrh	r5, [r6, #48]	; 0x30
 8004db8:	f7fc fb06 	bl	80013c8 <acc_sensor_protocol_a121_prepare_load>
 8004dbc:	2800      	cmp	r0, #0
 8004dbe:	f43e afc1 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004dc2:	9b04      	ldr	r3, [sp, #16]
 8004dc4:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 8005090 <acc_calibration_a121_calibrate+0x13fc>
 8004dc8:	f8dd 8740 	ldr.w	r8, [sp, #1856]	; 0x740
 8004dcc:	085b      	lsrs	r3, r3, #1
 8004dce:	086d      	lsrs	r5, r5, #1
 8004dd0:	42ab      	cmp	r3, r5
 8004dd2:	bf28      	it	cs
 8004dd4:	462b      	movcs	r3, r5
 8004dd6:	3b02      	subs	r3, #2
 8004dd8:	f023 0301 	bic.w	r3, r3, #1
 8004ddc:	9304      	str	r3, [sp, #16]
 8004dde:	fa1f fa83 	uxth.w	sl, r3
 8004de2:	9b03      	ldr	r3, [sp, #12]
 8004de4:	ee08 4a10 	vmov	s16, r4
 8004de8:	f640 3b4a 	movw	fp, #2890	; 0xb4a
 8004dec:	1d1f      	adds	r7, r3, #4
 8004dee:	2500      	movs	r5, #0
 8004df0:	9b04      	ldr	r3, [sp, #16]
 8004df2:	f5c5 6434 	rsb	r4, r5, #2880	; 0xb40
 8004df6:	340a      	adds	r4, #10
 8004df8:	42a3      	cmp	r3, r4
 8004dfa:	bf8c      	ite	hi
 8004dfc:	465c      	movhi	r4, fp
 8004dfe:	4654      	movls	r4, sl
 8004e00:	4ba4      	ldr	r3, [pc, #656]	; (8005094 <acc_calibration_a121_calibrate+0x1400>)
 8004e02:	086e      	lsrs	r6, r5, #1
 8004e04:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8004e08:	0862      	lsrs	r2, r4, #1
 8004e0a:	4639      	mov	r1, r7
 8004e0c:	f7fb fecc 	bl	8000ba8 <acc_confprogram_copy>
 8004e10:	f8b8 3082 	ldrh.w	r3, [r8, #130]	; 0x82
 8004e14:	9301      	str	r3, [sp, #4]
 8004e16:	221c      	movs	r2, #28
 8004e18:	9200      	str	r2, [sp, #0]
 8004e1a:	464b      	mov	r3, r9
 8004e1c:	4622      	mov	r2, r4
 8004e1e:	4629      	mov	r1, r5
 8004e20:	4638      	mov	r0, r7
 8004e22:	f7fb ffc5 	bl	8000db0 <acc_confprogram_patch_offset>
 8004e26:	2800      	cmp	r0, #0
 8004e28:	f43e af8c 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004e2c:	f8b8 3084 	ldrh.w	r3, [r8, #132]	; 0x84
 8004e30:	9301      	str	r3, [sp, #4]
 8004e32:	231a      	movs	r3, #26
 8004e34:	9300      	str	r3, [sp, #0]
 8004e36:	4622      	mov	r2, r4
 8004e38:	464b      	mov	r3, r9
 8004e3a:	4629      	mov	r1, r5
 8004e3c:	4638      	mov	r0, r7
 8004e3e:	f7fb ffb7 	bl	8000db0 <acc_confprogram_patch_offset>
 8004e42:	4684      	mov	ip, r0
 8004e44:	f04f 0e1b 	mov.w	lr, #27
 8004e48:	464b      	mov	r3, r9
 8004e4a:	4622      	mov	r2, r4
 8004e4c:	4629      	mov	r1, r5
 8004e4e:	4638      	mov	r0, r7
 8004e50:	f1bc 0f00 	cmp.w	ip, #0
 8004e54:	f43e af76 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004e58:	f8b8 c086 	ldrh.w	ip, [r8, #134]	; 0x86
 8004e5c:	e9cd ec00 	strd	lr, ip, [sp]
 8004e60:	f7fb ffa6 	bl	8000db0 <acc_confprogram_patch_offset>
 8004e64:	4684      	mov	ip, r0
 8004e66:	f04f 0e19 	mov.w	lr, #25
 8004e6a:	464b      	mov	r3, r9
 8004e6c:	4622      	mov	r2, r4
 8004e6e:	4629      	mov	r1, r5
 8004e70:	4638      	mov	r0, r7
 8004e72:	f1bc 0f00 	cmp.w	ip, #0
 8004e76:	f43e af65 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004e7a:	f8b8 c088 	ldrh.w	ip, [r8, #136]	; 0x88
 8004e7e:	e9cd ec00 	strd	lr, ip, [sp]
 8004e82:	f7fb ff95 	bl	8000db0 <acc_confprogram_patch_offset>
 8004e86:	4684      	mov	ip, r0
 8004e88:	9a03      	ldr	r2, [sp, #12]
 8004e8a:	ee18 0a10 	vmov	r0, s16
 8004e8e:	4623      	mov	r3, r4
 8004e90:	4631      	mov	r1, r6
 8004e92:	f1bc 0f00 	cmp.w	ip, #0
 8004e96:	f43e af55 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004e9a:	4455      	add	r5, sl
 8004e9c:	f7fc fad6 	bl	800144c <acc_sensor_a121_load_confmem>
 8004ea0:	b2ad      	uxth	r5, r5
 8004ea2:	f640 3349 	movw	r3, #2889	; 0xb49
 8004ea6:	429d      	cmp	r5, r3
 8004ea8:	ebab 0b0a 	sub.w	fp, fp, sl
 8004eac:	f200 80a5 	bhi.w	8004ffa <acc_calibration_a121_calibrate+0x1366>
 8004eb0:	fa1f fb8b 	uxth.w	fp, fp
 8004eb4:	e79c      	b.n	8004df0 <acc_calibration_a121_calibrate+0x115c>
 8004eb6:	f1b8 0f00 	cmp.w	r8, #0
 8004eba:	f43e af43 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004ebe:	f08b 0330 	eor.w	r3, fp, #48	; 0x30
 8004ec2:	4619      	mov	r1, r3
 8004ec4:	4874      	ldr	r0, [pc, #464]	; (8005098 <acc_calibration_a121_calibrate+0x1404>)
 8004ec6:	9305      	str	r3, [sp, #20]
 8004ec8:	461e      	mov	r6, r3
 8004eca:	f7fb fd8d 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004ece:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004ed2:	4872      	ldr	r0, [pc, #456]	; (800509c <acc_calibration_a121_calibrate+0x1408>)
 8004ed4:	8096      	strh	r6, [r2, #4]
 8004ed6:	f7fb fd8f 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004eda:	4621      	mov	r1, r4
 8004edc:	4870      	ldr	r0, [pc, #448]	; (80050a0 <acc_calibration_a121_calibrate+0x140c>)
 8004ede:	f7fb fd83 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004ee2:	4870      	ldr	r0, [pc, #448]	; (80050a4 <acc_calibration_a121_calibrate+0x1410>)
 8004ee4:	f7fb fd28 	bl	8000938 <acc_diagnostic_log_array.constprop.0>
 8004ee8:	9e07      	ldr	r6, [sp, #28]
 8004eea:	2130      	movs	r1, #48	; 0x30
 8004eec:	4630      	mov	r0, r6
 8004eee:	f7fb fd73 	bl	80009d8 <acc_diagnostic_log_data_u16>
 8004ef2:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8004ef6:	486c      	ldr	r0, [pc, #432]	; (80050a8 <acc_calibration_a121_calibrate+0x1414>)
 8004ef8:	4649      	mov	r1, r9
 8004efa:	f7fb fd75 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004efe:	8c69      	ldrh	r1, [r5, #34]	; 0x22
 8004f00:	f8b5 3080 	ldrh.w	r3, [r5, #128]	; 0x80
 8004f04:	1a5b      	subs	r3, r3, r1
 8004f06:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8004f0a:	f6fe af1b 	blt.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004f0e:	4a67      	ldr	r2, [pc, #412]	; (80050ac <acc_calibration_a121_calibrate+0x1418>)
 8004f10:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8004f14:	fba2 3a0a 	umull	r3, sl, r2, sl
 8004f18:	2000      	movs	r0, #0
 8004f1a:	ee07 4a90 	vmov	s15, r4
 8004f1e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8004f22:	4607      	mov	r7, r0
 8004f24:	468b      	mov	fp, r1
 8004f26:	2210      	movs	r2, #16
 8004f28:	f64f 7eff 	movw	lr, #65535	; 0xffff
 8004f2c:	46cc      	mov	ip, r9
 8004f2e:	e00a      	b.n	8004f46 <acc_calibration_a121_calibrate+0x12b2>
 8004f30:	42a5      	cmp	r5, r4
 8004f32:	bf88      	it	hi
 8004f34:	f04f 0800 	movhi.w	r8, #0
 8004f38:	3201      	adds	r2, #1
 8004f3a:	b292      	uxth	r2, r2
 8004f3c:	2a40      	cmp	r2, #64	; 0x40
 8004f3e:	4450      	add	r0, sl
 8004f40:	d01b      	beq.n	8004f7a <acc_calibration_a121_calibrate+0x12e6>
 8004f42:	f836 1f02 	ldrh.w	r1, [r6, #2]!
 8004f46:	eba1 030c 	sub.w	r3, r1, ip
 8004f4a:	2b00      	cmp	r3, #0
 8004f4c:	bfb8      	it	lt
 8004f4e:	425b      	neglt	r3, r3
 8004f50:	b29b      	uxth	r3, r3
 8004f52:	eb0b 4510 	add.w	r5, fp, r0, lsr #16
 8004f56:	4573      	cmp	r3, lr
 8004f58:	f505 7948 	add.w	r9, r5, #800	; 0x320
 8004f5c:	bf3c      	itt	cc
 8004f5e:	469e      	movcc	lr, r3
 8004f60:	4617      	movcc	r7, r2
 8004f62:	4549      	cmp	r1, r9
 8004f64:	f501 7448 	add.w	r4, r1, #800	; 0x320
 8004f68:	d9e2      	bls.n	8004f30 <acc_calibration_a121_calibrate+0x129c>
 8004f6a:	f04f 0800 	mov.w	r8, #0
 8004f6e:	e7e3      	b.n	8004f38 <acc_calibration_a121_calibrate+0x12a4>
 8004f70:	459c      	cmp	ip, r3
 8004f72:	f47f a928 	bne.w	80041c6 <acc_calibration_a121_calibrate+0x532>
 8004f76:	f7fe bee5 	b.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004f7a:	ee17 4a90 	vmov	r4, s15
 8004f7e:	f1b8 0f00 	cmp.w	r8, #0
 8004f82:	f43e aedf 	beq.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004f86:	4639      	mov	r1, r7
 8004f88:	4849      	ldr	r0, [pc, #292]	; (80050b0 <acc_calibration_a121_calibrate+0x141c>)
 8004f8a:	f7fb fd2d 	bl	80009e8 <acc_diagnostic_log_scalar>
 8004f8e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004f92:	4848      	ldr	r0, [pc, #288]	; (80050b4 <acc_calibration_a121_calibrate+0x1420>)
 8004f94:	815f      	strh	r7, [r3, #10]
 8004f96:	f7fb fd2f 	bl	80009f8 <acc_diagnostic_log_set_scope>
 8004f9a:	2301      	movs	r3, #1
 8004f9c:	e9dd 1203 	ldrd	r1, r2, [sp, #12]
 8004fa0:	4620      	mov	r0, r4
 8004fa2:	9300      	str	r3, [sp, #0]
 8004fa4:	f44f 557e 	mov.w	r5, #16256	; 0x3f80
 8004fa8:	ab44      	add	r3, sp, #272	; 0x110
 8004faa:	f8ad 5110 	strh.w	r5, [sp, #272]	; 0x110
 8004fae:	f7fe f8c5 	bl	800313c <acc_sensor_a121_lut_buffer_write.constprop.0>
 8004fb2:	4a37      	ldr	r2, [pc, #220]	; (8005090 <acc_calibration_a121_calibrate+0x13fc>)
 8004fb4:	4937      	ldr	r1, [pc, #220]	; (8005094 <acc_calibration_a121_calibrate+0x1400>)
 8004fb6:	9700      	str	r7, [sp, #0]
 8004fb8:	2326      	movs	r3, #38	; 0x26
 8004fba:	4620      	mov	r0, r4
 8004fbc:	f7fe fbd2 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004fc0:	9b05      	ldr	r3, [sp, #20]
 8004fc2:	4a33      	ldr	r2, [pc, #204]	; (8005090 <acc_calibration_a121_calibrate+0x13fc>)
 8004fc4:	4933      	ldr	r1, [pc, #204]	; (8005094 <acc_calibration_a121_calibrate+0x1400>)
 8004fc6:	9300      	str	r3, [sp, #0]
 8004fc8:	4620      	mov	r0, r4
 8004fca:	2324      	movs	r3, #36	; 0x24
 8004fcc:	f7fe fbca 	bl	8003764 <acc_confprogram_live_patch.constprop.0>
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	f240 21c5 	movw	r1, #709	; 0x2c5
 8004fd6:	f7fc f9c9 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8004fda:	4604      	mov	r4, r0
 8004fdc:	2303      	movs	r3, #3
 8004fde:	2c00      	cmp	r4, #0
 8004fe0:	f47e aeba 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8004fe4:	f7fe beae 	b.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8004fe8:	2703      	movs	r7, #3
 8004fea:	f04f 0801 	mov.w	r8, #1
 8004fee:	2600      	movs	r6, #0
 8004ff0:	f7ff ba29 	b.w	8004446 <acc_calibration_a121_calibrate+0x7b2>
 8004ff4:	46d6      	mov	lr, sl
 8004ff6:	f7ff b8e6 	b.w	80041c6 <acc_calibration_a121_calibrate+0x532>
 8004ffa:	ee18 0a10 	vmov	r0, s16
 8004ffe:	f240 115b 	movw	r1, #347	; 0x15b
 8005002:	f7fc f9b3 	bl	800136c <acc_sensor_protocol_a121_run_program>
 8005006:	4604      	mov	r4, r0
 8005008:	2301      	movs	r3, #1
 800500a:	2c00      	cmp	r4, #0
 800500c:	f47e aea4 	bne.w	8003d58 <acc_calibration_a121_calibrate+0xc4>
 8005010:	f7fe be98 	b.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8005014:	1ffb      	subs	r3, r7, #7
 8005016:	2f17      	cmp	r7, #23
 8005018:	bf88      	it	hi
 800501a:	f1c3 0220 	rsbhi	r2, r3, #32
 800501e:	f63e afe8 	bhi.w	8003ff2 <acc_calibration_a121_calibrate+0x35e>
 8005022:	f7fe bfe3 	b.w	8003fec <acc_calibration_a121_calibrate+0x358>
 8005026:	f1a0 030c 	sub.w	r3, r0, #12
 800502a:	2b08      	cmp	r3, #8
 800502c:	f63e ae8a 	bhi.w	8003d44 <acc_calibration_a121_calibrate+0xb0>
 8005030:	0845      	lsrs	r5, r0, #1
 8005032:	f7ff b9e5 	b.w	8004400 <acc_calibration_a121_calibrate+0x76c>
 8005036:	2300      	movs	r3, #0
 8005038:	ee17 4a90 	vmov	r4, s15
 800503c:	4656      	mov	r6, sl
 800503e:	9303      	str	r3, [sp, #12]
 8005040:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8005044:	f7ff baed 	b.w	8004622 <acc_calibration_a121_calibrate+0x98e>
 8005048:	2501      	movs	r5, #1
 800504a:	462e      	mov	r6, r5
 800504c:	f7fe bef5 	b.w	8003e3a <acc_calibration_a121_calibrate+0x1a6>
 8005050:	ab44      	add	r3, sp, #272	; 0x110
 8005052:	9304      	str	r3, [sp, #16]
 8005054:	f7fe bff3 	b.w	800403e <acc_calibration_a121_calibrate+0x3aa>
 8005058:	2502      	movs	r5, #2
 800505a:	462e      	mov	r6, r5
 800505c:	f7fe beed 	b.w	8003e3a <acc_calibration_a121_calibrate+0x1a6>
 8005060:	2503      	movs	r5, #3
 8005062:	462e      	mov	r6, r5
 8005064:	f7fe bee9 	b.w	8003e3a <acc_calibration_a121_calibrate+0x1a6>
 8005068:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 800506c:	ee17 2a90 	vmov	r2, s15
 8005070:	f342 020a 	sbfx	r2, r2, #0, #11
 8005074:	0152      	lsls	r2, r2, #5
 8005076:	f7ff bbdb 	b.w	8004830 <acc_calibration_a121_calibrate+0xb9c>
 800507a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800507e:	ee17 3a90 	vmov	r3, s15
 8005082:	b21b      	sxth	r3, r3
 8005084:	f7ff bbb8 	b.w	80047f8 <acc_calibration_a121_calibrate+0xb64>
 8005088:	0800af18 	.word	0x0800af18
 800508c:	0800af28 	.word	0x0800af28
 8005090:	08008440 	.word	0x08008440
 8005094:	08008844 	.word	0x08008844
 8005098:	0800abc0 	.word	0x0800abc0
 800509c:	0800abcc 	.word	0x0800abcc
 80050a0:	0800aaf8 	.word	0x0800aaf8
 80050a4:	0800abe4 	.word	0x0800abe4
 80050a8:	0800abf8 	.word	0x0800abf8
 80050ac:	aaaaaaab 	.word	0xaaaaaaab
 80050b0:	0800ac04 	.word	0x0800ac04
 80050b4:	0800ac10 	.word	0x0800ac10

080050b8 <test_sensor_calibration>:
 80050b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80050bc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80050be:	b087      	sub	sp, #28
 80050c0:	b1f3      	cbz	r3, 8005100 <test_sensor_calibration+0x48>
 80050c2:	2b01      	cmp	r3, #1
 80050c4:	4604      	mov	r4, r0
 80050c6:	d02c      	beq.n	8005122 <test_sensor_calibration+0x6a>
 80050c8:	6e05      	ldr	r5, [r0, #96]	; 0x60
 80050ca:	b125      	cbz	r5, 80050d6 <test_sensor_calibration+0x1e>
 80050cc:	4b7f      	ldr	r3, [pc, #508]	; (80052cc <test_sensor_calibration+0x214>)
 80050ce:	682a      	ldr	r2, [r5, #0]
 80050d0:	429a      	cmp	r2, r3
 80050d2:	f000 809a 	beq.w	800520a <test_sensor_calibration+0x152>
 80050d6:	f8df 8208 	ldr.w	r8, [pc, #520]	; 80052e0 <test_sensor_calibration+0x228>
 80050da:	4a7d      	ldr	r2, [pc, #500]	; (80052d0 <test_sensor_calibration+0x218>)
 80050dc:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80050e0:	497c      	ldr	r1, [pc, #496]	; (80052d4 <test_sensor_calibration+0x21c>)
 80050e2:	2000      	movs	r0, #0
 80050e4:	4798      	blx	r3
 80050e6:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80050ea:	4a7b      	ldr	r2, [pc, #492]	; (80052d8 <test_sensor_calibration+0x220>)
 80050ec:	497b      	ldr	r1, [pc, #492]	; (80052dc <test_sensor_calibration+0x224>)
 80050ee:	2000      	movs	r0, #0
 80050f0:	4798      	blx	r3
 80050f2:	6e20      	ldr	r0, [r4, #96]	; 0x60
 80050f4:	f7fc fcbc 	bl	8001a70 <acc_sensor_destroy>
 80050f8:	2004      	movs	r0, #4
 80050fa:	b007      	add	sp, #28
 80050fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005100:	4b77      	ldr	r3, [pc, #476]	; (80052e0 <test_sensor_calibration+0x228>)
 8005102:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8005106:	2a01      	cmp	r2, #1
 8005108:	d904      	bls.n	8005114 <test_sensor_calibration+0x5c>
 800510a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800510c:	4a75      	ldr	r2, [pc, #468]	; (80052e4 <test_sensor_calibration+0x22c>)
 800510e:	4973      	ldr	r1, [pc, #460]	; (80052dc <test_sensor_calibration+0x224>)
 8005110:	2002      	movs	r0, #2
 8005112:	4798      	blx	r3
 8005114:	4874      	ldr	r0, [pc, #464]	; (80052e8 <test_sensor_calibration+0x230>)
 8005116:	f7fb fc6f 	bl	80009f8 <acc_diagnostic_log_set_scope>
 800511a:	2001      	movs	r0, #1
 800511c:	b007      	add	sp, #28
 800511e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005122:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80052e0 <test_sensor_calibration+0x228>
 8005126:	f898 3048 	ldrb.w	r3, [r8, #72]	; 0x48
 800512a:	2b01      	cmp	r3, #1
 800512c:	d905      	bls.n	800513a <test_sensor_calibration+0x82>
 800512e:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8005132:	4a6e      	ldr	r2, [pc, #440]	; (80052ec <test_sensor_calibration+0x234>)
 8005134:	4969      	ldr	r1, [pc, #420]	; (80052dc <test_sensor_calibration+0x224>)
 8005136:	2002      	movs	r0, #2
 8005138:	4798      	blx	r3
 800513a:	4966      	ldr	r1, [pc, #408]	; (80052d4 <test_sensor_calibration+0x21c>)
 800513c:	f8d4 9000 	ldr.w	r9, [r4]
 8005140:	223b      	movs	r2, #59	; 0x3b
 8005142:	2014      	movs	r0, #20
 8005144:	f7fc f800 	bl	8001148 <acc_rss_integration_mem_alloc_debug>
 8005148:	4605      	mov	r5, r0
 800514a:	2800      	cmp	r0, #0
 800514c:	f000 80b4 	beq.w	80052b8 <test_sensor_calibration+0x200>
 8005150:	2600      	movs	r6, #0
 8005152:	6006      	str	r6, [r0, #0]
 8005154:	6046      	str	r6, [r0, #4]
 8005156:	6086      	str	r6, [r0, #8]
 8005158:	60c6      	str	r6, [r0, #12]
 800515a:	6106      	str	r6, [r0, #16]
 800515c:	4964      	ldr	r1, [pc, #400]	; (80052f0 <test_sensor_calibration+0x238>)
 800515e:	2273      	movs	r2, #115	; 0x73
 8005160:	f44f 70fe 	mov.w	r0, #508	; 0x1fc
 8005164:	f7fb fff0 	bl	8001148 <acc_rss_integration_mem_alloc_debug>
 8005168:	4607      	mov	r7, r0
 800516a:	2800      	cmp	r0, #0
 800516c:	f000 80a0 	beq.w	80052b0 <test_sensor_calibration+0x1f8>
 8005170:	f44f 72fe 	mov.w	r2, #508	; 0x1fc
 8005174:	4631      	mov	r1, r6
 8005176:	f001 fbfd 	bl	8006974 <memset>
 800517a:	2301      	movs	r3, #1
 800517c:	4953      	ldr	r1, [pc, #332]	; (80052cc <test_sensor_calibration+0x214>)
 800517e:	f8a7 31c4 	strh.w	r3, [r7, #452]	; 0x1c4
 8005182:	f887 31c6 	strb.w	r3, [r7, #454]	; 0x1c6
 8005186:	f10d 0216 	add.w	r2, sp, #22
 800518a:	6029      	str	r1, [r5, #0]
 800518c:	e9c5 6901 	strd	r6, r9, [r5, #4]
 8005190:	4631      	mov	r1, r6
 8005192:	612f      	str	r7, [r5, #16]
 8005194:	736e      	strb	r6, [r5, #13]
 8005196:	4648      	mov	r0, r9
 8005198:	f8ad 6016 	strh.w	r6, [sp, #22]
 800519c:	f7fc f8d0 	bl	8001340 <acc_sensor_reg_read>
 80051a0:	4854      	ldr	r0, [pc, #336]	; (80052f4 <test_sensor_calibration+0x23c>)
 80051a2:	f7fb fc29 	bl	80009f8 <acc_diagnostic_log_set_scope>
 80051a6:	4854      	ldr	r0, [pc, #336]	; (80052f8 <test_sensor_calibration+0x240>)
 80051a8:	4649      	mov	r1, r9
 80051aa:	f7fb fc1d 	bl	80009e8 <acc_diagnostic_log_scalar>
 80051ae:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80051b2:	4850      	ldr	r0, [pc, #320]	; (80052f4 <test_sensor_calibration+0x23c>)
 80051b4:	f7fb fc18 	bl	80009e8 <acc_diagnostic_log_scalar>
 80051b8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80051bc:	f241 2210 	movw	r2, #4624	; 0x1210
 80051c0:	4293      	cmp	r3, r2
 80051c2:	d036      	beq.n	8005232 <test_sensor_calibration+0x17a>
 80051c4:	4a4d      	ldr	r2, [pc, #308]	; (80052fc <test_sensor_calibration+0x244>)
 80051c6:	494e      	ldr	r1, [pc, #312]	; (8005300 <test_sensor_calibration+0x248>)
 80051c8:	f8d8 7040 	ldr.w	r7, [r8, #64]	; 0x40
 80051cc:	4630      	mov	r0, r6
 80051ce:	47b8      	blx	r7
 80051d0:	4628      	mov	r0, r5
 80051d2:	f7fc fc4d 	bl	8001a70 <acc_sensor_destroy>
 80051d6:	f10d 0216 	add.w	r2, sp, #22
 80051da:	4648      	mov	r0, r9
 80051dc:	211c      	movs	r1, #28
 80051de:	f8ad 6016 	strh.w	r6, [sp, #22]
 80051e2:	f7fc f8ad 	bl	8001340 <acc_sensor_reg_read>
 80051e6:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80051ea:	051b      	lsls	r3, r3, #20
 80051ec:	d564      	bpl.n	80052b8 <test_sensor_calibration+0x200>
 80051ee:	4635      	mov	r5, r6
 80051f0:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80051f4:	4a43      	ldr	r2, [pc, #268]	; (8005304 <test_sensor_calibration+0x24c>)
 80051f6:	4937      	ldr	r1, [pc, #220]	; (80052d4 <test_sensor_calibration+0x21c>)
 80051f8:	2000      	movs	r0, #0
 80051fa:	4798      	blx	r3
 80051fc:	4628      	mov	r0, r5
 80051fe:	f7fc fc37 	bl	8001a70 <acc_sensor_destroy>
 8005202:	2300      	movs	r3, #0
 8005204:	6623      	str	r3, [r4, #96]	; 0x60
 8005206:	2004      	movs	r0, #4
 8005208:	e788      	b.n	800511c <test_sensor_calibration+0x64>
 800520a:	6841      	ldr	r1, [r0, #4]
 800520c:	b171      	cbz	r1, 800522c <test_sensor_calibration+0x174>
 800520e:	f104 0364 	add.w	r3, r4, #100	; 0x64
 8005212:	68a8      	ldr	r0, [r5, #8]
 8005214:	68a2      	ldr	r2, [r4, #8]
 8005216:	9300      	str	r3, [sp, #0]
 8005218:	f105 030d 	add.w	r3, r5, #13
 800521c:	f7fe fd3a 	bl	8003c94 <acc_calibration_a121_calibrate>
 8005220:	b120      	cbz	r0, 800522c <test_sensor_calibration+0x174>
 8005222:	7b6b      	ldrb	r3, [r5, #13]
 8005224:	2b0a      	cmp	r3, #10
 8005226:	d04b      	beq.n	80052c0 <test_sensor_calibration+0x208>
 8005228:	2002      	movs	r0, #2
 800522a:	e777      	b.n	800511c <test_sensor_calibration+0x64>
 800522c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80052e0 <test_sensor_calibration+0x228>
 8005230:	e759      	b.n	80050e6 <test_sensor_calibration+0x2e>
 8005232:	4648      	mov	r0, r9
 8005234:	f10d 0216 	add.w	r2, sp, #22
 8005238:	211c      	movs	r1, #28
 800523a:	f8ad 6016 	strh.w	r6, [sp, #22]
 800523e:	f7fc f87f 	bl	8001340 <acc_sensor_reg_read>
 8005242:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8005246:	f410 6600 	ands.w	r6, r0, #2048	; 0x800
 800524a:	d1d1      	bne.n	80051f0 <test_sensor_calibration+0x138>
 800524c:	68a8      	ldr	r0, [r5, #8]
 800524e:	f7fc f84d 	bl	80012ec <acc_sensor_protocol_a121_init_interrupts>
 8005252:	2203      	movs	r2, #3
 8005254:	68a8      	ldr	r0, [r5, #8]
 8005256:	9200      	str	r2, [sp, #0]
 8005258:	4631      	mov	r1, r6
 800525a:	f240 1349 	movw	r3, #329	; 0x149
 800525e:	9003      	str	r0, [sp, #12]
 8005260:	f7fc f816 	bl	8001290 <acc_sensor_reg_field_write>
 8005264:	9803      	ldr	r0, [sp, #12]
 8005266:	9600      	str	r6, [sp, #0]
 8005268:	f240 1349 	movw	r3, #329	; 0x149
 800526c:	2204      	movs	r2, #4
 800526e:	2102      	movs	r1, #2
 8005270:	f7fc f80e 	bl	8001290 <acc_sensor_reg_field_write>
 8005274:	9803      	ldr	r0, [sp, #12]
 8005276:	9600      	str	r6, [sp, #0]
 8005278:	f240 1349 	movw	r3, #329	; 0x149
 800527c:	2210      	movs	r2, #16
 800527e:	2104      	movs	r1, #4
 8005280:	f7fc f806 	bl	8001290 <acc_sensor_reg_field_write>
 8005284:	9803      	ldr	r0, [sp, #12]
 8005286:	9600      	str	r6, [sp, #0]
 8005288:	f240 1349 	movw	r3, #329	; 0x149
 800528c:	2220      	movs	r2, #32
 800528e:	2105      	movs	r1, #5
 8005290:	f7fb fffe 	bl	8001290 <acc_sensor_reg_field_write>
 8005294:	9803      	ldr	r0, [sp, #12]
 8005296:	9600      	str	r6, [sp, #0]
 8005298:	f240 1349 	movw	r3, #329	; 0x149
 800529c:	f44f 527f 	mov.w	r2, #16320	; 0x3fc0
 80052a0:	2106      	movs	r1, #6
 80052a2:	f7fb fff5 	bl	8001290 <acc_sensor_reg_field_write>
 80052a6:	4630      	mov	r0, r6
 80052a8:	6625      	str	r5, [r4, #96]	; 0x60
 80052aa:	b007      	add	sp, #28
 80052ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80052b0:	6128      	str	r0, [r5, #16]
 80052b2:	4628      	mov	r0, r5
 80052b4:	f7fb ff40 	bl	8001138 <acc_rss_integration_mem_free>
 80052b8:	2300      	movs	r3, #0
 80052ba:	6623      	str	r3, [r4, #96]	; 0x60
 80052bc:	2004      	movs	r0, #4
 80052be:	e72d      	b.n	800511c <test_sensor_calibration+0x64>
 80052c0:	6e20      	ldr	r0, [r4, #96]	; 0x60
 80052c2:	f7fc fbd5 	bl	8001a70 <acc_sensor_destroy>
 80052c6:	2003      	movs	r0, #3
 80052c8:	e728      	b.n	800511c <test_sensor_calibration+0x64>
 80052ca:	bf00      	nop
 80052cc:	1337b00e 	.word	0x1337b00e
 80052d0:	0800a4e4 	.word	0x0800a4e4
 80052d4:	0800a4fc 	.word	0x0800a4fc
 80052d8:	0800aff8 	.word	0x0800aff8
 80052dc:	0800a254 	.word	0x0800a254
 80052e0:	200000ac 	.word	0x200000ac
 80052e4:	0800af48 	.word	0x0800af48
 80052e8:	0800af68 	.word	0x0800af68
 80052ec:	0800af80 	.word	0x0800af80
 80052f0:	0800afa0 	.word	0x0800afa0
 80052f4:	0800afb4 	.word	0x0800afb4
 80052f8:	0800aaf8 	.word	0x0800aaf8
 80052fc:	0800afbc 	.word	0x0800afbc
 8005300:	0800a124 	.word	0x0800a124
 8005304:	0800afdc 	.word	0x0800afdc

08005308 <acc_integration_log>:
 8005308:	b40c      	push	{r2, r3}
 800530a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800530e:	b0ac      	sub	sp, #176	; 0xb0
 8005310:	ab32      	add	r3, sp, #200	; 0xc8
 8005312:	f10d 0818 	add.w	r8, sp, #24
 8005316:	f853 2b04 	ldr.w	r2, [r3], #4
 800531a:	9305      	str	r3, [sp, #20]
 800531c:	4606      	mov	r6, r0
 800531e:	460f      	mov	r7, r1
 8005320:	4640      	mov	r0, r8
 8005322:	2196      	movs	r1, #150	; 0x96
 8005324:	f001 fc64 	bl	8006bf0 <__wrap_vsnprintf>
 8005328:	2895      	cmp	r0, #149	; 0x95
 800532a:	dd06      	ble.n	800533a <acc_integration_log+0x32>
 800532c:	f642 622e 	movw	r2, #11822	; 0x2e2e
 8005330:	232e      	movs	r3, #46	; 0x2e
 8005332:	f8ad 20aa 	strh.w	r2, [sp, #170]	; 0xaa
 8005336:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 800533a:	4b1a      	ldr	r3, [pc, #104]	; (80053a4 <acc_integration_log+0x9c>)
 800533c:	4a1a      	ldr	r2, [pc, #104]	; (80053a8 <acc_integration_log+0xa0>)
 800533e:	6818      	ldr	r0, [r3, #0]
 8005340:	4d1a      	ldr	r5, [pc, #104]	; (80053ac <acc_integration_log+0xa4>)
 8005342:	4b1b      	ldr	r3, [pc, #108]	; (80053b0 <acc_integration_log+0xa8>)
 8005344:	4c1b      	ldr	r4, [pc, #108]	; (80053b4 <acc_integration_log+0xac>)
 8005346:	fba2 1200 	umull	r1, r2, r2, r0
 800534a:	fba5 1500 	umull	r1, r5, r5, r0
 800534e:	ea4f 3c92 	mov.w	ip, r2, lsr #14
 8005352:	09ad      	lsrs	r5, r5, #6
 8005354:	fba3 120c 	umull	r1, r2, r3, ip
 8005358:	fba3 1305 	umull	r1, r3, r3, r5
 800535c:	095b      	lsrs	r3, r3, #5
 800535e:	fba4 1400 	umull	r1, r4, r4, r0
 8005362:	2e04      	cmp	r6, #4
 8005364:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8005368:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 800536c:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 8005370:	fb01 0515 	mls	r5, r1, r5, r0
 8005374:	bf98      	it	ls
 8005376:	4810      	ldrls	r0, [pc, #64]	; (80053b8 <acc_integration_log+0xb0>)
 8005378:	ea4f 1252 	mov.w	r2, r2, lsr #5
 800537c:	bf94      	ite	ls
 800537e:	5d80      	ldrbls	r0, [r0, r6]
 8005380:	203f      	movhi	r0, #63	; 0x3f
 8005382:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
 8005386:	e9cd 5000 	strd	r5, r0, [sp]
 800538a:	e9cd 7802 	strd	r7, r8, [sp, #8]
 800538e:	ebac 0282 	sub.w	r2, ip, r2, lsl #2
 8005392:	0d61      	lsrs	r1, r4, #21
 8005394:	4809      	ldr	r0, [pc, #36]	; (80053bc <acc_integration_log+0xb4>)
 8005396:	f001 fc05 	bl	8006ba4 <__wrap_printf>
 800539a:	b02c      	add	sp, #176	; 0xb0
 800539c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80053a0:	b002      	add	sp, #8
 80053a2:	4770      	bx	lr
 80053a4:	200000ac 	.word	0x200000ac
 80053a8:	45e7b273 	.word	0x45e7b273
 80053ac:	10624dd3 	.word	0x10624dd3
 80053b0:	88888889 	.word	0x88888889
 80053b4:	95217cb1 	.word	0x95217cb1
 80053b8:	0800b03c 	.word	0x0800b03c
 80053bc:	0800b018 	.word	0x0800b018

080053c0 <HAL_UART_Transmit>:
 80053c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053c4:	4604      	mov	r4, r0
 80053c6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80053c8:	2820      	cmp	r0, #32
 80053ca:	d142      	bne.n	8005452 <HAL_UART_Transmit+0x92>
 80053cc:	460d      	mov	r5, r1
 80053ce:	2900      	cmp	r1, #0
 80053d0:	d03c      	beq.n	800544c <HAL_UART_Transmit+0x8c>
 80053d2:	2a00      	cmp	r2, #0
 80053d4:	d03a      	beq.n	800544c <HAL_UART_Transmit+0x8c>
 80053d6:	461e      	mov	r6, r3
 80053d8:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 80053dc:	2b01      	cmp	r3, #1
 80053de:	d038      	beq.n	8005452 <HAL_UART_Transmit+0x92>
 80053e0:	2321      	movs	r3, #33	; 0x21
 80053e2:	2700      	movs	r7, #0
 80053e4:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
 80053e8:	67a3      	str	r3, [r4, #120]	; 0x78
 80053ea:	68a3      	ldr	r3, [r4, #8]
 80053ec:	4924      	ldr	r1, [pc, #144]	; (8005480 <HAL_UART_Transmit+0xc0>)
 80053ee:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 80053f2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80053f6:	f8d1 8000 	ldr.w	r8, [r1]
 80053fa:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80053fe:	d02b      	beq.n	8005458 <HAL_UART_Transmit+0x98>
 8005400:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 8005404:	2200      	movs	r2, #0
 8005406:	b29b      	uxth	r3, r3
 8005408:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
 800540c:	b973      	cbnz	r3, 800542c <HAL_UART_Transmit+0x6c>
 800540e:	e02c      	b.n	800546a <HAL_UART_Transmit+0xaa>
 8005410:	6823      	ldr	r3, [r4, #0]
 8005412:	f815 2b01 	ldrb.w	r2, [r5], #1
 8005416:	851a      	strh	r2, [r3, #40]	; 0x28
 8005418:	f8b4 0052 	ldrh.w	r0, [r4, #82]	; 0x52
 800541c:	3801      	subs	r0, #1
 800541e:	b280      	uxth	r0, r0
 8005420:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 8005424:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 8005428:	b289      	uxth	r1, r1
 800542a:	b1f1      	cbz	r1, 800546a <HAL_UART_Transmit+0xaa>
 800542c:	4633      	mov	r3, r6
 800542e:	4642      	mov	r2, r8
 8005430:	2180      	movs	r1, #128	; 0x80
 8005432:	4620      	mov	r0, r4
 8005434:	f7fa fef8 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8005438:	b9a0      	cbnz	r0, 8005464 <HAL_UART_Transmit+0xa4>
 800543a:	2d00      	cmp	r5, #0
 800543c:	d1e8      	bne.n	8005410 <HAL_UART_Transmit+0x50>
 800543e:	f837 3b02 	ldrh.w	r3, [r7], #2
 8005442:	6822      	ldr	r2, [r4, #0]
 8005444:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005448:	8513      	strh	r3, [r2, #40]	; 0x28
 800544a:	e7e5      	b.n	8005418 <HAL_UART_Transmit+0x58>
 800544c:	2001      	movs	r0, #1
 800544e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005452:	2002      	movs	r0, #2
 8005454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005458:	6923      	ldr	r3, [r4, #16]
 800545a:	2b00      	cmp	r3, #0
 800545c:	d1d0      	bne.n	8005400 <HAL_UART_Transmit+0x40>
 800545e:	462f      	mov	r7, r5
 8005460:	461d      	mov	r5, r3
 8005462:	e7cd      	b.n	8005400 <HAL_UART_Transmit+0x40>
 8005464:	2003      	movs	r0, #3
 8005466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800546a:	4633      	mov	r3, r6
 800546c:	4642      	mov	r2, r8
 800546e:	2140      	movs	r1, #64	; 0x40
 8005470:	4620      	mov	r0, r4
 8005472:	f7fa fed9 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8005476:	2800      	cmp	r0, #0
 8005478:	d1f4      	bne.n	8005464 <HAL_UART_Transmit+0xa4>
 800547a:	2320      	movs	r3, #32
 800547c:	67a3      	str	r3, [r4, #120]	; 0x78
 800547e:	e7e6      	b.n	800544e <HAL_UART_Transmit+0x8e>
 8005480:	200000ac 	.word	0x200000ac

08005484 <SystemInit>:
 8005484:	4a03      	ldr	r2, [pc, #12]	; (8005494 <SystemInit+0x10>)
 8005486:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800548a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800548e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8005492:	4770      	bx	lr
 8005494:	e000ed00 	.word	0xe000ed00

08005498 <RTC_Alarm_IRQHandler>:
 8005498:	b510      	push	{r4, lr}
 800549a:	4c18      	ldr	r4, [pc, #96]	; (80054fc <RTC_Alarm_IRQHandler+0x64>)
 800549c:	4a18      	ldr	r2, [pc, #96]	; (8005500 <RTC_Alarm_IRQHandler+0x68>)
 800549e:	6863      	ldr	r3, [r4, #4]
 80054a0:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 80054a4:	6151      	str	r1, [r2, #20]
 80054a6:	689a      	ldr	r2, [r3, #8]
 80054a8:	04d2      	lsls	r2, r2, #19
 80054aa:	d502      	bpl.n	80054b2 <RTC_Alarm_IRQHandler+0x1a>
 80054ac:	68da      	ldr	r2, [r3, #12]
 80054ae:	05d0      	lsls	r0, r2, #23
 80054b0:	d409      	bmi.n	80054c6 <RTC_Alarm_IRQHandler+0x2e>
 80054b2:	689a      	ldr	r2, [r3, #8]
 80054b4:	0491      	lsls	r1, r2, #18
 80054b6:	d502      	bpl.n	80054be <RTC_Alarm_IRQHandler+0x26>
 80054b8:	68da      	ldr	r2, [r3, #12]
 80054ba:	0592      	lsls	r2, r2, #22
 80054bc:	d412      	bmi.n	80054e4 <RTC_Alarm_IRQHandler+0x4c>
 80054be:	2301      	movs	r3, #1
 80054c0:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80054c4:	bd10      	pop	{r4, pc}
 80054c6:	68da      	ldr	r2, [r3, #12]
 80054c8:	b2d2      	uxtb	r2, r2
 80054ca:	f462 72c0 	orn	r2, r2, #384	; 0x180
 80054ce:	60da      	str	r2, [r3, #12]
 80054d0:	2301      	movs	r3, #1
 80054d2:	f884 3148 	strb.w	r3, [r4, #328]	; 0x148
 80054d6:	f7fd fd85 	bl	8002fe4 <HAL_RTC_DeactivateAlarm.constprop.0>
 80054da:	b960      	cbnz	r0, 80054f6 <RTC_Alarm_IRQHandler+0x5e>
 80054dc:	6863      	ldr	r3, [r4, #4]
 80054de:	f884 0148 	strb.w	r0, [r4, #328]	; 0x148
 80054e2:	e7e6      	b.n	80054b2 <RTC_Alarm_IRQHandler+0x1a>
 80054e4:	68da      	ldr	r2, [r3, #12]
 80054e6:	b2d2      	uxtb	r2, r2
 80054e8:	f462 7220 	orn	r2, r2, #640	; 0x280
 80054ec:	60da      	str	r2, [r3, #12]
 80054ee:	2301      	movs	r3, #1
 80054f0:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80054f4:	bd10      	pop	{r4, pc}
 80054f6:	f7fc fff1 	bl	80024dc <__NVIC_SystemReset>
 80054fa:	bf00      	nop
 80054fc:	200000ac 	.word	0x200000ac
 8005500:	40010400 	.word	0x40010400

08005504 <EXTI15_10_IRQHandler>:
 8005504:	4b03      	ldr	r3, [pc, #12]	; (8005514 <EXTI15_10_IRQHandler+0x10>)
 8005506:	695a      	ldr	r2, [r3, #20]
 8005508:	0512      	lsls	r2, r2, #20
 800550a:	bf44      	itt	mi
 800550c:	f44f 6200 	movmi.w	r2, #2048	; 0x800
 8005510:	615a      	strmi	r2, [r3, #20]
 8005512:	4770      	bx	lr
 8005514:	40010400 	.word	0x40010400

08005518 <USART2_IRQHandler>:
 8005518:	b570      	push	{r4, r5, r6, lr}
 800551a:	4ca9      	ldr	r4, [pc, #676]	; (80057c0 <USART2_IRQHandler+0x2a8>)
 800551c:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005520:	69da      	ldr	r2, [r3, #28]
 8005522:	6819      	ldr	r1, [r3, #0]
 8005524:	689d      	ldr	r5, [r3, #8]
 8005526:	f640 000f 	movw	r0, #2063	; 0x80f
 800552a:	4202      	tst	r2, r0
 800552c:	d14c      	bne.n	80055c8 <USART2_IRQHandler+0xb0>
 800552e:	0690      	lsls	r0, r2, #26
 8005530:	d502      	bpl.n	8005538 <USART2_IRQHandler+0x20>
 8005532:	068e      	lsls	r6, r1, #26
 8005534:	f100 80e9 	bmi.w	800570a <USART2_IRQHandler+0x1f2>
 8005538:	f8d4 01ac 	ldr.w	r0, [r4, #428]	; 0x1ac
 800553c:	2801      	cmp	r0, #1
 800553e:	d025      	beq.n	800558c <USART2_IRQHandler+0x74>
 8005540:	02d6      	lsls	r6, r2, #11
 8005542:	d502      	bpl.n	800554a <USART2_IRQHandler+0x32>
 8005544:	0268      	lsls	r0, r5, #9
 8005546:	f100 80ea 	bmi.w	800571e <USART2_IRQHandler+0x206>
 800554a:	0616      	lsls	r6, r2, #24
 800554c:	d414      	bmi.n	8005578 <USART2_IRQHandler+0x60>
 800554e:	0650      	lsls	r0, r2, #25
 8005550:	d501      	bpl.n	8005556 <USART2_IRQHandler+0x3e>
 8005552:	064a      	lsls	r2, r1, #25
 8005554:	d402      	bmi.n	800555c <USART2_IRQHandler+0x44>
 8005556:	bd70      	pop	{r4, r5, r6, pc}
 8005558:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 800555c:	e853 2f00 	ldrex	r2, [r3]
 8005560:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005564:	e843 2100 	strex	r1, r2, [r3]
 8005568:	2900      	cmp	r1, #0
 800556a:	d1f5      	bne.n	8005558 <USART2_IRQHandler+0x40>
 800556c:	2320      	movs	r3, #32
 800556e:	f8c4 11b4 	str.w	r1, [r4, #436]	; 0x1b4
 8005572:	f8c4 31c4 	str.w	r3, [r4, #452]	; 0x1c4
 8005576:	bd70      	pop	{r4, r5, r6, pc}
 8005578:	060d      	lsls	r5, r1, #24
 800557a:	d5e8      	bpl.n	800554e <USART2_IRQHandler+0x36>
 800557c:	f8d4 31b4 	ldr.w	r3, [r4, #436]	; 0x1b4
 8005580:	2b00      	cmp	r3, #0
 8005582:	d0e8      	beq.n	8005556 <USART2_IRQHandler+0x3e>
 8005584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005588:	488e      	ldr	r0, [pc, #568]	; (80057c4 <USART2_IRQHandler+0x2ac>)
 800558a:	4718      	bx	r3
 800558c:	06d6      	lsls	r6, r2, #27
 800558e:	d5d7      	bpl.n	8005540 <USART2_IRQHandler+0x28>
 8005590:	06c8      	lsls	r0, r1, #27
 8005592:	d5d5      	bpl.n	8005540 <USART2_IRQHandler+0x28>
 8005594:	2210      	movs	r2, #16
 8005596:	621a      	str	r2, [r3, #32]
 8005598:	689a      	ldr	r2, [r3, #8]
 800559a:	0651      	lsls	r1, r2, #25
 800559c:	f140 80d7 	bpl.w	800574e <USART2_IRQHandler+0x236>
 80055a0:	f8d4 21bc 	ldr.w	r2, [r4, #444]	; 0x1bc
 80055a4:	6811      	ldr	r1, [r2, #0]
 80055a6:	684a      	ldr	r2, [r1, #4]
 80055a8:	b292      	uxth	r2, r2
 80055aa:	2a00      	cmp	r2, #0
 80055ac:	d0d3      	beq.n	8005556 <USART2_IRQHandler+0x3e>
 80055ae:	f8b4 01a4 	ldrh.w	r0, [r4, #420]	; 0x1a4
 80055b2:	4290      	cmp	r0, r2
 80055b4:	d9cf      	bls.n	8005556 <USART2_IRQHandler+0x3e>
 80055b6:	f8a4 21a6 	strh.w	r2, [r4, #422]	; 0x1a6
 80055ba:	680a      	ldr	r2, [r1, #0]
 80055bc:	0692      	lsls	r2, r2, #26
 80055be:	f140 8109 	bpl.w	80057d4 <USART2_IRQHandler+0x2bc>
 80055c2:	f8b4 31a6 	ldrh.w	r3, [r4, #422]	; 0x1a6
 80055c6:	bd70      	pop	{r4, r5, r6, pc}
 80055c8:	487f      	ldr	r0, [pc, #508]	; (80057c8 <USART2_IRQHandler+0x2b0>)
 80055ca:	f005 0601 	and.w	r6, r5, #1
 80055ce:	4008      	ands	r0, r1
 80055d0:	4330      	orrs	r0, r6
 80055d2:	d0b1      	beq.n	8005538 <USART2_IRQHandler+0x20>
 80055d4:	07d5      	lsls	r5, r2, #31
 80055d6:	d509      	bpl.n	80055ec <USART2_IRQHandler+0xd4>
 80055d8:	05c8      	lsls	r0, r1, #23
 80055da:	d507      	bpl.n	80055ec <USART2_IRQHandler+0xd4>
 80055dc:	2001      	movs	r0, #1
 80055de:	6218      	str	r0, [r3, #32]
 80055e0:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80055e4:	f040 0001 	orr.w	r0, r0, #1
 80055e8:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80055ec:	0795      	lsls	r5, r2, #30
 80055ee:	d57f      	bpl.n	80056f0 <USART2_IRQHandler+0x1d8>
 80055f0:	b14e      	cbz	r6, 8005606 <USART2_IRQHandler+0xee>
 80055f2:	2002      	movs	r0, #2
 80055f4:	6218      	str	r0, [r3, #32]
 80055f6:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80055fa:	f040 0004 	orr.w	r0, r0, #4
 80055fe:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005602:	0750      	lsls	r0, r2, #29
 8005604:	d478      	bmi.n	80056f8 <USART2_IRQHandler+0x1e0>
 8005606:	0710      	lsls	r0, r2, #28
 8005608:	d50b      	bpl.n	8005622 <USART2_IRQHandler+0x10a>
 800560a:	f001 0020 	and.w	r0, r1, #32
 800560e:	4330      	orrs	r0, r6
 8005610:	d007      	beq.n	8005622 <USART2_IRQHandler+0x10a>
 8005612:	2008      	movs	r0, #8
 8005614:	6218      	str	r0, [r3, #32]
 8005616:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 800561a:	f040 0008 	orr.w	r0, r0, #8
 800561e:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005622:	0516      	lsls	r6, r2, #20
 8005624:	d50a      	bpl.n	800563c <USART2_IRQHandler+0x124>
 8005626:	014d      	lsls	r5, r1, #5
 8005628:	d508      	bpl.n	800563c <USART2_IRQHandler+0x124>
 800562a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800562e:	6218      	str	r0, [r3, #32]
 8005630:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005634:	f040 0020 	orr.w	r0, r0, #32
 8005638:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 800563c:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005640:	2800      	cmp	r0, #0
 8005642:	d088      	beq.n	8005556 <USART2_IRQHandler+0x3e>
 8005644:	0690      	lsls	r0, r2, #26
 8005646:	d501      	bpl.n	800564c <USART2_IRQHandler+0x134>
 8005648:	068a      	lsls	r2, r1, #26
 800564a:	d477      	bmi.n	800573c <USART2_IRQHandler+0x224>
 800564c:	f8d4 11cc 	ldr.w	r1, [r4, #460]	; 0x1cc
 8005650:	689a      	ldr	r2, [r3, #8]
 8005652:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8005656:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800565a:	430a      	orrs	r2, r1
 800565c:	d102      	bne.n	8005664 <USART2_IRQHandler+0x14c>
 800565e:	e0f5      	b.n	800584c <USART2_IRQHandler+0x334>
 8005660:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005664:	e853 2f00 	ldrex	r2, [r3]
 8005668:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800566c:	e843 2100 	strex	r1, r2, [r3]
 8005670:	2900      	cmp	r1, #0
 8005672:	d1f5      	bne.n	8005660 <USART2_IRQHandler+0x148>
 8005674:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005678:	f102 0308 	add.w	r3, r2, #8
 800567c:	e853 3f00 	ldrex	r3, [r3]
 8005680:	f023 0301 	bic.w	r3, r3, #1
 8005684:	3208      	adds	r2, #8
 8005686:	e842 3100 	strex	r1, r3, [r2]
 800568a:	2900      	cmp	r1, #0
 800568c:	d1f2      	bne.n	8005674 <USART2_IRQHandler+0x15c>
 800568e:	f8d4 31ac 	ldr.w	r3, [r4, #428]	; 0x1ac
 8005692:	2b01      	cmp	r3, #1
 8005694:	d047      	beq.n	8005726 <USART2_IRQHandler+0x20e>
 8005696:	2300      	movs	r3, #0
 8005698:	2120      	movs	r1, #32
 800569a:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800569e:	f8c4 11c8 	str.w	r1, [r4, #456]	; 0x1c8
 80056a2:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
 80056a6:	6891      	ldr	r1, [r2, #8]
 80056a8:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
 80056ac:	064b      	lsls	r3, r1, #25
 80056ae:	d402      	bmi.n	80056b6 <USART2_IRQHandler+0x19e>
 80056b0:	e751      	b.n	8005556 <USART2_IRQHandler+0x3e>
 80056b2:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80056b6:	f102 0308 	add.w	r3, r2, #8
 80056ba:	e853 3f00 	ldrex	r3, [r3]
 80056be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80056c2:	3208      	adds	r2, #8
 80056c4:	e842 3100 	strex	r1, r3, [r2]
 80056c8:	2900      	cmp	r1, #0
 80056ca:	d1f2      	bne.n	80056b2 <USART2_IRQHandler+0x19a>
 80056cc:	f8d4 01bc 	ldr.w	r0, [r4, #444]	; 0x1bc
 80056d0:	2800      	cmp	r0, #0
 80056d2:	f43f af40 	beq.w	8005556 <USART2_IRQHandler+0x3e>
 80056d6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80056da:	4a3c      	ldr	r2, [pc, #240]	; (80057cc <USART2_IRQHandler+0x2b4>)
 80056dc:	6382      	str	r2, [r0, #56]	; 0x38
 80056de:	2b02      	cmp	r3, #2
 80056e0:	f000 80b7 	beq.w	8005852 <USART2_IRQHandler+0x33a>
 80056e4:	2304      	movs	r3, #4
 80056e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80056ea:	63c3      	str	r3, [r0, #60]	; 0x3c
 80056ec:	f7fc b9e2 	b.w	8001ab4 <UART_DMAAbortOnError>
 80056f0:	0755      	lsls	r5, r2, #29
 80056f2:	d588      	bpl.n	8005606 <USART2_IRQHandler+0xee>
 80056f4:	2e00      	cmp	r6, #0
 80056f6:	d086      	beq.n	8005606 <USART2_IRQHandler+0xee>
 80056f8:	2004      	movs	r0, #4
 80056fa:	6218      	str	r0, [r3, #32]
 80056fc:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005700:	f040 0002 	orr.w	r0, r0, #2
 8005704:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005708:	e77d      	b.n	8005606 <USART2_IRQHandler+0xee>
 800570a:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800570e:	2b00      	cmp	r3, #0
 8005710:	f43f af21 	beq.w	8005556 <USART2_IRQHandler+0x3e>
 8005714:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
 8005718:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800571c:	4718      	bx	r3
 800571e:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8005722:	621a      	str	r2, [r3, #32]
 8005724:	bd70      	pop	{r4, r5, r6, pc}
 8005726:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800572a:	e852 3f00 	ldrex	r3, [r2]
 800572e:	f023 0310 	bic.w	r3, r3, #16
 8005732:	e842 3100 	strex	r1, r3, [r2]
 8005736:	2900      	cmp	r1, #0
 8005738:	d1f5      	bne.n	8005726 <USART2_IRQHandler+0x20e>
 800573a:	e7ac      	b.n	8005696 <USART2_IRQHandler+0x17e>
 800573c:	f8d4 21b0 	ldr.w	r2, [r4, #432]	; 0x1b0
 8005740:	2a00      	cmp	r2, #0
 8005742:	d083      	beq.n	800564c <USART2_IRQHandler+0x134>
 8005744:	481f      	ldr	r0, [pc, #124]	; (80057c4 <USART2_IRQHandler+0x2ac>)
 8005746:	4790      	blx	r2
 8005748:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 800574c:	e77e      	b.n	800564c <USART2_IRQHandler+0x134>
 800574e:	f8b4 11a6 	ldrh.w	r1, [r4, #422]	; 0x1a6
 8005752:	f8b4 21a6 	ldrh.w	r2, [r4, #422]	; 0x1a6
 8005756:	b292      	uxth	r2, r2
 8005758:	b289      	uxth	r1, r1
 800575a:	2a00      	cmp	r2, #0
 800575c:	f43f aefb 	beq.w	8005556 <USART2_IRQHandler+0x3e>
 8005760:	f8b4 21a4 	ldrh.w	r2, [r4, #420]	; 0x1a4
 8005764:	428a      	cmp	r2, r1
 8005766:	f43f aef6 	beq.w	8005556 <USART2_IRQHandler+0x3e>
 800576a:	e001      	b.n	8005770 <USART2_IRQHandler+0x258>
 800576c:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005770:	e853 2f00 	ldrex	r2, [r3]
 8005774:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005778:	e843 2100 	strex	r1, r2, [r3]
 800577c:	2900      	cmp	r1, #0
 800577e:	d1f5      	bne.n	800576c <USART2_IRQHandler+0x254>
 8005780:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005784:	f102 0308 	add.w	r3, r2, #8
 8005788:	e853 3f00 	ldrex	r3, [r3]
 800578c:	f023 0301 	bic.w	r3, r3, #1
 8005790:	3208      	adds	r2, #8
 8005792:	e842 3100 	strex	r1, r3, [r2]
 8005796:	2900      	cmp	r1, #0
 8005798:	d1f2      	bne.n	8005780 <USART2_IRQHandler+0x268>
 800579a:	2320      	movs	r3, #32
 800579c:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 80057a0:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
 80057a4:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 80057a8:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80057ac:	e852 3f00 	ldrex	r3, [r2]
 80057b0:	f023 0310 	bic.w	r3, r3, #16
 80057b4:	e842 3100 	strex	r1, r3, [r2]
 80057b8:	2900      	cmp	r1, #0
 80057ba:	d1f5      	bne.n	80057a8 <USART2_IRQHandler+0x290>
 80057bc:	bd70      	pop	{r4, r5, r6, pc}
 80057be:	bf00      	nop
 80057c0:	200000ac 	.word	0x200000ac
 80057c4:	200001f8 	.word	0x200001f8
 80057c8:	04000120 	.word	0x04000120
 80057cc:	08001ab5 	.word	0x08001ab5
 80057d0:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80057d4:	e853 2f00 	ldrex	r2, [r3]
 80057d8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80057dc:	e843 2100 	strex	r1, r2, [r3]
 80057e0:	2900      	cmp	r1, #0
 80057e2:	d1f5      	bne.n	80057d0 <USART2_IRQHandler+0x2b8>
 80057e4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80057e8:	f102 0308 	add.w	r3, r2, #8
 80057ec:	e853 3f00 	ldrex	r3, [r3]
 80057f0:	f023 0301 	bic.w	r3, r3, #1
 80057f4:	3208      	adds	r2, #8
 80057f6:	e842 3100 	strex	r1, r3, [r2]
 80057fa:	2900      	cmp	r1, #0
 80057fc:	d1f2      	bne.n	80057e4 <USART2_IRQHandler+0x2cc>
 80057fe:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005802:	f102 0308 	add.w	r3, r2, #8
 8005806:	e853 3f00 	ldrex	r3, [r3]
 800580a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800580e:	3208      	adds	r2, #8
 8005810:	e842 3100 	strex	r1, r3, [r2]
 8005814:	2900      	cmp	r1, #0
 8005816:	d1f2      	bne.n	80057fe <USART2_IRQHandler+0x2e6>
 8005818:	2320      	movs	r3, #32
 800581a:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 800581e:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 8005822:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005826:	e852 3f00 	ldrex	r3, [r2]
 800582a:	f023 0310 	bic.w	r3, r3, #16
 800582e:	e842 3100 	strex	r1, r3, [r2]
 8005832:	2900      	cmp	r1, #0
 8005834:	d1f5      	bne.n	8005822 <USART2_IRQHandler+0x30a>
 8005836:	f8d4 31bc 	ldr.w	r3, [r4, #444]	; 0x1bc
 800583a:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800583e:	2a02      	cmp	r2, #2
 8005840:	d020      	beq.n	8005884 <USART2_IRQHandler+0x36c>
 8005842:	2204      	movs	r2, #4
 8005844:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8005848:	63da      	str	r2, [r3, #60]	; 0x3c
 800584a:	e6ba      	b.n	80055c2 <USART2_IRQHandler+0xaa>
 800584c:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
 8005850:	bd70      	pop	{r4, r5, r6, pc}
 8005852:	6802      	ldr	r2, [r0, #0]
 8005854:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8005856:	6814      	ldr	r4, [r2, #0]
 8005858:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800585a:	f024 040e 	bic.w	r4, r4, #14
 800585e:	6014      	str	r4, [r2, #0]
 8005860:	6814      	ldr	r4, [r2, #0]
 8005862:	f024 0401 	bic.w	r4, r4, #1
 8005866:	6014      	str	r4, [r2, #0]
 8005868:	f003 031c 	and.w	r3, r3, #28
 800586c:	2201      	movs	r2, #1
 800586e:	fa02 f303 	lsl.w	r3, r2, r3
 8005872:	606b      	str	r3, [r5, #4]
 8005874:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8005878:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800587c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005880:	f7fc b918 	b.w	8001ab4 <UART_DMAAbortOnError>
 8005884:	6818      	ldr	r0, [r3, #0]
 8005886:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005888:	6805      	ldr	r5, [r0, #0]
 800588a:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800588c:	f025 050e 	bic.w	r5, r5, #14
 8005890:	6005      	str	r5, [r0, #0]
 8005892:	6805      	ldr	r5, [r0, #0]
 8005894:	f025 0501 	bic.w	r5, r5, #1
 8005898:	6005      	str	r5, [r0, #0]
 800589a:	f002 021c 	and.w	r2, r2, #28
 800589e:	2001      	movs	r0, #1
 80058a0:	fa00 f202 	lsl.w	r2, r0, r2
 80058a4:	6072      	str	r2, [r6, #4]
 80058a6:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 80058aa:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80058ae:	e688      	b.n	80055c2 <USART2_IRQHandler+0xaa>

080058b0 <I2C2_EV_IRQHandler>:
 80058b0:	4808      	ldr	r0, [pc, #32]	; (80058d4 <I2C2_EV_IRQHandler+0x24>)
 80058b2:	b410      	push	{r4}
 80058b4:	f8d0 31d0 	ldr.w	r3, [r0, #464]	; 0x1d0
 80058b8:	f8d0 4204 	ldr.w	r4, [r0, #516]	; 0x204
 80058bc:	6999      	ldr	r1, [r3, #24]
 80058be:	681a      	ldr	r2, [r3, #0]
 80058c0:	b12c      	cbz	r4, 80058ce <I2C2_EV_IRQHandler+0x1e>
 80058c2:	4623      	mov	r3, r4
 80058c4:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
 80058c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80058cc:	4718      	bx	r3
 80058ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80058d2:	4770      	bx	lr
 80058d4:	200000ac 	.word	0x200000ac

080058d8 <DMA1_Channel7_IRQHandler>:
 80058d8:	4801      	ldr	r0, [pc, #4]	; (80058e0 <DMA1_Channel7_IRQHandler+0x8>)
 80058da:	f7fc bd35 	b.w	8002348 <HAL_DMA_IRQHandler>
 80058de:	bf00      	nop
 80058e0:	20000148 	.word	0x20000148

080058e4 <DMA1_Channel6_IRQHandler>:
 80058e4:	4801      	ldr	r0, [pc, #4]	; (80058ec <DMA1_Channel6_IRQHandler+0x8>)
 80058e6:	f7fc bd2f 	b.w	8002348 <HAL_DMA_IRQHandler>
 80058ea:	bf00      	nop
 80058ec:	20000100 	.word	0x20000100

080058f0 <DMA1_Channel3_IRQHandler>:
 80058f0:	4801      	ldr	r0, [pc, #4]	; (80058f8 <DMA1_Channel3_IRQHandler+0x8>)
 80058f2:	f7fc bd29 	b.w	8002348 <HAL_DMA_IRQHandler>
 80058f6:	bf00      	nop
 80058f8:	200002d0 	.word	0x200002d0

080058fc <DMA1_Channel2_IRQHandler>:
 80058fc:	4801      	ldr	r0, [pc, #4]	; (8005904 <DMA1_Channel2_IRQHandler+0x8>)
 80058fe:	f7fc bd23 	b.w	8002348 <HAL_DMA_IRQHandler>
 8005902:	bf00      	nop
 8005904:	20000318 	.word	0x20000318

08005908 <EXTI3_IRQHandler>:
 8005908:	4b03      	ldr	r3, [pc, #12]	; (8005918 <EXTI3_IRQHandler+0x10>)
 800590a:	695a      	ldr	r2, [r3, #20]
 800590c:	0712      	lsls	r2, r2, #28
 800590e:	bf44      	itt	mi
 8005910:	2208      	movmi	r2, #8
 8005912:	615a      	strmi	r2, [r3, #20]
 8005914:	4770      	bx	lr
 8005916:	bf00      	nop
 8005918:	40010400 	.word	0x40010400

0800591c <RTC_WKUP_IRQHandler>:
 800591c:	4b0c      	ldr	r3, [pc, #48]	; (8005950 <RTC_WKUP_IRQHandler+0x34>)
 800591e:	490d      	ldr	r1, [pc, #52]	; (8005954 <RTC_WKUP_IRQHandler+0x38>)
 8005920:	685a      	ldr	r2, [r3, #4]
 8005922:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8005926:	6148      	str	r0, [r1, #20]
 8005928:	68d1      	ldr	r1, [r2, #12]
 800592a:	0549      	lsls	r1, r1, #21
 800592c:	d403      	bmi.n	8005936 <RTC_WKUP_IRQHandler+0x1a>
 800592e:	2201      	movs	r2, #1
 8005930:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8005934:	4770      	bx	lr
 8005936:	68d1      	ldr	r1, [r2, #12]
 8005938:	b2c9      	uxtb	r1, r1
 800593a:	f461 6190 	orn	r1, r1, #1152	; 0x480
 800593e:	60d1      	str	r1, [r2, #12]
 8005940:	2001      	movs	r0, #1
 8005942:	2201      	movs	r2, #1
 8005944:	f883 0051 	strb.w	r0, [r3, #81]	; 0x51
 8005948:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800594c:	4770      	bx	lr
 800594e:	bf00      	nop
 8005950:	200000ac 	.word	0x200000ac
 8005954:	40010400 	.word	0x40010400

08005958 <SysTick_Handler>:
 8005958:	4a02      	ldr	r2, [pc, #8]	; (8005964 <SysTick_Handler+0xc>)
 800595a:	6813      	ldr	r3, [r2, #0]
 800595c:	3301      	adds	r3, #1
 800595e:	6013      	str	r3, [r2, #0]
 8005960:	4770      	bx	lr
 8005962:	bf00      	nop
 8005964:	200000ac 	.word	0x200000ac

08005968 <PendSV_Handler>:
 8005968:	4770      	bx	lr
 800596a:	bf00      	nop

0800596c <SVC_Handler>:
 800596c:	4770      	bx	lr
 800596e:	bf00      	nop

08005970 <DebugMon_Handler>:
 8005970:	4770      	bx	lr
 8005972:	bf00      	nop

08005974 <UsageFault_Handler>:
 8005974:	e7fe      	b.n	8005974 <UsageFault_Handler>
 8005976:	bf00      	nop

08005978 <BusFault_Handler>:
 8005978:	e7fe      	b.n	8005978 <BusFault_Handler>
 800597a:	bf00      	nop

0800597c <MemManage_Handler>:
 800597c:	e7fe      	b.n	800597c <MemManage_Handler>
 800597e:	bf00      	nop

08005980 <HardFault_Handler>:
 8005980:	e7fe      	b.n	8005980 <HardFault_Handler>
 8005982:	bf00      	nop

08005984 <NMI_Handler>:
 8005984:	e7fe      	b.n	8005984 <NMI_Handler>
 8005986:	bf00      	nop

08005988 <strlen>:
 8005988:	4603      	mov	r3, r0
 800598a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800598e:	2a00      	cmp	r2, #0
 8005990:	d1fb      	bne.n	800598a <strlen+0x2>
 8005992:	1a18      	subs	r0, r3, r0
 8005994:	3801      	subs	r0, #1
 8005996:	4770      	bx	lr

08005998 <__aeabi_uldivmod>:
 8005998:	b953      	cbnz	r3, 80059b0 <__aeabi_uldivmod+0x18>
 800599a:	b94a      	cbnz	r2, 80059b0 <__aeabi_uldivmod+0x18>
 800599c:	2900      	cmp	r1, #0
 800599e:	bf08      	it	eq
 80059a0:	2800      	cmpeq	r0, #0
 80059a2:	bf1c      	itt	ne
 80059a4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80059a8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80059ac:	f000 b96e 	b.w	8005c8c <__aeabi_idiv0>
 80059b0:	f1ad 0c08 	sub.w	ip, sp, #8
 80059b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80059b8:	f000 f806 	bl	80059c8 <__udivmoddi4>
 80059bc:	f8dd e004 	ldr.w	lr, [sp, #4]
 80059c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80059c4:	b004      	add	sp, #16
 80059c6:	4770      	bx	lr

080059c8 <__udivmoddi4>:
 80059c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059cc:	9d08      	ldr	r5, [sp, #32]
 80059ce:	4604      	mov	r4, r0
 80059d0:	468c      	mov	ip, r1
 80059d2:	2b00      	cmp	r3, #0
 80059d4:	f040 8083 	bne.w	8005ade <__udivmoddi4+0x116>
 80059d8:	428a      	cmp	r2, r1
 80059da:	4617      	mov	r7, r2
 80059dc:	d947      	bls.n	8005a6e <__udivmoddi4+0xa6>
 80059de:	fab2 f282 	clz	r2, r2
 80059e2:	b142      	cbz	r2, 80059f6 <__udivmoddi4+0x2e>
 80059e4:	f1c2 0020 	rsb	r0, r2, #32
 80059e8:	fa24 f000 	lsr.w	r0, r4, r0
 80059ec:	4091      	lsls	r1, r2
 80059ee:	4097      	lsls	r7, r2
 80059f0:	ea40 0c01 	orr.w	ip, r0, r1
 80059f4:	4094      	lsls	r4, r2
 80059f6:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80059fa:	0c23      	lsrs	r3, r4, #16
 80059fc:	fbbc f6f8 	udiv	r6, ip, r8
 8005a00:	fa1f fe87 	uxth.w	lr, r7
 8005a04:	fb08 c116 	mls	r1, r8, r6, ip
 8005a08:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005a0c:	fb06 f10e 	mul.w	r1, r6, lr
 8005a10:	4299      	cmp	r1, r3
 8005a12:	d909      	bls.n	8005a28 <__udivmoddi4+0x60>
 8005a14:	18fb      	adds	r3, r7, r3
 8005a16:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8005a1a:	f080 8119 	bcs.w	8005c50 <__udivmoddi4+0x288>
 8005a1e:	4299      	cmp	r1, r3
 8005a20:	f240 8116 	bls.w	8005c50 <__udivmoddi4+0x288>
 8005a24:	3e02      	subs	r6, #2
 8005a26:	443b      	add	r3, r7
 8005a28:	1a5b      	subs	r3, r3, r1
 8005a2a:	b2a4      	uxth	r4, r4
 8005a2c:	fbb3 f0f8 	udiv	r0, r3, r8
 8005a30:	fb08 3310 	mls	r3, r8, r0, r3
 8005a34:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8005a38:	fb00 fe0e 	mul.w	lr, r0, lr
 8005a3c:	45a6      	cmp	lr, r4
 8005a3e:	d909      	bls.n	8005a54 <__udivmoddi4+0x8c>
 8005a40:	193c      	adds	r4, r7, r4
 8005a42:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8005a46:	f080 8105 	bcs.w	8005c54 <__udivmoddi4+0x28c>
 8005a4a:	45a6      	cmp	lr, r4
 8005a4c:	f240 8102 	bls.w	8005c54 <__udivmoddi4+0x28c>
 8005a50:	3802      	subs	r0, #2
 8005a52:	443c      	add	r4, r7
 8005a54:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8005a58:	eba4 040e 	sub.w	r4, r4, lr
 8005a5c:	2600      	movs	r6, #0
 8005a5e:	b11d      	cbz	r5, 8005a68 <__udivmoddi4+0xa0>
 8005a60:	40d4      	lsrs	r4, r2
 8005a62:	2300      	movs	r3, #0
 8005a64:	e9c5 4300 	strd	r4, r3, [r5]
 8005a68:	4631      	mov	r1, r6
 8005a6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a6e:	b902      	cbnz	r2, 8005a72 <__udivmoddi4+0xaa>
 8005a70:	deff      	udf	#255	; 0xff
 8005a72:	fab2 f282 	clz	r2, r2
 8005a76:	2a00      	cmp	r2, #0
 8005a78:	d150      	bne.n	8005b1c <__udivmoddi4+0x154>
 8005a7a:	1bcb      	subs	r3, r1, r7
 8005a7c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8005a80:	fa1f f887 	uxth.w	r8, r7
 8005a84:	2601      	movs	r6, #1
 8005a86:	fbb3 fcfe 	udiv	ip, r3, lr
 8005a8a:	0c21      	lsrs	r1, r4, #16
 8005a8c:	fb0e 331c 	mls	r3, lr, ip, r3
 8005a90:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005a94:	fb08 f30c 	mul.w	r3, r8, ip
 8005a98:	428b      	cmp	r3, r1
 8005a9a:	d907      	bls.n	8005aac <__udivmoddi4+0xe4>
 8005a9c:	1879      	adds	r1, r7, r1
 8005a9e:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8005aa2:	d202      	bcs.n	8005aaa <__udivmoddi4+0xe2>
 8005aa4:	428b      	cmp	r3, r1
 8005aa6:	f200 80e9 	bhi.w	8005c7c <__udivmoddi4+0x2b4>
 8005aaa:	4684      	mov	ip, r0
 8005aac:	1ac9      	subs	r1, r1, r3
 8005aae:	b2a3      	uxth	r3, r4
 8005ab0:	fbb1 f0fe 	udiv	r0, r1, lr
 8005ab4:	fb0e 1110 	mls	r1, lr, r0, r1
 8005ab8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8005abc:	fb08 f800 	mul.w	r8, r8, r0
 8005ac0:	45a0      	cmp	r8, r4
 8005ac2:	d907      	bls.n	8005ad4 <__udivmoddi4+0x10c>
 8005ac4:	193c      	adds	r4, r7, r4
 8005ac6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8005aca:	d202      	bcs.n	8005ad2 <__udivmoddi4+0x10a>
 8005acc:	45a0      	cmp	r8, r4
 8005ace:	f200 80d9 	bhi.w	8005c84 <__udivmoddi4+0x2bc>
 8005ad2:	4618      	mov	r0, r3
 8005ad4:	eba4 0408 	sub.w	r4, r4, r8
 8005ad8:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8005adc:	e7bf      	b.n	8005a5e <__udivmoddi4+0x96>
 8005ade:	428b      	cmp	r3, r1
 8005ae0:	d909      	bls.n	8005af6 <__udivmoddi4+0x12e>
 8005ae2:	2d00      	cmp	r5, #0
 8005ae4:	f000 80b1 	beq.w	8005c4a <__udivmoddi4+0x282>
 8005ae8:	2600      	movs	r6, #0
 8005aea:	e9c5 0100 	strd	r0, r1, [r5]
 8005aee:	4630      	mov	r0, r6
 8005af0:	4631      	mov	r1, r6
 8005af2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005af6:	fab3 f683 	clz	r6, r3
 8005afa:	2e00      	cmp	r6, #0
 8005afc:	d14a      	bne.n	8005b94 <__udivmoddi4+0x1cc>
 8005afe:	428b      	cmp	r3, r1
 8005b00:	d302      	bcc.n	8005b08 <__udivmoddi4+0x140>
 8005b02:	4282      	cmp	r2, r0
 8005b04:	f200 80b8 	bhi.w	8005c78 <__udivmoddi4+0x2b0>
 8005b08:	1a84      	subs	r4, r0, r2
 8005b0a:	eb61 0103 	sbc.w	r1, r1, r3
 8005b0e:	2001      	movs	r0, #1
 8005b10:	468c      	mov	ip, r1
 8005b12:	2d00      	cmp	r5, #0
 8005b14:	d0a8      	beq.n	8005a68 <__udivmoddi4+0xa0>
 8005b16:	e9c5 4c00 	strd	r4, ip, [r5]
 8005b1a:	e7a5      	b.n	8005a68 <__udivmoddi4+0xa0>
 8005b1c:	f1c2 0320 	rsb	r3, r2, #32
 8005b20:	fa20 f603 	lsr.w	r6, r0, r3
 8005b24:	4097      	lsls	r7, r2
 8005b26:	fa01 f002 	lsl.w	r0, r1, r2
 8005b2a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8005b2e:	40d9      	lsrs	r1, r3
 8005b30:	4330      	orrs	r0, r6
 8005b32:	0c03      	lsrs	r3, r0, #16
 8005b34:	fbb1 f6fe 	udiv	r6, r1, lr
 8005b38:	fa1f f887 	uxth.w	r8, r7
 8005b3c:	fb0e 1116 	mls	r1, lr, r6, r1
 8005b40:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005b44:	fb06 f108 	mul.w	r1, r6, r8
 8005b48:	4299      	cmp	r1, r3
 8005b4a:	fa04 f402 	lsl.w	r4, r4, r2
 8005b4e:	d909      	bls.n	8005b64 <__udivmoddi4+0x19c>
 8005b50:	18fb      	adds	r3, r7, r3
 8005b52:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8005b56:	f080 808d 	bcs.w	8005c74 <__udivmoddi4+0x2ac>
 8005b5a:	4299      	cmp	r1, r3
 8005b5c:	f240 808a 	bls.w	8005c74 <__udivmoddi4+0x2ac>
 8005b60:	3e02      	subs	r6, #2
 8005b62:	443b      	add	r3, r7
 8005b64:	1a5b      	subs	r3, r3, r1
 8005b66:	b281      	uxth	r1, r0
 8005b68:	fbb3 f0fe 	udiv	r0, r3, lr
 8005b6c:	fb0e 3310 	mls	r3, lr, r0, r3
 8005b70:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005b74:	fb00 f308 	mul.w	r3, r0, r8
 8005b78:	428b      	cmp	r3, r1
 8005b7a:	d907      	bls.n	8005b8c <__udivmoddi4+0x1c4>
 8005b7c:	1879      	adds	r1, r7, r1
 8005b7e:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8005b82:	d273      	bcs.n	8005c6c <__udivmoddi4+0x2a4>
 8005b84:	428b      	cmp	r3, r1
 8005b86:	d971      	bls.n	8005c6c <__udivmoddi4+0x2a4>
 8005b88:	3802      	subs	r0, #2
 8005b8a:	4439      	add	r1, r7
 8005b8c:	1acb      	subs	r3, r1, r3
 8005b8e:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8005b92:	e778      	b.n	8005a86 <__udivmoddi4+0xbe>
 8005b94:	f1c6 0c20 	rsb	ip, r6, #32
 8005b98:	fa03 f406 	lsl.w	r4, r3, r6
 8005b9c:	fa22 f30c 	lsr.w	r3, r2, ip
 8005ba0:	431c      	orrs	r4, r3
 8005ba2:	fa20 f70c 	lsr.w	r7, r0, ip
 8005ba6:	fa01 f306 	lsl.w	r3, r1, r6
 8005baa:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8005bae:	fa21 f10c 	lsr.w	r1, r1, ip
 8005bb2:	431f      	orrs	r7, r3
 8005bb4:	0c3b      	lsrs	r3, r7, #16
 8005bb6:	fbb1 f9fe 	udiv	r9, r1, lr
 8005bba:	fa1f f884 	uxth.w	r8, r4
 8005bbe:	fb0e 1119 	mls	r1, lr, r9, r1
 8005bc2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8005bc6:	fb09 fa08 	mul.w	sl, r9, r8
 8005bca:	458a      	cmp	sl, r1
 8005bcc:	fa02 f206 	lsl.w	r2, r2, r6
 8005bd0:	fa00 f306 	lsl.w	r3, r0, r6
 8005bd4:	d908      	bls.n	8005be8 <__udivmoddi4+0x220>
 8005bd6:	1861      	adds	r1, r4, r1
 8005bd8:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8005bdc:	d248      	bcs.n	8005c70 <__udivmoddi4+0x2a8>
 8005bde:	458a      	cmp	sl, r1
 8005be0:	d946      	bls.n	8005c70 <__udivmoddi4+0x2a8>
 8005be2:	f1a9 0902 	sub.w	r9, r9, #2
 8005be6:	4421      	add	r1, r4
 8005be8:	eba1 010a 	sub.w	r1, r1, sl
 8005bec:	b2bf      	uxth	r7, r7
 8005bee:	fbb1 f0fe 	udiv	r0, r1, lr
 8005bf2:	fb0e 1110 	mls	r1, lr, r0, r1
 8005bf6:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8005bfa:	fb00 f808 	mul.w	r8, r0, r8
 8005bfe:	45b8      	cmp	r8, r7
 8005c00:	d907      	bls.n	8005c12 <__udivmoddi4+0x24a>
 8005c02:	19e7      	adds	r7, r4, r7
 8005c04:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8005c08:	d22e      	bcs.n	8005c68 <__udivmoddi4+0x2a0>
 8005c0a:	45b8      	cmp	r8, r7
 8005c0c:	d92c      	bls.n	8005c68 <__udivmoddi4+0x2a0>
 8005c0e:	3802      	subs	r0, #2
 8005c10:	4427      	add	r7, r4
 8005c12:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8005c16:	eba7 0708 	sub.w	r7, r7, r8
 8005c1a:	fba0 8902 	umull	r8, r9, r0, r2
 8005c1e:	454f      	cmp	r7, r9
 8005c20:	46c6      	mov	lr, r8
 8005c22:	4649      	mov	r1, r9
 8005c24:	d31a      	bcc.n	8005c5c <__udivmoddi4+0x294>
 8005c26:	d017      	beq.n	8005c58 <__udivmoddi4+0x290>
 8005c28:	b15d      	cbz	r5, 8005c42 <__udivmoddi4+0x27a>
 8005c2a:	ebb3 020e 	subs.w	r2, r3, lr
 8005c2e:	eb67 0701 	sbc.w	r7, r7, r1
 8005c32:	fa07 fc0c 	lsl.w	ip, r7, ip
 8005c36:	40f2      	lsrs	r2, r6
 8005c38:	ea4c 0202 	orr.w	r2, ip, r2
 8005c3c:	40f7      	lsrs	r7, r6
 8005c3e:	e9c5 2700 	strd	r2, r7, [r5]
 8005c42:	2600      	movs	r6, #0
 8005c44:	4631      	mov	r1, r6
 8005c46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c4a:	462e      	mov	r6, r5
 8005c4c:	4628      	mov	r0, r5
 8005c4e:	e70b      	b.n	8005a68 <__udivmoddi4+0xa0>
 8005c50:	4606      	mov	r6, r0
 8005c52:	e6e9      	b.n	8005a28 <__udivmoddi4+0x60>
 8005c54:	4618      	mov	r0, r3
 8005c56:	e6fd      	b.n	8005a54 <__udivmoddi4+0x8c>
 8005c58:	4543      	cmp	r3, r8
 8005c5a:	d2e5      	bcs.n	8005c28 <__udivmoddi4+0x260>
 8005c5c:	ebb8 0e02 	subs.w	lr, r8, r2
 8005c60:	eb69 0104 	sbc.w	r1, r9, r4
 8005c64:	3801      	subs	r0, #1
 8005c66:	e7df      	b.n	8005c28 <__udivmoddi4+0x260>
 8005c68:	4608      	mov	r0, r1
 8005c6a:	e7d2      	b.n	8005c12 <__udivmoddi4+0x24a>
 8005c6c:	4660      	mov	r0, ip
 8005c6e:	e78d      	b.n	8005b8c <__udivmoddi4+0x1c4>
 8005c70:	4681      	mov	r9, r0
 8005c72:	e7b9      	b.n	8005be8 <__udivmoddi4+0x220>
 8005c74:	4666      	mov	r6, ip
 8005c76:	e775      	b.n	8005b64 <__udivmoddi4+0x19c>
 8005c78:	4630      	mov	r0, r6
 8005c7a:	e74a      	b.n	8005b12 <__udivmoddi4+0x14a>
 8005c7c:	f1ac 0c02 	sub.w	ip, ip, #2
 8005c80:	4439      	add	r1, r7
 8005c82:	e713      	b.n	8005aac <__udivmoddi4+0xe4>
 8005c84:	3802      	subs	r0, #2
 8005c86:	443c      	add	r4, r7
 8005c88:	e724      	b.n	8005ad4 <__udivmoddi4+0x10c>
 8005c8a:	bf00      	nop

08005c8c <__aeabi_idiv0>:
 8005c8c:	4770      	bx	lr
 8005c8e:	bf00      	nop

08005c90 <main>:
 8005c90:	4945      	ldr	r1, [pc, #276]	; (8005da8 <main+0x118>)
 8005c92:	4b46      	ldr	r3, [pc, #280]	; (8005dac <main+0x11c>)
 8005c94:	68ca      	ldr	r2, [r1, #12]
 8005c96:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005c9a:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
 8005c9e:	4002      	ands	r2, r0
 8005ca0:	4313      	orrs	r3, r2
 8005ca2:	b0d1      	sub	sp, #324	; 0x144
 8005ca4:	60cb      	str	r3, [r1, #12]
 8005ca6:	200f      	movs	r0, #15
 8005ca8:	f7fc fbee 	bl	8002488 <HAL_InitTick>
 8005cac:	2800      	cmp	r0, #0
 8005cae:	f000 8305 	beq.w	80062bc <main+0x62c>
 8005cb2:	4a3f      	ldr	r2, [pc, #252]	; (8005db0 <main+0x120>)
 8005cb4:	6813      	ldr	r3, [r2, #0]
 8005cb6:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005cba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005cbe:	d01e      	beq.n	8005cfe <main+0x6e>
 8005cc0:	6813      	ldr	r3, [r2, #0]
 8005cc2:	493c      	ldr	r1, [pc, #240]	; (8005db4 <main+0x124>)
 8005cc4:	483c      	ldr	r0, [pc, #240]	; (8005db8 <main+0x128>)
 8005cc6:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005cca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005cce:	6013      	str	r3, [r2, #0]
 8005cd0:	680c      	ldr	r4, [r1, #0]
 8005cd2:	6951      	ldr	r1, [r2, #20]
 8005cd4:	2332      	movs	r3, #50	; 0x32
 8005cd6:	fb03 f304 	mul.w	r3, r3, r4
 8005cda:	fbb3 f3f0 	udiv	r3, r3, r0
 8005cde:	0548      	lsls	r0, r1, #21
 8005ce0:	f103 0301 	add.w	r3, r3, #1
 8005ce4:	d506      	bpl.n	8005cf4 <main+0x64>
 8005ce6:	e000      	b.n	8005cea <main+0x5a>
 8005ce8:	b123      	cbz	r3, 8005cf4 <main+0x64>
 8005cea:	6951      	ldr	r1, [r2, #20]
 8005cec:	0549      	lsls	r1, r1, #21
 8005cee:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8005cf2:	d4f9      	bmi.n	8005ce8 <main+0x58>
 8005cf4:	4b2e      	ldr	r3, [pc, #184]	; (8005db0 <main+0x120>)
 8005cf6:	695b      	ldr	r3, [r3, #20]
 8005cf8:	055f      	lsls	r7, r3, #21
 8005cfa:	f100 82dd 	bmi.w	80062b8 <main+0x628>
 8005cfe:	4b2f      	ldr	r3, [pc, #188]	; (8005dbc <main+0x12c>)
 8005d00:	6899      	ldr	r1, [r3, #8]
 8005d02:	68db      	ldr	r3, [r3, #12]
 8005d04:	f001 010c 	and.w	r1, r1, #12
 8005d08:	2904      	cmp	r1, #4
 8005d0a:	f000 82f0 	beq.w	80062ee <main+0x65e>
 8005d0e:	290c      	cmp	r1, #12
 8005d10:	f000 82e8 	beq.w	80062e4 <main+0x654>
 8005d14:	4b29      	ldr	r3, [pc, #164]	; (8005dbc <main+0x12c>)
 8005d16:	4c2a      	ldr	r4, [pc, #168]	; (8005dc0 <main+0x130>)
 8005d18:	681a      	ldr	r2, [r3, #0]
 8005d1a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005d1e:	601a      	str	r2, [r3, #0]
 8005d20:	6820      	ldr	r0, [r4, #0]
 8005d22:	e004      	b.n	8005d2e <main+0x9e>
 8005d24:	6822      	ldr	r2, [r4, #0]
 8005d26:	1a12      	subs	r2, r2, r0
 8005d28:	2a02      	cmp	r2, #2
 8005d2a:	f200 82c5 	bhi.w	80062b8 <main+0x628>
 8005d2e:	681a      	ldr	r2, [r3, #0]
 8005d30:	0556      	lsls	r6, r2, #21
 8005d32:	d5f7      	bpl.n	8005d24 <main+0x94>
 8005d34:	685a      	ldr	r2, [r3, #4]
 8005d36:	f022 52f8 	bic.w	r2, r2, #520093696	; 0x1f000000
 8005d3a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005d3e:	605a      	str	r2, [r3, #4]
 8005d40:	e2de      	b.n	8006300 <main+0x670>
 8005d42:	f402 40fe 	and.w	r0, r2, #32512	; 0x7f00
 8005d46:	f5b0 6f20 	cmp.w	r0, #2560	; 0xa00
 8005d4a:	f040 82f0 	bne.w	800632e <main+0x69e>
 8005d4e:	f002 4078 	and.w	r0, r2, #4160749568	; 0xf8000000
 8005d52:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
 8005d56:	f040 82ea 	bne.w	800632e <main+0x69e>
 8005d5a:	481a      	ldr	r0, [pc, #104]	; (8005dc4 <main+0x134>)
 8005d5c:	4202      	tst	r2, r0
 8005d5e:	f040 82e6 	bne.w	800632e <main+0x69e>
 8005d62:	681a      	ldr	r2, [r3, #0]
 8005d64:	0195      	lsls	r5, r2, #6
 8005d66:	f140 83e1 	bpl.w	800652c <main+0x89c>
 8005d6a:	4a17      	ldr	r2, [pc, #92]	; (8005dc8 <main+0x138>)
 8005d6c:	6813      	ldr	r3, [r2, #0]
 8005d6e:	0759      	lsls	r1, r3, #29
 8005d70:	d40b      	bmi.n	8005d8a <main+0xfa>
 8005d72:	6813      	ldr	r3, [r2, #0]
 8005d74:	f023 0307 	bic.w	r3, r3, #7
 8005d78:	f043 0304 	orr.w	r3, r3, #4
 8005d7c:	6013      	str	r3, [r2, #0]
 8005d7e:	6813      	ldr	r3, [r2, #0]
 8005d80:	f003 0307 	and.w	r3, r3, #7
 8005d84:	2b04      	cmp	r3, #4
 8005d86:	f040 8297 	bne.w	80062b8 <main+0x628>
 8005d8a:	4b0c      	ldr	r3, [pc, #48]	; (8005dbc <main+0x12c>)
 8005d8c:	689a      	ldr	r2, [r3, #8]
 8005d8e:	681a      	ldr	r2, [r3, #0]
 8005d90:	0192      	lsls	r2, r2, #6
 8005d92:	f140 8291 	bpl.w	80062b8 <main+0x628>
 8005d96:	689a      	ldr	r2, [r3, #8]
 8005d98:	f042 0203 	orr.w	r2, r2, #3
 8005d9c:	609a      	str	r2, [r3, #8]
 8005d9e:	6820      	ldr	r0, [r4, #0]
 8005da0:	f241 3188 	movw	r1, #5000	; 0x1388
 8005da4:	e017      	b.n	8005dd6 <main+0x146>
 8005da6:	bf00      	nop
 8005da8:	e000ed00 	.word	0xe000ed00
 8005dac:	05fa0300 	.word	0x05fa0300
 8005db0:	40007000 	.word	0x40007000
 8005db4:	20000000 	.word	0x20000000
 8005db8:	000f4240 	.word	0x000f4240
 8005dbc:	40021000 	.word	0x40021000
 8005dc0:	200000ac 	.word	0x200000ac
 8005dc4:	06600070 	.word	0x06600070
 8005dc8:	40022000 	.word	0x40022000
 8005dcc:	6822      	ldr	r2, [r4, #0]
 8005dce:	1a12      	subs	r2, r2, r0
 8005dd0:	428a      	cmp	r2, r1
 8005dd2:	f200 8271 	bhi.w	80062b8 <main+0x628>
 8005dd6:	689a      	ldr	r2, [r3, #8]
 8005dd8:	f002 020c 	and.w	r2, r2, #12
 8005ddc:	2a0c      	cmp	r2, #12
 8005dde:	d1f5      	bne.n	8005dcc <main+0x13c>
 8005de0:	689a      	ldr	r2, [r3, #8]
 8005de2:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 8005de6:	d003      	beq.n	8005df0 <main+0x160>
 8005de8:	689a      	ldr	r2, [r3, #8]
 8005dea:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005dee:	609a      	str	r2, [r3, #8]
 8005df0:	4a9b      	ldr	r2, [pc, #620]	; (8006060 <main+0x3d0>)
 8005df2:	6813      	ldr	r3, [r2, #0]
 8005df4:	f003 0307 	and.w	r3, r3, #7
 8005df8:	2b04      	cmp	r3, #4
 8005dfa:	d90b      	bls.n	8005e14 <main+0x184>
 8005dfc:	6813      	ldr	r3, [r2, #0]
 8005dfe:	f023 0307 	bic.w	r3, r3, #7
 8005e02:	f043 0304 	orr.w	r3, r3, #4
 8005e06:	6013      	str	r3, [r2, #0]
 8005e08:	6813      	ldr	r3, [r2, #0]
 8005e0a:	f003 0307 	and.w	r3, r3, #7
 8005e0e:	2b04      	cmp	r3, #4
 8005e10:	f040 8252 	bne.w	80062b8 <main+0x628>
 8005e14:	4d93      	ldr	r5, [pc, #588]	; (8006064 <main+0x3d4>)
 8005e16:	4e94      	ldr	r6, [pc, #592]	; (8006068 <main+0x3d8>)
 8005e18:	68ab      	ldr	r3, [r5, #8]
 8005e1a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005e1e:	60ab      	str	r3, [r5, #8]
 8005e20:	68ab      	ldr	r3, [r5, #8]
 8005e22:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8005e26:	60ab      	str	r3, [r5, #8]
 8005e28:	f7fc f94c 	bl	80020c4 <HAL_RCC_GetSysClockFreq>
 8005e2c:	68a9      	ldr	r1, [r5, #8]
 8005e2e:	4a8f      	ldr	r2, [pc, #572]	; (800606c <main+0x3dc>)
 8005e30:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8005e34:	440a      	add	r2, r1
 8005e36:	4603      	mov	r3, r0
 8005e38:	f892 2f90 	ldrb.w	r2, [r2, #3984]	; 0xf90
 8005e3c:	6870      	ldr	r0, [r6, #4]
 8005e3e:	f002 021f 	and.w	r2, r2, #31
 8005e42:	40d3      	lsrs	r3, r2
 8005e44:	6033      	str	r3, [r6, #0]
 8005e46:	f7fc fb1f 	bl	8002488 <HAL_InitTick>
 8005e4a:	4606      	mov	r6, r0
 8005e4c:	2800      	cmp	r0, #0
 8005e4e:	f040 8233 	bne.w	80062b8 <main+0x628>
 8005e52:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
 8005e56:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e58:	4b85      	ldr	r3, [pc, #532]	; (8006070 <main+0x3e0>)
 8005e5a:	f042 0202 	orr.w	r2, r2, #2
 8005e5e:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005e60:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e62:	f002 0202 	and.w	r2, r2, #2
 8005e66:	9206      	str	r2, [sp, #24]
 8005e68:	9a06      	ldr	r2, [sp, #24]
 8005e6a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e6c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005e70:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005e72:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e74:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8005e78:	9205      	str	r2, [sp, #20]
 8005e7a:	9a05      	ldr	r2, [sp, #20]
 8005e7c:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e7e:	f042 0201 	orr.w	r2, r2, #1
 8005e82:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005e84:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e86:	f002 0201 	and.w	r2, r2, #1
 8005e8a:	9204      	str	r2, [sp, #16]
 8005e8c:	f04f 4a90 	mov.w	sl, #1207959552	; 0x48000000
 8005e90:	9a04      	ldr	r2, [sp, #16]
 8005e92:	f04f 0810 	mov.w	r8, #16
 8005e96:	f241 2201 	movw	r2, #4609	; 0x1201
 8005e9a:	629a      	str	r2, [r3, #40]	; 0x28
 8005e9c:	2702      	movs	r7, #2
 8005e9e:	f44f 1288 	mov.w	r2, #1114112	; 0x110000
 8005ea2:	4618      	mov	r0, r3
 8005ea4:	f8ca 8028 	str.w	r8, [sl, #40]	; 0x28
 8005ea8:	2308      	movs	r3, #8
 8005eaa:	a939      	add	r1, sp, #228	; 0xe4
 8005eac:	e9cd 3239 	strd	r3, r2, [sp, #228]	; 0xe4
 8005eb0:	f04f 0b09 	mov.w	fp, #9
 8005eb4:	973b      	str	r7, [sp, #236]	; 0xec
 8005eb6:	f7fc f95b 	bl	8002170 <HAL_GPIO_Init>
 8005eba:	486e      	ldr	r0, [pc, #440]	; (8006074 <main+0x3e4>)
 8005ebc:	f8cd b0e4 	str.w	fp, [sp, #228]	; 0xe4
 8005ec0:	a939      	add	r1, sp, #228	; 0xe4
 8005ec2:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 8005ec6:	f7fc f953 	bl	8002170 <HAL_GPIO_Init>
 8005eca:	f44f 1244 	mov.w	r2, #3211264	; 0x310000
 8005ece:	f44f 6c00 	mov.w	ip, #2048	; 0x800
 8005ed2:	a939      	add	r1, sp, #228	; 0xe4
 8005ed4:	4650      	mov	r0, sl
 8005ed6:	e9cd c239 	strd	ip, r2, [sp, #228]	; 0xe4
 8005eda:	973b      	str	r7, [sp, #236]	; 0xec
 8005edc:	f7fc f948 	bl	8002170 <HAL_GPIO_Init>
 8005ee0:	4b63      	ldr	r3, [pc, #396]	; (8006070 <main+0x3e0>)
 8005ee2:	4618      	mov	r0, r3
 8005ee4:	f241 2301 	movw	r3, #4609	; 0x1201
 8005ee8:	f04f 0901 	mov.w	r9, #1
 8005eec:	a939      	add	r1, sp, #228	; 0xe4
 8005eee:	9339      	str	r3, [sp, #228]	; 0xe4
 8005ef0:	2303      	movs	r3, #3
 8005ef2:	933c      	str	r3, [sp, #240]	; 0xf0
 8005ef4:	e9cd 963a 	strd	r9, r6, [sp, #232]	; 0xe8
 8005ef8:	f7fc f93a 	bl	8002170 <HAL_GPIO_Init>
 8005efc:	4b5c      	ldr	r3, [pc, #368]	; (8006070 <main+0x3e0>)
 8005efe:	9739      	str	r7, [sp, #228]	; 0xe4
 8005f00:	4618      	mov	r0, r3
 8005f02:	a939      	add	r1, sp, #228	; 0xe4
 8005f04:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 8005f08:	f7fc f932 	bl	8002170 <HAL_GPIO_Init>
 8005f0c:	2303      	movs	r3, #3
 8005f0e:	a939      	add	r1, sp, #228	; 0xe4
 8005f10:	4650      	mov	r0, sl
 8005f12:	933c      	str	r3, [sp, #240]	; 0xf0
 8005f14:	e9cd 8939 	strd	r8, r9, [sp, #228]	; 0xe4
 8005f18:	973b      	str	r7, [sp, #236]	; 0xec
 8005f1a:	f7fc f929 	bl	8002170 <HAL_GPIO_Init>
 8005f1e:	4631      	mov	r1, r6
 8005f20:	4658      	mov	r0, fp
 8005f22:	f7fa f955 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005f26:	4658      	mov	r0, fp
 8005f28:	f7fc faa2 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8005f2c:	4631      	mov	r1, r6
 8005f2e:	2028      	movs	r0, #40	; 0x28
 8005f30:	f7fa f94e 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005f34:	2028      	movs	r0, #40	; 0x28
 8005f36:	f7fc fa9b 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8005f3a:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8005f3c:	ea43 0309 	orr.w	r3, r3, r9
 8005f40:	64ab      	str	r3, [r5, #72]	; 0x48
 8005f42:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8005f44:	ea03 0309 	and.w	r3, r3, r9
 8005f48:	4631      	mov	r1, r6
 8005f4a:	9303      	str	r3, [sp, #12]
 8005f4c:	200c      	movs	r0, #12
 8005f4e:	9b03      	ldr	r3, [sp, #12]
 8005f50:	f7fa f93e 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005f54:	200c      	movs	r0, #12
 8005f56:	f7fc fa8b 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8005f5a:	4631      	mov	r1, r6
 8005f5c:	200d      	movs	r0, #13
 8005f5e:	f7fa f937 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005f62:	200d      	movs	r0, #13
 8005f64:	f7fc fa84 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8005f68:	4631      	mov	r1, r6
 8005f6a:	4640      	mov	r0, r8
 8005f6c:	f7fa f930 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005f70:	4640      	mov	r0, r8
 8005f72:	f7fc fa7d 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8005f76:	4631      	mov	r1, r6
 8005f78:	2011      	movs	r0, #17
 8005f7a:	f7fa f929 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005f7e:	2011      	movs	r0, #17
 8005f80:	f7fc fa76 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8005f84:	f8df e100 	ldr.w	lr, [pc, #256]	; 8006088 <main+0x3f8>
 8005f88:	483b      	ldr	r0, [pc, #236]	; (8006078 <main+0x3e8>)
 8005f8a:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8005f8e:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8005f92:	210c      	movs	r1, #12
 8005f94:	f44f 7340 	mov.w	r3, #768	; 0x300
 8005f98:	e9c4 6656 	strd	r6, r6, [r4, #344]	; 0x158
 8005f9c:	e9c4 665a 	strd	r6, r6, [r4, #360]	; 0x168
 8005fa0:	e9c4 e253 	strd	lr, r2, [r4, #332]	; 0x14c
 8005fa4:	e9c4 1358 	strd	r1, r3, [r4, #352]	; 0x160
 8005fa8:	f8c4 6170 	str.w	r6, [r4, #368]	; 0x170
 8005fac:	f7fc fb52 	bl	8002654 <HAL_UART_Init.constprop.0>
 8005fb0:	2800      	cmp	r0, #0
 8005fb2:	f040 8181 	bne.w	80062b8 <main+0x628>
 8005fb6:	f44f 6670 	mov.w	r6, #3840	; 0xf00
 8005fba:	2208      	movs	r2, #8
 8005fbc:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8005fc0:	492e      	ldr	r1, [pc, #184]	; (800607c <main+0x3ec>)
 8005fc2:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
 8005fc6:	f44f 7c82 	mov.w	ip, #260	; 0x104
 8005fca:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005fce:	f8c4 60f0 	str.w	r6, [r4, #240]	; 0xf0
 8005fd2:	2607      	movs	r6, #7
 8005fd4:	e9c4 003d 	strd	r0, r0, [r4, #244]	; 0xf4
 8005fd8:	e9c4 0040 	strd	r0, r0, [r4, #256]	; 0x100
 8005fdc:	e9c4 0042 	strd	r0, r0, [r4, #264]	; 0x108
 8005fe0:	e9c4 1c39 	strd	r1, ip, [r4, #228]	; 0xe4
 8005fe4:	f8c4 00ec 	str.w	r0, [r4, #236]	; 0xec
 8005fe8:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 8005fec:	f003 0bff 	and.w	fp, r3, #255	; 0xff
 8005ff0:	f8c4 20fc 	str.w	r2, [r4, #252]	; 0xfc
 8005ff4:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	f000 8383 	beq.w	8006704 <main+0xa74>
 8005ffe:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 8006002:	680b      	ldr	r3, [r1, #0]
 8006004:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006008:	600b      	str	r3, [r1, #0]
 800600a:	460f      	mov	r7, r1
 800600c:	f44f 7341 	mov.w	r3, #772	; 0x304
 8006010:	f640 7208 	movw	r2, #3848	; 0xf08
 8006014:	f8d4 110c 	ldr.w	r1, [r4, #268]	; 0x10c
 8006018:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 800601c:	4310      	orrs	r0, r2
 800601e:	4319      	orrs	r1, r3
 8006020:	2601      	movs	r6, #1
 8006022:	2300      	movs	r3, #0
 8006024:	6039      	str	r1, [r7, #0]
 8006026:	6078      	str	r0, [r7, #4]
 8006028:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 800602c:	f884 6141 	strb.w	r6, [r4, #321]	; 0x141
 8006030:	f894 2211 	ldrb.w	r2, [r4, #529]	; 0x211
 8006034:	4912      	ldr	r1, [pc, #72]	; (8006080 <main+0x3f0>)
 8006036:	4813      	ldr	r0, [pc, #76]	; (8006084 <main+0x3f4>)
 8006038:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 800603c:	e9c4 3378 	strd	r3, r3, [r4, #480]	; 0x1e0
 8006040:	e9c4 337a 	strd	r3, r3, [r4, #488]	; 0x1e8
 8006044:	23a4      	movs	r3, #164	; 0xa4
 8006046:	e9c4 1375 	strd	r1, r3, [r4, #468]	; 0x1d4
 800604a:	f8c4 61dc 	str.w	r6, [r4, #476]	; 0x1dc
 800604e:	f002 05ff 	and.w	r5, r2, #255	; 0xff
 8006052:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
 8006056:	2a00      	cmp	r2, #0
 8006058:	f000 82f1 	beq.w	800663e <main+0x9ae>
 800605c:	e016      	b.n	800608c <main+0x3fc>
 800605e:	bf00      	nop
 8006060:	40022000 	.word	0x40022000
 8006064:	40021000 	.word	0x40021000
 8006068:	20000000 	.word	0x20000000
 800606c:	080076b0 	.word	0x080076b0
 8006070:	48000400 	.word	0x48000400
 8006074:	48001c00 	.word	0x48001c00
 8006078:	200001f8 	.word	0x200001f8
 800607c:	40013000 	.word	0x40013000
 8006080:	10909cec 	.word	0x10909cec
 8006084:	40005800 	.word	0x40005800
 8006088:	40004400 	.word	0x40004400
 800608c:	f8d4 31d0 	ldr.w	r3, [r4, #464]	; 0x1d0
 8006090:	f8d4 01dc 	ldr.w	r0, [r4, #476]	; 0x1dc
 8006094:	2224      	movs	r2, #36	; 0x24
 8006096:	f884 2211 	strb.w	r2, [r4, #529]	; 0x211
 800609a:	6819      	ldr	r1, [r3, #0]
 800609c:	f8d4 21d4 	ldr.w	r2, [r4, #468]	; 0x1d4
 80060a0:	f021 0101 	bic.w	r1, r1, #1
 80060a4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80060a8:	6019      	str	r1, [r3, #0]
 80060aa:	611a      	str	r2, [r3, #16]
 80060ac:	689a      	ldr	r2, [r3, #8]
 80060ae:	2801      	cmp	r0, #1
 80060b0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80060b4:	609a      	str	r2, [r3, #8]
 80060b6:	f8d4 21d8 	ldr.w	r2, [r4, #472]	; 0x1d8
 80060ba:	f000 82bc 	beq.w	8006636 <main+0x9a6>
 80060be:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 80060c2:	2802      	cmp	r0, #2
 80060c4:	609a      	str	r2, [r3, #8]
 80060c6:	bf04      	itt	eq
 80060c8:	f44f 6200 	moveq.w	r2, #2048	; 0x800
 80060cc:	605a      	streq	r2, [r3, #4]
 80060ce:	6859      	ldr	r1, [r3, #4]
 80060d0:	f8d4 51e8 	ldr.w	r5, [r4, #488]	; 0x1e8
 80060d4:	e9d4 2678 	ldrd	r2, r6, [r4, #480]	; 0x1e0
 80060d8:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
 80060dc:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80060e0:	6059      	str	r1, [r3, #4]
 80060e2:	4332      	orrs	r2, r6
 80060e4:	68d8      	ldr	r0, [r3, #12]
 80060e6:	f8d4 11ec 	ldr.w	r1, [r4, #492]	; 0x1ec
 80060ea:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80060ee:	f8d4 51f0 	ldr.w	r5, [r4, #496]	; 0x1f0
 80060f2:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 80060f6:	4329      	orrs	r1, r5
 80060f8:	60d8      	str	r0, [r3, #12]
 80060fa:	60da      	str	r2, [r3, #12]
 80060fc:	6019      	str	r1, [r3, #0]
 80060fe:	6819      	ldr	r1, [r3, #0]
 8006100:	2200      	movs	r2, #0
 8006102:	f041 0101 	orr.w	r1, r1, #1
 8006106:	2020      	movs	r0, #32
 8006108:	6019      	str	r1, [r3, #0]
 800610a:	f8c4 2214 	str.w	r2, [r4, #532]	; 0x214
 800610e:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 8006112:	f8c4 2200 	str.w	r2, [r4, #512]	; 0x200
 8006116:	f884 2212 	strb.w	r2, [r4, #530]	; 0x212
 800611a:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 800611e:	4281      	cmp	r1, r0
 8006120:	b2cd      	uxtb	r5, r1
 8006122:	f040 80c9 	bne.w	80062b8 <main+0x628>
 8006126:	f894 1210 	ldrb.w	r1, [r4, #528]	; 0x210
 800612a:	2901      	cmp	r1, #1
 800612c:	f000 80c4 	beq.w	80062b8 <main+0x628>
 8006130:	2024      	movs	r0, #36	; 0x24
 8006132:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 8006136:	6819      	ldr	r1, [r3, #0]
 8006138:	f021 0101 	bic.w	r1, r1, #1
 800613c:	6019      	str	r1, [r3, #0]
 800613e:	6819      	ldr	r1, [r3, #0]
 8006140:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 8006144:	6019      	str	r1, [r3, #0]
 8006146:	6819      	ldr	r1, [r3, #0]
 8006148:	6019      	str	r1, [r3, #0]
 800614a:	6819      	ldr	r1, [r3, #0]
 800614c:	f041 0101 	orr.w	r1, r1, #1
 8006150:	6019      	str	r1, [r3, #0]
 8006152:	f884 5211 	strb.w	r5, [r4, #529]	; 0x211
 8006156:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 800615a:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 800615e:	2920      	cmp	r1, #32
 8006160:	b2ce      	uxtb	r6, r1
 8006162:	f040 80a9 	bne.w	80062b8 <main+0x628>
 8006166:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 800616a:	6819      	ldr	r1, [r3, #0]
 800616c:	4886      	ldr	r0, [pc, #536]	; (8006388 <main+0x6f8>)
 800616e:	4d87      	ldr	r5, [pc, #540]	; (800638c <main+0x6fc>)
 8006170:	f021 0101 	bic.w	r1, r1, #1
 8006174:	6019      	str	r1, [r3, #0]
 8006176:	6819      	ldr	r1, [r3, #0]
 8006178:	f421 6170 	bic.w	r1, r1, #3840	; 0xf00
 800617c:	6019      	str	r1, [r3, #0]
 800617e:	6819      	ldr	r1, [r3, #0]
 8006180:	f041 0101 	orr.w	r1, r1, #1
 8006184:	6019      	str	r1, [r3, #0]
 8006186:	f44f 2161 	mov.w	r1, #921600	; 0xe1000
 800618a:	230c      	movs	r3, #12
 800618c:	e9c0 5100 	strd	r5, r1, [r0]
 8006190:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8006194:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8006198:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800619c:	f884 6211 	strb.w	r6, [r4, #529]	; 0x211
 80061a0:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 80061a4:	6102      	str	r2, [r0, #16]
 80061a6:	6143      	str	r3, [r0, #20]
 80061a8:	f7fc fa54 	bl	8002654 <HAL_UART_Init.constprop.0>
 80061ac:	4605      	mov	r5, r0
 80061ae:	2800      	cmp	r0, #0
 80061b0:	f040 8082 	bne.w	80062b8 <main+0x628>
 80061b4:	222c      	movs	r2, #44	; 0x2c
 80061b6:	4629      	mov	r1, r5
 80061b8:	a817      	add	r0, sp, #92	; 0x5c
 80061ba:	f000 fbdb 	bl	8006974 <memset>
 80061be:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80061c2:	4e73      	ldr	r6, [pc, #460]	; (8006390 <main+0x700>)
 80061c4:	60a5      	str	r5, [r4, #8]
 80061c6:	201f      	movs	r0, #31
 80061c8:	f240 32e7 	movw	r2, #999	; 0x3e7
 80061cc:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80061d0:	e9c4 5507 	strd	r5, r5, [r4, #28]
 80061d4:	e9c4 0203 	strd	r0, r2, [r4, #12]
 80061d8:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 80061dc:	6066      	str	r6, [r4, #4]
 80061de:	2b00      	cmp	r3, #0
 80061e0:	f000 8200 	beq.w	80065e4 <main+0x954>
 80061e4:	6863      	ldr	r3, [r4, #4]
 80061e6:	2702      	movs	r7, #2
 80061e8:	f04f 08ca 	mov.w	r8, #202	; 0xca
 80061ec:	2653      	movs	r6, #83	; 0x53
 80061ee:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 80061f2:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
 80061f6:	625e      	str	r6, [r3, #36]	; 0x24
 80061f8:	f7fa f9d0 	bl	800059c <RTC_EnterInitMode.constprop.0>
 80061fc:	2800      	cmp	r0, #0
 80061fe:	d15b      	bne.n	80062b8 <main+0x628>
 8006200:	e9d4 1301 	ldrd	r1, r3, [r4, #4]
 8006204:	688a      	ldr	r2, [r1, #8]
 8006206:	6965      	ldr	r5, [r4, #20]
 8006208:	69e0      	ldr	r0, [r4, #28]
 800620a:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 800620e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006212:	608a      	str	r2, [r1, #8]
 8006214:	688a      	ldr	r2, [r1, #8]
 8006216:	432b      	orrs	r3, r5
 8006218:	4303      	orrs	r3, r0
 800621a:	4313      	orrs	r3, r2
 800621c:	6922      	ldr	r2, [r4, #16]
 800621e:	608b      	str	r3, [r1, #8]
 8006220:	610a      	str	r2, [r1, #16]
 8006222:	690b      	ldr	r3, [r1, #16]
 8006224:	68e2      	ldr	r2, [r4, #12]
 8006226:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800622a:	610b      	str	r3, [r1, #16]
 800622c:	f7fa f98e 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8006230:	2800      	cmp	r0, #0
 8006232:	d141      	bne.n	80062b8 <main+0x628>
 8006234:	6860      	ldr	r0, [r4, #4]
 8006236:	6a23      	ldr	r3, [r4, #32]
 8006238:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800623a:	69a1      	ldr	r1, [r4, #24]
 800623c:	f894 c024 	ldrb.w	ip, [r4, #36]	; 0x24
 8006240:	f022 0203 	bic.w	r2, r2, #3
 8006244:	64c2      	str	r2, [r0, #76]	; 0x4c
 8006246:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8006248:	2501      	movs	r5, #1
 800624a:	430b      	orrs	r3, r1
 800624c:	4313      	orrs	r3, r2
 800624e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8006252:	45ac      	cmp	ip, r5
 8006254:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006256:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 800625a:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800625e:	d02b      	beq.n	80062b8 <main+0x628>
 8006260:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8006264:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 8006268:	6246      	str	r6, [r0, #36]	; 0x24
 800626a:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800626e:	f7fa f995 	bl	800059c <RTC_EnterInitMode.constprop.0>
 8006272:	6863      	ldr	r3, [r4, #4]
 8006274:	b9d8      	cbnz	r0, 80062ae <main+0x61e>
 8006276:	689a      	ldr	r2, [r3, #8]
 8006278:	6018      	str	r0, [r3, #0]
 800627a:	689a      	ldr	r2, [r3, #8]
 800627c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8006280:	609a      	str	r2, [r3, #8]
 8006282:	689a      	ldr	r2, [r3, #8]
 8006284:	609a      	str	r2, [r3, #8]
 8006286:	f7fa f961 	bl	800054c <RTC_ExitInitMode.constprop.0>
 800628a:	6863      	ldr	r3, [r4, #4]
 800628c:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8006290:	b978      	cbnz	r0, 80062b2 <main+0x622>
 8006292:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8006296:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 800629a:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
 800629e:	625e      	str	r6, [r3, #36]	; 0x24
 80062a0:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80062a4:	f7fa f97a 	bl	800059c <RTC_EnterInitMode.constprop.0>
 80062a8:	6863      	ldr	r3, [r4, #4]
 80062aa:	2800      	cmp	r0, #0
 80062ac:	d07a      	beq.n	80063a4 <main+0x714>
 80062ae:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 80062b2:	2300      	movs	r3, #0
 80062b4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80062b8:	f7fc f910 	bl	80024dc <__NVIC_SystemReset>
 80062bc:	4b35      	ldr	r3, [pc, #212]	; (8006394 <main+0x704>)
 80062be:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80062c0:	f042 0201 	orr.w	r2, r2, #1
 80062c4:	661a      	str	r2, [r3, #96]	; 0x60
 80062c6:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80062c8:	f002 0201 	and.w	r2, r2, #1
 80062cc:	9208      	str	r2, [sp, #32]
 80062ce:	9a08      	ldr	r2, [sp, #32]
 80062d0:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80062d2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80062d6:	659a      	str	r2, [r3, #88]	; 0x58
 80062d8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80062da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80062de:	9307      	str	r3, [sp, #28]
 80062e0:	9b07      	ldr	r3, [sp, #28]
 80062e2:	e4e6      	b.n	8005cb2 <main+0x22>
 80062e4:	f003 0303 	and.w	r3, r3, #3
 80062e8:	2b02      	cmp	r3, #2
 80062ea:	f47f ad13 	bne.w	8005d14 <main+0x84>
 80062ee:	4a29      	ldr	r2, [pc, #164]	; (8006394 <main+0x704>)
 80062f0:	4c29      	ldr	r4, [pc, #164]	; (8006398 <main+0x708>)
 80062f2:	6813      	ldr	r3, [r2, #0]
 80062f4:	6853      	ldr	r3, [r2, #4]
 80062f6:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 80062fa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80062fe:	6053      	str	r3, [r2, #4]
 8006300:	4b24      	ldr	r3, [pc, #144]	; (8006394 <main+0x704>)
 8006302:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8006306:	f042 0201 	orr.w	r2, r2, #1
 800630a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800630e:	6820      	ldr	r0, [r4, #0]
 8006310:	e003      	b.n	800631a <main+0x68a>
 8006312:	6822      	ldr	r2, [r4, #0]
 8006314:	1a12      	subs	r2, r2, r0
 8006316:	2a02      	cmp	r2, #2
 8006318:	d8ce      	bhi.n	80062b8 <main+0x628>
 800631a:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800631e:	0795      	lsls	r5, r2, #30
 8006320:	d5f7      	bpl.n	8006312 <main+0x682>
 8006322:	68da      	ldr	r2, [r3, #12]
 8006324:	f002 0003 	and.w	r0, r2, #3
 8006328:	2802      	cmp	r0, #2
 800632a:	f43f ad0a 	beq.w	8005d42 <main+0xb2>
 800632e:	290c      	cmp	r1, #12
 8006330:	d0c2      	beq.n	80062b8 <main+0x628>
 8006332:	4b18      	ldr	r3, [pc, #96]	; (8006394 <main+0x704>)
 8006334:	681a      	ldr	r2, [r3, #0]
 8006336:	0152      	lsls	r2, r2, #5
 8006338:	d4be      	bmi.n	80062b8 <main+0x628>
 800633a:	681a      	ldr	r2, [r3, #0]
 800633c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8006340:	601a      	str	r2, [r3, #0]
 8006342:	6821      	ldr	r1, [r4, #0]
 8006344:	e003      	b.n	800634e <main+0x6be>
 8006346:	6822      	ldr	r2, [r4, #0]
 8006348:	1a52      	subs	r2, r2, r1
 800634a:	2a02      	cmp	r2, #2
 800634c:	d8b4      	bhi.n	80062b8 <main+0x628>
 800634e:	681a      	ldr	r2, [r3, #0]
 8006350:	0197      	lsls	r7, r2, #6
 8006352:	d4f8      	bmi.n	8006346 <main+0x6b6>
 8006354:	68d8      	ldr	r0, [r3, #12]
 8006356:	4911      	ldr	r1, [pc, #68]	; (800639c <main+0x70c>)
 8006358:	4a11      	ldr	r2, [pc, #68]	; (80063a0 <main+0x710>)
 800635a:	4d0e      	ldr	r5, [pc, #56]	; (8006394 <main+0x704>)
 800635c:	4001      	ands	r1, r0
 800635e:	430a      	orrs	r2, r1
 8006360:	60da      	str	r2, [r3, #12]
 8006362:	681a      	ldr	r2, [r3, #0]
 8006364:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006368:	601a      	str	r2, [r3, #0]
 800636a:	68da      	ldr	r2, [r3, #12]
 800636c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006370:	60da      	str	r2, [r3, #12]
 8006372:	6822      	ldr	r2, [r4, #0]
 8006374:	682b      	ldr	r3, [r5, #0]
 8006376:	019e      	lsls	r6, r3, #6
 8006378:	f53f acf7 	bmi.w	8005d6a <main+0xda>
 800637c:	6823      	ldr	r3, [r4, #0]
 800637e:	1a9b      	subs	r3, r3, r2
 8006380:	2b02      	cmp	r3, #2
 8006382:	d9f7      	bls.n	8006374 <main+0x6e4>
 8006384:	e798      	b.n	80062b8 <main+0x628>
 8006386:	bf00      	nop
 8006388:	2000036c 	.word	0x2000036c
 800638c:	40013800 	.word	0x40013800
 8006390:	40002800 	.word	0x40002800
 8006394:	40021000 	.word	0x40021000
 8006398:	200000ac 	.word	0x200000ac
 800639c:	019d808c 	.word	0x019d808c
 80063a0:	38000a02 	.word	0x38000a02
 80063a4:	f242 1201 	movw	r2, #8449	; 0x2101
 80063a8:	605a      	str	r2, [r3, #4]
 80063aa:	f7fa f8cf 	bl	800054c <RTC_ExitInitMode.constprop.0>
 80063ae:	6862      	ldr	r2, [r4, #4]
 80063b0:	4603      	mov	r3, r0
 80063b2:	f8c2 9024 	str.w	r9, [r2, #36]	; 0x24
 80063b6:	2800      	cmp	r0, #0
 80063b8:	f47f af7b 	bne.w	80062b2 <main+0x622>
 80063bc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80063c0:	a817      	add	r0, sp, #92	; 0x5c
 80063c2:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
 80063c6:	e9cd 331e 	strd	r3, r3, [sp, #120]	; 0x78
 80063ca:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80063ce:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80063d2:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80063d6:	f88d 305e 	strb.w	r3, [sp, #94]	; 0x5e
 80063da:	9318      	str	r3, [sp, #96]	; 0x60
 80063dc:	931c      	str	r3, [sp, #112]	; 0x70
 80063de:	f88d 5080 	strb.w	r5, [sp, #128]	; 0x80
 80063e2:	9221      	str	r2, [sp, #132]	; 0x84
 80063e4:	f7f9 ffca 	bl	800037c <HAL_RTC_SetAlarm_IT.constprop.0>
 80063e8:	2800      	cmp	r0, #0
 80063ea:	f47f af65 	bne.w	80062b8 <main+0x628>
 80063ee:	4eb3      	ldr	r6, [pc, #716]	; (80066bc <main+0xa2c>)
 80063f0:	49b3      	ldr	r1, [pc, #716]	; (80066c0 <main+0xa30>)
 80063f2:	48b4      	ldr	r0, [pc, #720]	; (80066c4 <main+0xa34>)
 80063f4:	4db4      	ldr	r5, [pc, #720]	; (80066c8 <main+0xa38>)
 80063f6:	f000 fbd5 	bl	8006ba4 <__wrap_printf>
 80063fa:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80063fc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80063fe:	e896 0003 	ldmia.w	r6, {r0, r1}
 8006402:	f8df c2fc 	ldr.w	ip, [pc, #764]	; 8006700 <main+0xa70>
 8006406:	f884 7048 	strb.w	r7, [r4, #72]	; 0x48
 800640a:	e885 0003 	stmia.w	r5, {r0, r1}
 800640e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006412:	f8c4 c04c 	str.w	ip, [r4, #76]	; 0x4c
 8006416:	f000 fb8b 	bl	8006b30 <malloc>
 800641a:	4606      	mov	r6, r0
 800641c:	2800      	cmp	r0, #0
 800641e:	f000 80dd 	beq.w	80065dc <main+0x94c>
 8006422:	49aa      	ldr	r1, [pc, #680]	; (80066cc <main+0xa3c>)
 8006424:	22c8      	movs	r2, #200	; 0xc8
 8006426:	f44f 7092 	mov.w	r0, #292	; 0x124
 800642a:	f7fa fe8d 	bl	8001148 <acc_rss_integration_mem_alloc_debug>
 800642e:	4605      	mov	r5, r0
 8006430:	2800      	cmp	r0, #0
 8006432:	f000 80cc 	beq.w	80065ce <main+0x93e>
 8006436:	f44f 7292 	mov.w	r2, #292	; 0x124
 800643a:	2100      	movs	r1, #0
 800643c:	f000 fa9a 	bl	8006974 <memset>
 8006440:	2101      	movs	r1, #1
 8006442:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
 8006446:	f240 1301 	movw	r3, #257	; 0x101
 800644a:	6029      	str	r1, [r5, #0]
 800644c:	61ea      	str	r2, [r5, #28]
 800644e:	842b      	strh	r3, [r5, #32]
 8006450:	462a      	mov	r2, r5
 8006452:	f105 0130 	add.w	r1, r5, #48	; 0x30
 8006456:	2300      	movs	r3, #0
 8006458:	6313      	str	r3, [r2, #48]	; 0x30
 800645a:	f882 3034 	strb.w	r3, [r2, #52]	; 0x34
 800645e:	3208      	adds	r2, #8
 8006460:	428a      	cmp	r2, r1
 8006462:	d1f9      	bne.n	8006458 <main+0x7c8>
 8006464:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006468:	f506 6100 	add.w	r1, r6, #2048	; 0x800
 800646c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006470:	846b      	strh	r3, [r5, #34]	; 0x22
 8006472:	626b      	str	r3, [r5, #36]	; 0x24
 8006474:	852b      	strh	r3, [r5, #40]	; 0x28
 8006476:	f44f 63ff 	mov.w	r3, #2040	; 0x7f8
 800647a:	e9c5 2104 	strd	r2, r1, [r5, #16]
 800647e:	61ab      	str	r3, [r5, #24]
 8006480:	e9c5 0602 	strd	r0, r6, [r5, #8]
 8006484:	606e      	str	r6, [r5, #4]
 8006486:	4628      	mov	r0, r5
 8006488:	f7fb fae2 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 800648c:	2100      	movs	r1, #0
 800648e:	f7fb fabd 	bl	8001a0c <acc_rss_assembly_test_enable>
 8006492:	4628      	mov	r0, r5
 8006494:	f7fc fcaa 	bl	8002dec <run_test.constprop.0>
 8006498:	4607      	mov	r7, r0
 800649a:	2800      	cmp	r0, #0
 800649c:	f000 8093 	beq.w	80065c6 <main+0x936>
 80064a0:	4628      	mov	r0, r5
 80064a2:	f7fb fad5 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 80064a6:	2101      	movs	r1, #1
 80064a8:	f7fb fab0 	bl	8001a0c <acc_rss_assembly_test_enable>
 80064ac:	4628      	mov	r0, r5
 80064ae:	f7fc fc9d 	bl	8002dec <run_test.constprop.0>
 80064b2:	4680      	mov	r8, r0
 80064b4:	2800      	cmp	r0, #0
 80064b6:	f000 8081 	beq.w	80065bc <main+0x92c>
 80064ba:	4628      	mov	r0, r5
 80064bc:	f7fb fac8 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 80064c0:	2102      	movs	r1, #2
 80064c2:	f7fb faa3 	bl	8001a0c <acc_rss_assembly_test_enable>
 80064c6:	4628      	mov	r0, r5
 80064c8:	f7fc fc90 	bl	8002dec <run_test.constprop.0>
 80064cc:	4680      	mov	r8, r0
 80064ce:	2800      	cmp	r0, #0
 80064d0:	d06f      	beq.n	80065b2 <main+0x922>
 80064d2:	4628      	mov	r0, r5
 80064d4:	f7fb fabc 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 80064d8:	2103      	movs	r1, #3
 80064da:	f7fb fa97 	bl	8001a0c <acc_rss_assembly_test_enable>
 80064de:	4628      	mov	r0, r5
 80064e0:	f7fc fc84 	bl	8002dec <run_test.constprop.0>
 80064e4:	4680      	mov	r8, r0
 80064e6:	2800      	cmp	r0, #0
 80064e8:	d05e      	beq.n	80065a8 <main+0x918>
 80064ea:	4628      	mov	r0, r5
 80064ec:	f7fb fab0 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 80064f0:	2104      	movs	r1, #4
 80064f2:	f7fb fa8b 	bl	8001a0c <acc_rss_assembly_test_enable>
 80064f6:	4628      	mov	r0, r5
 80064f8:	f7fc fc78 	bl	8002dec <run_test.constprop.0>
 80064fc:	4680      	mov	r8, r0
 80064fe:	2800      	cmp	r0, #0
 8006500:	d03b      	beq.n	800657a <main+0x8ea>
 8006502:	4628      	mov	r0, r5
 8006504:	f7fb faa4 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 8006508:	2105      	movs	r1, #5
 800650a:	f7fb fa7f 	bl	8001a0c <acc_rss_assembly_test_enable>
 800650e:	4628      	mov	r0, r5
 8006510:	f7fc fc6c 	bl	8002dec <run_test.constprop.0>
 8006514:	b320      	cbz	r0, 8006560 <main+0x8d0>
 8006516:	4628      	mov	r0, r5
 8006518:	f7fa fe0e 	bl	8001138 <acc_rss_integration_mem_free>
 800651c:	2300      	movs	r3, #0
 800651e:	4630      	mov	r0, r6
 8006520:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 8006524:	f000 fb0c 	bl	8006b40 <free>
 8006528:	b99f      	cbnz	r7, 8006552 <main+0x8c2>
 800652a:	e7fe      	b.n	800652a <main+0x89a>
 800652c:	681a      	ldr	r2, [r3, #0]
 800652e:	4968      	ldr	r1, [pc, #416]	; (80066d0 <main+0xa40>)
 8006530:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006534:	601a      	str	r2, [r3, #0]
 8006536:	68da      	ldr	r2, [r3, #12]
 8006538:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800653c:	60da      	str	r2, [r3, #12]
 800653e:	6822      	ldr	r2, [r4, #0]
 8006540:	680b      	ldr	r3, [r1, #0]
 8006542:	0198      	lsls	r0, r3, #6
 8006544:	f53f ac11 	bmi.w	8005d6a <main+0xda>
 8006548:	6823      	ldr	r3, [r4, #0]
 800654a:	1a9b      	subs	r3, r3, r2
 800654c:	2b02      	cmp	r3, #2
 800654e:	d9f7      	bls.n	8006540 <main+0x8b0>
 8006550:	e6b2      	b.n	80062b8 <main+0x628>
 8006552:	4860      	ldr	r0, [pc, #384]	; (80066d4 <main+0xa44>)
 8006554:	f000 fb10 	bl	8006b78 <__wrap_puts>
 8006558:	485f      	ldr	r0, [pc, #380]	; (80066d8 <main+0xa48>)
 800655a:	f000 fb0d 	bl	8006b78 <__wrap_puts>
 800655e:	e7e4      	b.n	800652a <main+0x89a>
 8006560:	485e      	ldr	r0, [pc, #376]	; (80066dc <main+0xa4c>)
 8006562:	f000 fb09 	bl	8006b78 <__wrap_puts>
 8006566:	4628      	mov	r0, r5
 8006568:	f7fa fde6 	bl	8001138 <acc_rss_integration_mem_free>
 800656c:	2300      	movs	r3, #0
 800656e:	4630      	mov	r0, r6
 8006570:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 8006574:	f000 fae4 	bl	8006b40 <free>
 8006578:	e7d7      	b.n	800652a <main+0x89a>
 800657a:	4859      	ldr	r0, [pc, #356]	; (80066e0 <main+0xa50>)
 800657c:	f000 fafc 	bl	8006b78 <__wrap_puts>
 8006580:	4628      	mov	r0, r5
 8006582:	f7fb fa65 	bl	8001a50 <acc_rss_assembly_test_disable_all_tests>
 8006586:	2105      	movs	r1, #5
 8006588:	f7fb fa40 	bl	8001a0c <acc_rss_assembly_test_enable>
 800658c:	4628      	mov	r0, r5
 800658e:	f7fc fc2d 	bl	8002dec <run_test.constprop.0>
 8006592:	2800      	cmp	r0, #0
 8006594:	d0e4      	beq.n	8006560 <main+0x8d0>
 8006596:	4628      	mov	r0, r5
 8006598:	f7fa fdce 	bl	8001138 <acc_rss_integration_mem_free>
 800659c:	4630      	mov	r0, r6
 800659e:	e9c4 880a 	strd	r8, r8, [r4, #40]	; 0x28
 80065a2:	f000 facd 	bl	8006b40 <free>
 80065a6:	e7c0      	b.n	800652a <main+0x89a>
 80065a8:	484e      	ldr	r0, [pc, #312]	; (80066e4 <main+0xa54>)
 80065aa:	f000 fae5 	bl	8006b78 <__wrap_puts>
 80065ae:	4647      	mov	r7, r8
 80065b0:	e79b      	b.n	80064ea <main+0x85a>
 80065b2:	484d      	ldr	r0, [pc, #308]	; (80066e8 <main+0xa58>)
 80065b4:	f000 fae0 	bl	8006b78 <__wrap_puts>
 80065b8:	4647      	mov	r7, r8
 80065ba:	e78a      	b.n	80064d2 <main+0x842>
 80065bc:	484b      	ldr	r0, [pc, #300]	; (80066ec <main+0xa5c>)
 80065be:	f000 fadb 	bl	8006b78 <__wrap_puts>
 80065c2:	4647      	mov	r7, r8
 80065c4:	e779      	b.n	80064ba <main+0x82a>
 80065c6:	484a      	ldr	r0, [pc, #296]	; (80066f0 <main+0xa60>)
 80065c8:	f000 fad6 	bl	8006b78 <__wrap_puts>
 80065cc:	e768      	b.n	80064a0 <main+0x810>
 80065ce:	4849      	ldr	r0, [pc, #292]	; (80066f4 <main+0xa64>)
 80065d0:	f000 fad2 	bl	8006b78 <__wrap_puts>
 80065d4:	4630      	mov	r0, r6
 80065d6:	f000 fab3 	bl	8006b40 <free>
 80065da:	e7a6      	b.n	800652a <main+0x89a>
 80065dc:	4846      	ldr	r0, [pc, #280]	; (80066f8 <main+0xa68>)
 80065de:	f000 facb 	bl	8006b78 <__wrap_puts>
 80065e2:	e7a2      	b.n	800652a <main+0x89a>
 80065e4:	2254      	movs	r2, #84	; 0x54
 80065e6:	a83a      	add	r0, sp, #232	; 0xe8
 80065e8:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80065ec:	f000 f9c2 	bl	8006974 <memset>
 80065f0:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80065f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80065f8:	a839      	add	r0, sp, #228	; 0xe4
 80065fa:	9239      	str	r2, [sp, #228]	; 0xe4
 80065fc:	934f      	str	r3, [sp, #316]	; 0x13c
 80065fe:	f7fb fba1 	bl	8001d44 <HAL_RCCEx_PeriphCLKConfig>
 8006602:	4601      	mov	r1, r0
 8006604:	2800      	cmp	r0, #0
 8006606:	f47f ae57 	bne.w	80062b8 <main+0x628>
 800660a:	4a31      	ldr	r2, [pc, #196]	; (80066d0 <main+0xa40>)
 800660c:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8006610:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006614:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8006618:	9001      	str	r0, [sp, #4]
 800661a:	2003      	movs	r0, #3
 800661c:	f7f9 fdd8 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006620:	2003      	movs	r0, #3
 8006622:	f7fb ff25 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8006626:	9901      	ldr	r1, [sp, #4]
 8006628:	2029      	movs	r0, #41	; 0x29
 800662a:	f7f9 fdd1 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800662e:	2029      	movs	r0, #41	; 0x29
 8006630:	f7fb ff1e 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 8006634:	e5d6      	b.n	80061e4 <main+0x554>
 8006636:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800663a:	609a      	str	r2, [r3, #8]
 800663c:	e547      	b.n	80060ce <main+0x43e>
 800663e:	4629      	mov	r1, r5
 8006640:	2258      	movs	r2, #88	; 0x58
 8006642:	a823      	add	r0, sp, #140	; 0x8c
 8006644:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 8006648:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 800664c:	f884 5210 	strb.w	r5, [r4, #528]	; 0x210
 8006650:	9516      	str	r5, [sp, #88]	; 0x58
 8006652:	f000 f98f 	bl	8006974 <memset>
 8006656:	2380      	movs	r3, #128	; 0x80
 8006658:	a822      	add	r0, sp, #136	; 0x88
 800665a:	952f      	str	r5, [sp, #188]	; 0xbc
 800665c:	9322      	str	r3, [sp, #136]	; 0x88
 800665e:	f7fb fb71 	bl	8001d44 <HAL_RCCEx_PeriphCLKConfig>
 8006662:	4605      	mov	r5, r0
 8006664:	2800      	cmp	r0, #0
 8006666:	f47f ae27 	bne.w	80062b8 <main+0x628>
 800666a:	4f19      	ldr	r7, [pc, #100]	; (80066d0 <main+0xa40>)
 800666c:	4823      	ldr	r0, [pc, #140]	; (80066fc <main+0xa6c>)
 800666e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006670:	f043 0302 	orr.w	r3, r3, #2
 8006674:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006676:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006678:	9614      	str	r6, [sp, #80]	; 0x50
 800667a:	f003 0302 	and.w	r3, r3, #2
 800667e:	930c      	str	r3, [sp, #48]	; 0x30
 8006680:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8006684:	9312      	str	r3, [sp, #72]	; 0x48
 8006686:	2312      	movs	r3, #18
 8006688:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800668a:	9313      	str	r3, [sp, #76]	; 0x4c
 800668c:	2203      	movs	r2, #3
 800668e:	a912      	add	r1, sp, #72	; 0x48
 8006690:	2304      	movs	r3, #4
 8006692:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
 8006696:	f7fb fd6b 	bl	8002170 <HAL_GPIO_Init>
 800669a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800669c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80066a0:	65bb      	str	r3, [r7, #88]	; 0x58
 80066a2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80066a4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80066a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80066aa:	4629      	mov	r1, r5
 80066ac:	2021      	movs	r0, #33	; 0x21
 80066ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80066b0:	f7f9 fd8e 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80066b4:	2021      	movs	r0, #33	; 0x21
 80066b6:	f7fb fedb 	bl	8002470 <HAL_NVIC_EnableIRQ.part.0>
 80066ba:	e4e7      	b.n	800608c <main+0x3fc>
 80066bc:	080086a8 	.word	0x080086a8
 80066c0:	08008650 	.word	0x08008650
 80066c4:	0800b044 	.word	0x0800b044
 80066c8:	200000dc 	.word	0x200000dc
 80066cc:	0800a254 	.word	0x0800a254
 80066d0:	40021000 	.word	0x40021000
 80066d4:	0800b160 	.word	0x0800b160
 80066d8:	0800b17c 	.word	0x0800b17c
 80066dc:	0800b13c 	.word	0x0800b13c
 80066e0:	0800b114 	.word	0x0800b114
 80066e4:	0800b0f4 	.word	0x0800b0f4
 80066e8:	0800b0d4 	.word	0x0800b0d4
 80066ec:	0800b0b0 	.word	0x0800b0b0
 80066f0:	0800b08c 	.word	0x0800b08c
 80066f4:	0800b194 	.word	0x0800b194
 80066f8:	0800b064 	.word	0x0800b064
 80066fc:	48000400 	.word	0x48000400
 8006700:	016e3600 	.word	0x016e3600
 8006704:	f884 b140 	strb.w	fp, [r4, #320]	; 0x140
 8006708:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 800670a:	4e56      	ldr	r6, [pc, #344]	; (8006864 <main+0xbd4>)
 800670c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006710:	662b      	str	r3, [r5, #96]	; 0x60
 8006712:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8006714:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006718:	930a      	str	r3, [sp, #40]	; 0x28
 800671a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800671c:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800671e:	f043 0301 	orr.w	r3, r3, #1
 8006722:	64eb      	str	r3, [r5, #76]	; 0x4c
 8006724:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8006726:	970e      	str	r7, [sp, #56]	; 0x38
 8006728:	f003 0301 	and.w	r3, r3, #1
 800672c:	9309      	str	r3, [sp, #36]	; 0x24
 800672e:	2203      	movs	r2, #3
 8006730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006732:	9210      	str	r2, [sp, #64]	; 0x40
 8006734:	2305      	movs	r3, #5
 8006736:	4650      	mov	r0, sl
 8006738:	25e0      	movs	r5, #224	; 0xe0
 800673a:	a90d      	add	r1, sp, #52	; 0x34
 800673c:	950d      	str	r5, [sp, #52]	; 0x34
 800673e:	9311      	str	r3, [sp, #68]	; 0x44
 8006740:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 8006744:	2580      	movs	r5, #128	; 0x80
 8006746:	f7fb fd13 	bl	8002170 <HAL_GPIO_Init>
 800674a:	4947      	ldr	r1, [pc, #284]	; (8006868 <main+0xbd8>)
 800674c:	f8c4 126c 	str.w	r1, [r4, #620]	; 0x26c
 8006750:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006754:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006758:	4630      	mov	r0, r6
 800675a:	e9c4 bb9d 	strd	fp, fp, [r4, #628]	; 0x274
 800675e:	e9c4 bba2 	strd	fp, fp, [r4, #648]	; 0x288
 8006762:	e9c4 529f 	strd	r5, r2, [r4, #636]	; 0x27c
 8006766:	f8c4 9270 	str.w	r9, [r4, #624]	; 0x270
 800676a:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
 800676e:	f7f9 fdb3 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8006772:	4601      	mov	r1, r0
 8006774:	2800      	cmp	r0, #0
 8006776:	f47f ad9f 	bne.w	80062b8 <main+0x628>
 800677a:	f1a6 0a48 	sub.w	sl, r6, #72	; 0x48
 800677e:	f8df c0ec 	ldr.w	ip, [pc, #236]	; 800686c <main+0xbdc>
 8006782:	f8c4 613c 	str.w	r6, [r4, #316]	; 0x13c
 8006786:	f44f 7280 	mov.w	r2, #256	; 0x100
 800678a:	f5a6 76c4 	sub.w	r6, r6, #392	; 0x188
 800678e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006792:	4650      	mov	r0, sl
 8006794:	e9c4 158c 	strd	r1, r5, [r4, #560]	; 0x230
 8006798:	e9c4 238e 	strd	r2, r3, [r4, #568]	; 0x238
 800679c:	e9c4 1190 	strd	r1, r1, [r4, #576]	; 0x240
 80067a0:	f8c4 9228 	str.w	r9, [r4, #552]	; 0x228
 80067a4:	f8c4 822c 	str.w	r8, [r4, #556]	; 0x22c
 80067a8:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
 80067ac:	f8c4 c224 	str.w	ip, [r4, #548]	; 0x224
 80067b0:	f7f9 fd92 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80067b4:	2800      	cmp	r0, #0
 80067b6:	f47f ad7f 	bne.w	80062b8 <main+0x628>
 80067ba:	e9d4 313a 	ldrd	r3, r1, [r4, #232]	; 0xe8
 80067be:	f8d4 20f4 	ldr.w	r2, [r4, #244]	; 0xf4
 80067c2:	f8d4 c0fc 	ldr.w	ip, [r4, #252]	; 0xfc
 80067c6:	f8c4 624c 	str.w	r6, [r4, #588]	; 0x24c
 80067ca:	f401 4504 	and.w	r5, r1, #33792	; 0x8400
 80067ce:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80067d2:	f8d4 10f8 	ldr.w	r1, [r4, #248]	; 0xf8
 80067d6:	f8d4 6118 	ldr.w	r6, [r4, #280]	; 0x118
 80067da:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 80067de:	432b      	orrs	r3, r5
 80067e0:	f002 0202 	and.w	r2, r2, #2
 80067e4:	4313      	orrs	r3, r2
 80067e6:	f001 0101 	and.w	r1, r1, #1
 80067ea:	430b      	orrs	r3, r1
 80067ec:	f40c 7100 	and.w	r1, ip, #512	; 0x200
 80067f0:	ea43 0e01 	orr.w	lr, r3, r1
 80067f4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80067f8:	f8d4 5108 	ldr.w	r5, [r4, #264]	; 0x108
 80067fc:	f8d4 70e4 	ldr.w	r7, [r4, #228]	; 0xe4
 8006800:	f8c4 a138 	str.w	sl, [r4, #312]	; 0x138
 8006804:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8006808:	f003 0c38 	and.w	ip, r3, #56	; 0x38
 800680c:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 8006810:	f005 0210 	and.w	r2, r5, #16
 8006814:	f006 0608 	and.w	r6, r6, #8
 8006818:	f8d4 50f0 	ldr.w	r5, [r4, #240]	; 0xf0
 800681c:	4332      	orrs	r2, r6
 800681e:	ea4e 0e0c 	orr.w	lr, lr, ip
 8006822:	683e      	ldr	r6, [r7, #0]
 8006824:	f003 0c80 	and.w	ip, r3, #128	; 0x80
 8006828:	ea4e 030c 	orr.w	r3, lr, ip
 800682c:	f405 6c70 	and.w	ip, r5, #3840	; 0xf00
 8006830:	f001 0104 	and.w	r1, r1, #4
 8006834:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8006838:	ea42 020c 	orr.w	r2, r2, ip
 800683c:	f5b5 6fe0 	cmp.w	r5, #1792	; 0x700
 8006840:	ea42 0201 	orr.w	r2, r2, r1
 8006844:	603e      	str	r6, [r7, #0]
 8006846:	d808      	bhi.n	800685a <main+0xbca>
 8006848:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800684c:	f43f abe2 	beq.w	8006014 <main+0x384>
 8006850:	2100      	movs	r1, #0
 8006852:	f8c4 110c 	str.w	r1, [r4, #268]	; 0x10c
 8006856:	f7ff bbdd 	b.w	8006014 <main+0x384>
 800685a:	f5b5 6f70 	cmp.w	r5, #3840	; 0xf00
 800685e:	d1f7      	bne.n	8006850 <main+0xbc0>
 8006860:	f7ff bbd8 	b.w	8006014 <main+0x384>
 8006864:	20000318 	.word	0x20000318
 8006868:	4002001c 	.word	0x4002001c
 800686c:	40020030 	.word	0x40020030

08006870 <_write>:
	return -1;
}


int _write(int file, char *ptr, int len)
{
 8006870:	b510      	push	{r4, lr}
	(void)file;
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 8006872:	f64f 73ff 	movw	r3, #65535	; 0xffff
{
 8006876:	4614      	mov	r4, r2
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 8006878:	4802      	ldr	r0, [pc, #8]	; (8006884 <_write+0x14>)
 800687a:	b292      	uxth	r2, r2
 800687c:	f7fe fda0 	bl	80053c0 <HAL_UART_Transmit>
	return len;
}
 8006880:	4620      	mov	r0, r4
 8006882:	bd10      	pop	{r4, pc}
 8006884:	2000036c 	.word	0x2000036c

08006888 <Reset_Handler>:
 8006888:	f8df d034 	ldr.w	sp, [pc, #52]	; 80068c0 <LoopForever+0x2>
 800688c:	f7fe fdfa 	bl	8005484 <SystemInit>
 8006890:	480c      	ldr	r0, [pc, #48]	; (80068c4 <LoopForever+0x6>)
 8006892:	490d      	ldr	r1, [pc, #52]	; (80068c8 <LoopForever+0xa>)
 8006894:	4a0d      	ldr	r2, [pc, #52]	; (80068cc <LoopForever+0xe>)
 8006896:	2300      	movs	r3, #0
 8006898:	e002      	b.n	80068a0 <LoopCopyDataInit>

0800689a <CopyDataInit>:
 800689a:	58d4      	ldr	r4, [r2, r3]
 800689c:	50c4      	str	r4, [r0, r3]
 800689e:	3304      	adds	r3, #4

080068a0 <LoopCopyDataInit>:
 80068a0:	18c4      	adds	r4, r0, r3
 80068a2:	428c      	cmp	r4, r1
 80068a4:	d3f9      	bcc.n	800689a <CopyDataInit>
 80068a6:	4a0a      	ldr	r2, [pc, #40]	; (80068d0 <LoopForever+0x12>)
 80068a8:	4c0a      	ldr	r4, [pc, #40]	; (80068d4 <LoopForever+0x16>)
 80068aa:	2300      	movs	r3, #0
 80068ac:	e001      	b.n	80068b2 <LoopFillZerobss>

080068ae <FillZerobss>:
 80068ae:	6013      	str	r3, [r2, #0]
 80068b0:	3204      	adds	r2, #4

080068b2 <LoopFillZerobss>:
 80068b2:	42a2      	cmp	r2, r4
 80068b4:	d3fb      	bcc.n	80068ae <FillZerobss>
 80068b6:	f000 f839 	bl	800692c <__libc_init_array>
 80068ba:	f7ff f9e9 	bl	8005c90 <main>

080068be <LoopForever>:
 80068be:	e7fe      	b.n	80068be <LoopForever>
 80068c0:	20010000 	.word	0x20010000
 80068c4:	20000000 	.word	0x20000000
 80068c8:	20000090 	.word	0x20000090
 80068cc:	0800b2b0 	.word	0x0800b2b0
 80068d0:	20000090 	.word	0x20000090
 80068d4:	20000400 	.word	0x20000400

080068d8 <ADC1_IRQHandler>:
 80068d8:	e7fe      	b.n	80068d8 <ADC1_IRQHandler>
	...

080068dc <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80068dc:	490c      	ldr	r1, [pc, #48]	; (8006910 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80068de:	4a0d      	ldr	r2, [pc, #52]	; (8006914 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 80068e0:	680b      	ldr	r3, [r1, #0]
{
 80068e2:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80068e4:	4c0c      	ldr	r4, [pc, #48]	; (8006918 <_sbrk+0x3c>)
 80068e6:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 80068e8:	b12b      	cbz	r3, 80068f6 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80068ea:	4418      	add	r0, r3
 80068ec:	4290      	cmp	r0, r2
 80068ee:	d807      	bhi.n	8006900 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80068f0:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 80068f2:	4618      	mov	r0, r3
 80068f4:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80068f6:	4b09      	ldr	r3, [pc, #36]	; (800691c <_sbrk+0x40>)
 80068f8:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 80068fa:	4418      	add	r0, r3
 80068fc:	4290      	cmp	r0, r2
 80068fe:	d9f7      	bls.n	80068f0 <_sbrk+0x14>
    errno = ENOMEM;
 8006900:	f000 f80e 	bl	8006920 <__errno>
 8006904:	230c      	movs	r3, #12
 8006906:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8006908:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800690c:	4618      	mov	r0, r3
 800690e:	bd10      	pop	{r4, pc}
 8006910:	20000360 	.word	0x20000360
 8006914:	20010000 	.word	0x20010000
 8006918:	00001400 	.word	0x00001400
 800691c:	20000400 	.word	0x20000400

08006920 <__errno>:
 8006920:	4b01      	ldr	r3, [pc, #4]	; (8006928 <__errno+0x8>)
 8006922:	6818      	ldr	r0, [r3, #0]
 8006924:	4770      	bx	lr
 8006926:	bf00      	nop
 8006928:	20000028 	.word	0x20000028

0800692c <__libc_init_array>:
 800692c:	b570      	push	{r4, r5, r6, lr}
 800692e:	4d0d      	ldr	r5, [pc, #52]	; (8006964 <__libc_init_array+0x38>)
 8006930:	4c0d      	ldr	r4, [pc, #52]	; (8006968 <__libc_init_array+0x3c>)
 8006932:	1b64      	subs	r4, r4, r5
 8006934:	10a4      	asrs	r4, r4, #2
 8006936:	2600      	movs	r6, #0
 8006938:	42a6      	cmp	r6, r4
 800693a:	d109      	bne.n	8006950 <__libc_init_array+0x24>
 800693c:	4d0b      	ldr	r5, [pc, #44]	; (800696c <__libc_init_array+0x40>)
 800693e:	4c0c      	ldr	r4, [pc, #48]	; (8006970 <__libc_init_array+0x44>)
 8006940:	f000 fea8 	bl	8007694 <_init>
 8006944:	1b64      	subs	r4, r4, r5
 8006946:	10a4      	asrs	r4, r4, #2
 8006948:	2600      	movs	r6, #0
 800694a:	42a6      	cmp	r6, r4
 800694c:	d105      	bne.n	800695a <__libc_init_array+0x2e>
 800694e:	bd70      	pop	{r4, r5, r6, pc}
 8006950:	f855 3b04 	ldr.w	r3, [r5], #4
 8006954:	4798      	blx	r3
 8006956:	3601      	adds	r6, #1
 8006958:	e7ee      	b.n	8006938 <__libc_init_array+0xc>
 800695a:	f855 3b04 	ldr.w	r3, [r5], #4
 800695e:	4798      	blx	r3
 8006960:	3601      	adds	r6, #1
 8006962:	e7f2      	b.n	800694a <__libc_init_array+0x1e>
 8006964:	0800b2a0 	.word	0x0800b2a0
 8006968:	0800b2a0 	.word	0x0800b2a0
 800696c:	0800b2a0 	.word	0x0800b2a0
 8006970:	0800b2a4 	.word	0x0800b2a4

08006974 <memset>:
 8006974:	4402      	add	r2, r0
 8006976:	4603      	mov	r3, r0
 8006978:	4293      	cmp	r3, r2
 800697a:	d100      	bne.n	800697e <memset+0xa>
 800697c:	4770      	bx	lr
 800697e:	f803 1b01 	strb.w	r1, [r3], #1
 8006982:	e7f9      	b.n	8006978 <memset+0x4>

08006984 <__retarget_lock_acquire_recursive>:
 8006984:	4770      	bx	lr

08006986 <__retarget_lock_release_recursive>:
 8006986:	4770      	bx	lr

08006988 <memcpy>:
 8006988:	440a      	add	r2, r1
 800698a:	4291      	cmp	r1, r2
 800698c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8006990:	d100      	bne.n	8006994 <memcpy+0xc>
 8006992:	4770      	bx	lr
 8006994:	b510      	push	{r4, lr}
 8006996:	f811 4b01 	ldrb.w	r4, [r1], #1
 800699a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800699e:	4291      	cmp	r1, r2
 80069a0:	d1f9      	bne.n	8006996 <memcpy+0xe>
 80069a2:	bd10      	pop	{r4, pc}

080069a4 <_free_r>:
 80069a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80069a6:	2900      	cmp	r1, #0
 80069a8:	d048      	beq.n	8006a3c <_free_r+0x98>
 80069aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80069ae:	9001      	str	r0, [sp, #4]
 80069b0:	2b00      	cmp	r3, #0
 80069b2:	f1a1 0404 	sub.w	r4, r1, #4
 80069b6:	bfb8      	it	lt
 80069b8:	18e4      	addlt	r4, r4, r3
 80069ba:	f000 f8ad 	bl	8006b18 <__malloc_lock>
 80069be:	4a20      	ldr	r2, [pc, #128]	; (8006a40 <_free_r+0x9c>)
 80069c0:	9801      	ldr	r0, [sp, #4]
 80069c2:	6813      	ldr	r3, [r2, #0]
 80069c4:	4615      	mov	r5, r2
 80069c6:	b933      	cbnz	r3, 80069d6 <_free_r+0x32>
 80069c8:	6063      	str	r3, [r4, #4]
 80069ca:	6014      	str	r4, [r2, #0]
 80069cc:	b003      	add	sp, #12
 80069ce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80069d2:	f000 b8a7 	b.w	8006b24 <__malloc_unlock>
 80069d6:	42a3      	cmp	r3, r4
 80069d8:	d90b      	bls.n	80069f2 <_free_r+0x4e>
 80069da:	6821      	ldr	r1, [r4, #0]
 80069dc:	1862      	adds	r2, r4, r1
 80069de:	4293      	cmp	r3, r2
 80069e0:	bf04      	itt	eq
 80069e2:	681a      	ldreq	r2, [r3, #0]
 80069e4:	685b      	ldreq	r3, [r3, #4]
 80069e6:	6063      	str	r3, [r4, #4]
 80069e8:	bf04      	itt	eq
 80069ea:	1852      	addeq	r2, r2, r1
 80069ec:	6022      	streq	r2, [r4, #0]
 80069ee:	602c      	str	r4, [r5, #0]
 80069f0:	e7ec      	b.n	80069cc <_free_r+0x28>
 80069f2:	461a      	mov	r2, r3
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	b10b      	cbz	r3, 80069fc <_free_r+0x58>
 80069f8:	42a3      	cmp	r3, r4
 80069fa:	d9fa      	bls.n	80069f2 <_free_r+0x4e>
 80069fc:	6811      	ldr	r1, [r2, #0]
 80069fe:	1855      	adds	r5, r2, r1
 8006a00:	42a5      	cmp	r5, r4
 8006a02:	d10b      	bne.n	8006a1c <_free_r+0x78>
 8006a04:	6824      	ldr	r4, [r4, #0]
 8006a06:	4421      	add	r1, r4
 8006a08:	1854      	adds	r4, r2, r1
 8006a0a:	42a3      	cmp	r3, r4
 8006a0c:	6011      	str	r1, [r2, #0]
 8006a0e:	d1dd      	bne.n	80069cc <_free_r+0x28>
 8006a10:	681c      	ldr	r4, [r3, #0]
 8006a12:	685b      	ldr	r3, [r3, #4]
 8006a14:	6053      	str	r3, [r2, #4]
 8006a16:	4421      	add	r1, r4
 8006a18:	6011      	str	r1, [r2, #0]
 8006a1a:	e7d7      	b.n	80069cc <_free_r+0x28>
 8006a1c:	d902      	bls.n	8006a24 <_free_r+0x80>
 8006a1e:	230c      	movs	r3, #12
 8006a20:	6003      	str	r3, [r0, #0]
 8006a22:	e7d3      	b.n	80069cc <_free_r+0x28>
 8006a24:	6825      	ldr	r5, [r4, #0]
 8006a26:	1961      	adds	r1, r4, r5
 8006a28:	428b      	cmp	r3, r1
 8006a2a:	bf04      	itt	eq
 8006a2c:	6819      	ldreq	r1, [r3, #0]
 8006a2e:	685b      	ldreq	r3, [r3, #4]
 8006a30:	6063      	str	r3, [r4, #4]
 8006a32:	bf04      	itt	eq
 8006a34:	1949      	addeq	r1, r1, r5
 8006a36:	6021      	streq	r1, [r4, #0]
 8006a38:	6054      	str	r4, [r2, #4]
 8006a3a:	e7c7      	b.n	80069cc <_free_r+0x28>
 8006a3c:	b003      	add	sp, #12
 8006a3e:	bd30      	pop	{r4, r5, pc}
 8006a40:	20000364 	.word	0x20000364

08006a44 <_malloc_r>:
 8006a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a46:	1ccd      	adds	r5, r1, #3
 8006a48:	f025 0503 	bic.w	r5, r5, #3
 8006a4c:	3508      	adds	r5, #8
 8006a4e:	2d0c      	cmp	r5, #12
 8006a50:	bf38      	it	cc
 8006a52:	250c      	movcc	r5, #12
 8006a54:	2d00      	cmp	r5, #0
 8006a56:	4606      	mov	r6, r0
 8006a58:	db01      	blt.n	8006a5e <_malloc_r+0x1a>
 8006a5a:	42a9      	cmp	r1, r5
 8006a5c:	d903      	bls.n	8006a66 <_malloc_r+0x22>
 8006a5e:	230c      	movs	r3, #12
 8006a60:	6033      	str	r3, [r6, #0]
 8006a62:	2000      	movs	r0, #0
 8006a64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a66:	f000 f857 	bl	8006b18 <__malloc_lock>
 8006a6a:	4921      	ldr	r1, [pc, #132]	; (8006af0 <_malloc_r+0xac>)
 8006a6c:	680a      	ldr	r2, [r1, #0]
 8006a6e:	4614      	mov	r4, r2
 8006a70:	b99c      	cbnz	r4, 8006a9a <_malloc_r+0x56>
 8006a72:	4f20      	ldr	r7, [pc, #128]	; (8006af4 <_malloc_r+0xb0>)
 8006a74:	683b      	ldr	r3, [r7, #0]
 8006a76:	b923      	cbnz	r3, 8006a82 <_malloc_r+0x3e>
 8006a78:	4621      	mov	r1, r4
 8006a7a:	4630      	mov	r0, r6
 8006a7c:	f000 f83c 	bl	8006af8 <_sbrk_r>
 8006a80:	6038      	str	r0, [r7, #0]
 8006a82:	4629      	mov	r1, r5
 8006a84:	4630      	mov	r0, r6
 8006a86:	f000 f837 	bl	8006af8 <_sbrk_r>
 8006a8a:	1c43      	adds	r3, r0, #1
 8006a8c:	d123      	bne.n	8006ad6 <_malloc_r+0x92>
 8006a8e:	230c      	movs	r3, #12
 8006a90:	6033      	str	r3, [r6, #0]
 8006a92:	4630      	mov	r0, r6
 8006a94:	f000 f846 	bl	8006b24 <__malloc_unlock>
 8006a98:	e7e3      	b.n	8006a62 <_malloc_r+0x1e>
 8006a9a:	6823      	ldr	r3, [r4, #0]
 8006a9c:	1b5b      	subs	r3, r3, r5
 8006a9e:	d417      	bmi.n	8006ad0 <_malloc_r+0x8c>
 8006aa0:	2b0b      	cmp	r3, #11
 8006aa2:	d903      	bls.n	8006aac <_malloc_r+0x68>
 8006aa4:	6023      	str	r3, [r4, #0]
 8006aa6:	441c      	add	r4, r3
 8006aa8:	6025      	str	r5, [r4, #0]
 8006aaa:	e004      	b.n	8006ab6 <_malloc_r+0x72>
 8006aac:	6863      	ldr	r3, [r4, #4]
 8006aae:	42a2      	cmp	r2, r4
 8006ab0:	bf0c      	ite	eq
 8006ab2:	600b      	streq	r3, [r1, #0]
 8006ab4:	6053      	strne	r3, [r2, #4]
 8006ab6:	4630      	mov	r0, r6
 8006ab8:	f000 f834 	bl	8006b24 <__malloc_unlock>
 8006abc:	f104 000b 	add.w	r0, r4, #11
 8006ac0:	1d23      	adds	r3, r4, #4
 8006ac2:	f020 0007 	bic.w	r0, r0, #7
 8006ac6:	1ac2      	subs	r2, r0, r3
 8006ac8:	d0cc      	beq.n	8006a64 <_malloc_r+0x20>
 8006aca:	1a1b      	subs	r3, r3, r0
 8006acc:	50a3      	str	r3, [r4, r2]
 8006ace:	e7c9      	b.n	8006a64 <_malloc_r+0x20>
 8006ad0:	4622      	mov	r2, r4
 8006ad2:	6864      	ldr	r4, [r4, #4]
 8006ad4:	e7cc      	b.n	8006a70 <_malloc_r+0x2c>
 8006ad6:	1cc4      	adds	r4, r0, #3
 8006ad8:	f024 0403 	bic.w	r4, r4, #3
 8006adc:	42a0      	cmp	r0, r4
 8006ade:	d0e3      	beq.n	8006aa8 <_malloc_r+0x64>
 8006ae0:	1a21      	subs	r1, r4, r0
 8006ae2:	4630      	mov	r0, r6
 8006ae4:	f000 f808 	bl	8006af8 <_sbrk_r>
 8006ae8:	3001      	adds	r0, #1
 8006aea:	d1dd      	bne.n	8006aa8 <_malloc_r+0x64>
 8006aec:	e7cf      	b.n	8006a8e <_malloc_r+0x4a>
 8006aee:	bf00      	nop
 8006af0:	20000364 	.word	0x20000364
 8006af4:	20000368 	.word	0x20000368

08006af8 <_sbrk_r>:
 8006af8:	b538      	push	{r3, r4, r5, lr}
 8006afa:	4d06      	ldr	r5, [pc, #24]	; (8006b14 <_sbrk_r+0x1c>)
 8006afc:	2300      	movs	r3, #0
 8006afe:	4604      	mov	r4, r0
 8006b00:	4608      	mov	r0, r1
 8006b02:	602b      	str	r3, [r5, #0]
 8006b04:	f7ff feea 	bl	80068dc <_sbrk>
 8006b08:	1c43      	adds	r3, r0, #1
 8006b0a:	d102      	bne.n	8006b12 <_sbrk_r+0x1a>
 8006b0c:	682b      	ldr	r3, [r5, #0]
 8006b0e:	b103      	cbz	r3, 8006b12 <_sbrk_r+0x1a>
 8006b10:	6023      	str	r3, [r4, #0]
 8006b12:	bd38      	pop	{r3, r4, r5, pc}
 8006b14:	200003fc 	.word	0x200003fc

08006b18 <__malloc_lock>:
 8006b18:	4801      	ldr	r0, [pc, #4]	; (8006b20 <__malloc_lock+0x8>)
 8006b1a:	f7ff bf33 	b.w	8006984 <__retarget_lock_acquire_recursive>
 8006b1e:	bf00      	nop
 8006b20:	200003f4 	.word	0x200003f4

08006b24 <__malloc_unlock>:
 8006b24:	4801      	ldr	r0, [pc, #4]	; (8006b2c <__malloc_unlock+0x8>)
 8006b26:	f7ff bf2e 	b.w	8006986 <__retarget_lock_release_recursive>
 8006b2a:	bf00      	nop
 8006b2c:	200003f4 	.word	0x200003f4

08006b30 <malloc>:
 8006b30:	4b02      	ldr	r3, [pc, #8]	; (8006b3c <malloc+0xc>)
 8006b32:	4601      	mov	r1, r0
 8006b34:	6818      	ldr	r0, [r3, #0]
 8006b36:	f7ff bf85 	b.w	8006a44 <_malloc_r>
 8006b3a:	bf00      	nop
 8006b3c:	20000028 	.word	0x20000028

08006b40 <free>:
 8006b40:	4b02      	ldr	r3, [pc, #8]	; (8006b4c <free+0xc>)
 8006b42:	4601      	mov	r1, r0
 8006b44:	6818      	ldr	r0, [r3, #0]
 8006b46:	f7ff bf2d 	b.w	80069a4 <_free_r>
 8006b4a:	bf00      	nop
 8006b4c:	20000028 	.word	0x20000028

08006b50 <out_func>:

static void out_func(char character, void *arg)
{
	print_buffer_t *buf = arg;

	buf->buffer[buf->position++] = character;
 8006b50:	f8b1 30c8 	ldrh.w	r3, [r1, #200]	; 0xc8
 8006b54:	1c5a      	adds	r2, r3, #1
 8006b56:	b292      	uxth	r2, r2
	if (buf->position == BUF_SIZE)
 8006b58:	2ac8      	cmp	r2, #200	; 0xc8
	buf->buffer[buf->position++] = character;
 8006b5a:	f8a1 20c8 	strh.w	r2, [r1, #200]	; 0xc8
 8006b5e:	54c8      	strb	r0, [r1, r3]
	if (buf->position == BUF_SIZE)
 8006b60:	d000      	beq.n	8006b64 <out_func+0x14>
 8006b62:	4770      	bx	lr
{
 8006b64:	b510      	push	{r4, lr}
	{
		_write(0, buf->buffer, BUF_SIZE);
 8006b66:	2000      	movs	r0, #0
 8006b68:	460c      	mov	r4, r1
 8006b6a:	f7ff fe81 	bl	8006870 <_write>
		buf->position = 0;
 8006b6e:	2300      	movs	r3, #0
 8006b70:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
	}
}
 8006b74:	bd10      	pop	{r4, pc}
 8006b76:	bf00      	nop

08006b78 <__wrap_puts>:


int __wrap_puts(const char *str)
{
 8006b78:	b500      	push	{lr}
 8006b7a:	b083      	sub	sp, #12
 8006b7c:	9001      	str	r0, [sp, #4]
	size_t len = strlen(str);
 8006b7e:	f7fe ff03 	bl	8005988 <strlen>

	_write(0, str, len);
 8006b82:	9901      	ldr	r1, [sp, #4]
	size_t len = strlen(str);
 8006b84:	4602      	mov	r2, r0
	_write(0, str, len);
 8006b86:	2000      	movs	r0, #0
 8006b88:	f7ff fe72 	bl	8006870 <_write>
	_write(0, "\n", 1);
 8006b8c:	4904      	ldr	r1, [pc, #16]	; (8006ba0 <__wrap_puts+0x28>)
 8006b8e:	2201      	movs	r2, #1
 8006b90:	2000      	movs	r0, #0
 8006b92:	f7ff fe6d 	bl	8006870 <_write>
	return 0;
}
 8006b96:	2000      	movs	r0, #0
 8006b98:	b003      	add	sp, #12
 8006b9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006b9e:	bf00      	nop
 8006ba0:	0800b038 	.word	0x0800b038

08006ba4 <__wrap_printf>:
	return 0;
}


int __wrap_printf(const char *format, ...)
{
 8006ba4:	b40f      	push	{r0, r1, r2, r3}
 8006ba6:	b530      	push	{r4, r5, lr}
 8006ba8:	b0b5      	sub	sp, #212	; 0xd4
 8006baa:	ac38      	add	r4, sp, #224	; 0xe0
	print_buffer_t buf = {
 8006bac:	490e      	ldr	r1, [pc, #56]	; (8006be8 <__wrap_printf+0x44>)
{
 8006bae:	f854 5b04 	ldr.w	r5, [r4], #4
	print_buffer_t buf = {
 8006bb2:	22ca      	movs	r2, #202	; 0xca
 8006bb4:	a801      	add	r0, sp, #4
 8006bb6:	f7ff fee7 	bl	8006988 <memcpy>
		.buffer   = {0}
	};
	va_list        va;

	va_start(va, format);
	int ret = fctvprintf(out_func, &buf, format, va);
 8006bba:	462a      	mov	r2, r5
 8006bbc:	4623      	mov	r3, r4
 8006bbe:	480b      	ldr	r0, [pc, #44]	; (8006bec <__wrap_printf+0x48>)
	va_start(va, format);
 8006bc0:	9400      	str	r4, [sp, #0]
	int ret = fctvprintf(out_func, &buf, format, va);
 8006bc2:	a901      	add	r1, sp, #4
 8006bc4:	f000 fd54 	bl	8007670 <fctvprintf>
	if (buf.position != 0)
 8006bc8:	f8bd 20cc 	ldrh.w	r2, [sp, #204]	; 0xcc
	int ret = fctvprintf(out_func, &buf, format, va);
 8006bcc:	4604      	mov	r4, r0
	if (buf.position != 0)
 8006bce:	b92a      	cbnz	r2, 8006bdc <__wrap_printf+0x38>
	}

	va_end(va);

	return ret;
}
 8006bd0:	4620      	mov	r0, r4
 8006bd2:	b035      	add	sp, #212	; 0xd4
 8006bd4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006bd8:	b004      	add	sp, #16
 8006bda:	4770      	bx	lr
		_write(0, buf.buffer, buf.position);
 8006bdc:	a901      	add	r1, sp, #4
 8006bde:	2000      	movs	r0, #0
 8006be0:	f7ff fe46 	bl	8006870 <_write>
	return ret;
 8006be4:	e7f4      	b.n	8006bd0 <__wrap_printf+0x2c>
 8006be6:	bf00      	nop
 8006be8:	08009ed8 	.word	0x08009ed8
 8006bec:	08006b51 	.word	0x08006b51

08006bf0 <__wrap_vsnprintf>:
}


int __wrap_vsnprintf(char *buffer, size_t count, const char *format, va_list va)
{
	return vsnprintf_(buffer, count, format, va);
 8006bf0:	f000 bd2e 	b.w	8007650 <vsnprintf_>

08006bf4 <_out_buffer>:


// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
{
  if (idx < maxlen) {
 8006bf4:	429a      	cmp	r2, r3
    ((char*)buffer)[idx] = character;
 8006bf6:	bf38      	it	cc
 8006bf8:	5488      	strbcc	r0, [r1, r2]
  }
}
 8006bfa:	4770      	bx	lr

08006bfc <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
 8006bfc:	4770      	bx	lr
 8006bfe:	bf00      	nop

08006c00 <_ntoa_format>:
}


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8006c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c04:	b083      	sub	sp, #12
 8006c06:	4617      	mov	r7, r2
 8006c08:	f8dd c048 	ldr.w	ip, [sp, #72]	; 0x48
 8006c0c:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
 8006c10:	f01c 0202 	ands.w	r2, ip, #2
{
 8006c14:	e9dd 840c 	ldrd	r8, r4, [sp, #48]	; 0x30
 8006c18:	e9dd e610 	ldrd	lr, r6, [sp, #64]	; 0x40
 8006c1c:	4605      	mov	r5, r0
 8006c1e:	4689      	mov	r9, r1
  if (!(flags & FLAGS_LEFT)) {
 8006c20:	9200      	str	r2, [sp, #0]
 8006c22:	d12a      	bne.n	8006c7a <_ntoa_format+0x7a>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 8006c24:	2e00      	cmp	r6, #0
 8006c26:	f040 80ae 	bne.w	8006d86 <_ntoa_format+0x186>
      width--;
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c2a:	4574      	cmp	r4, lr
 8006c2c:	f00c 0001 	and.w	r0, ip, #1
 8006c30:	f080 811a 	bcs.w	8006e68 <_ntoa_format+0x268>
 8006c34:	2c1f      	cmp	r4, #31
 8006c36:	bf88      	it	hi
 8006c38:	2420      	movhi	r4, #32
 8006c3a:	f200 8115 	bhi.w	8006e68 <_ntoa_format+0x268>
 8006c3e:	1e62      	subs	r2, r4, #1
 8006c40:	4442      	add	r2, r8
      buf[len++] = '0';
 8006c42:	f04f 0b30 	mov.w	fp, #48	; 0x30
 8006c46:	e001      	b.n	8006c4c <_ntoa_format+0x4c>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c48:	2c20      	cmp	r4, #32
 8006c4a:	d004      	beq.n	8006c56 <_ntoa_format+0x56>
      buf[len++] = '0';
 8006c4c:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c4e:	45a6      	cmp	lr, r4
      buf[len++] = '0';
 8006c50:	f802 bf01 	strb.w	fp, [r2, #1]!
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c54:	d8f8      	bhi.n	8006c48 <_ntoa_format+0x48>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c56:	b180      	cbz	r0, 8006c7a <_ntoa_format+0x7a>
 8006c58:	42a6      	cmp	r6, r4
 8006c5a:	d90e      	bls.n	8006c7a <_ntoa_format+0x7a>
 8006c5c:	2c20      	cmp	r4, #32
 8006c5e:	f000 80a3 	beq.w	8006da8 <_ntoa_format+0x1a8>
 8006c62:	1e62      	subs	r2, r4, #1
 8006c64:	4442      	add	r2, r8
      buf[len++] = '0';
 8006c66:	2030      	movs	r0, #48	; 0x30
 8006c68:	e002      	b.n	8006c70 <_ntoa_format+0x70>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c6a:	2c20      	cmp	r4, #32
 8006c6c:	f000 809c 	beq.w	8006da8 <_ntoa_format+0x1a8>
      buf[len++] = '0';
 8006c70:	3401      	adds	r4, #1
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c72:	42b4      	cmp	r4, r6
      buf[len++] = '0';
 8006c74:	f802 0f01 	strb.w	r0, [r2, #1]!
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c78:	d1f7      	bne.n	8006c6a <_ntoa_format+0x6a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
 8006c7a:	f01c 0f10 	tst.w	ip, #16
 8006c7e:	d033      	beq.n	8006ce8 <_ntoa_format+0xe8>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 8006c80:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 8006c84:	f040 809c 	bne.w	8006dc0 <_ntoa_format+0x1c0>
 8006c88:	2c00      	cmp	r4, #0
 8006c8a:	f040 8095 	bne.w	8006db8 <_ntoa_format+0x1b8>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006c90:	2a10      	cmp	r2, #16
 8006c92:	f000 80ce 	beq.w	8006e32 <_ntoa_format+0x232>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006c96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006c98:	2a02      	cmp	r2, #2
 8006c9a:	f000 80e0 	beq.w	8006e5e <_ntoa_format+0x25e>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
      buf[len++] = '0';
 8006c9e:	2230      	movs	r2, #48	; 0x30
 8006ca0:	f888 2000 	strb.w	r2, [r8]
 8006ca4:	2401      	movs	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
    if (negative) {
 8006ca6:	f1ba 0f00 	cmp.w	sl, #0
 8006caa:	f000 8096 	beq.w	8006dda <_ntoa_format+0x1da>
      buf[len++] = '-';
 8006cae:	222d      	movs	r2, #45	; 0x2d
 8006cb0:	f808 2004 	strb.w	r2, [r8, r4]
 8006cb4:	3401      	adds	r4, #1
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006cb6:	f01c 0f03 	tst.w	ip, #3
 8006cba:	d101      	bne.n	8006cc0 <_ntoa_format+0xc0>
    for (size_t i = len; i < width; i++) {
 8006cbc:	42b4      	cmp	r4, r6
 8006cbe:	d31b      	bcc.n	8006cf8 <_ntoa_format+0xf8>
 8006cc0:	46ba      	mov	sl, r7
 8006cc2:	e02f      	b.n	8006d24 <_ntoa_format+0x124>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006cc4:	f01c 0f20 	tst.w	ip, #32
 8006cc8:	f040 80bb 	bne.w	8006e42 <_ntoa_format+0x242>
 8006ccc:	2c20      	cmp	r4, #32
 8006cce:	d00d      	beq.n	8006cec <_ntoa_format+0xec>
 8006cd0:	eb08 0004 	add.w	r0, r8, r4
 8006cd4:	3401      	adds	r4, #1
      buf[len++] = 'x';
 8006cd6:	2278      	movs	r2, #120	; 0x78
 8006cd8:	7002      	strb	r2, [r0, #0]
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
 8006cda:	2c20      	cmp	r4, #32
 8006cdc:	d006      	beq.n	8006cec <_ntoa_format+0xec>
 8006cde:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = '0';
 8006ce2:	2030      	movs	r0, #48	; 0x30
 8006ce4:	3401      	adds	r4, #1
 8006ce6:	7010      	strb	r0, [r2, #0]
  if (len < PRINTF_NTOA_BUFFER_SIZE) {
 8006ce8:	2c20      	cmp	r4, #32
 8006cea:	d1dc      	bne.n	8006ca6 <_ntoa_format+0xa6>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006cec:	f01c 0f03 	tst.w	ip, #3
 8006cf0:	d116      	bne.n	8006d20 <_ntoa_format+0x120>
 8006cf2:	2420      	movs	r4, #32
    for (size_t i = len; i < width; i++) {
 8006cf4:	42a6      	cmp	r6, r4
 8006cf6:	d979      	bls.n	8006dec <_ntoa_format+0x1ec>
 8006cf8:	eb07 0a06 	add.w	sl, r7, r6
 8006cfc:	ebaa 0a04 	sub.w	sl, sl, r4
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006d00:	9401      	str	r4, [sp, #4]
 8006d02:	46bb      	mov	fp, r7
 8006d04:	461c      	mov	r4, r3
      out(' ', buffer, idx++, maxlen);
 8006d06:	465a      	mov	r2, fp
 8006d08:	4623      	mov	r3, r4
 8006d0a:	f10b 0b01 	add.w	fp, fp, #1
 8006d0e:	4649      	mov	r1, r9
 8006d10:	2020      	movs	r0, #32
 8006d12:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
 8006d14:	45d3      	cmp	fp, sl
 8006d16:	d1f6      	bne.n	8006d06 <_ntoa_format+0x106>
  while (len) {
 8006d18:	4623      	mov	r3, r4
 8006d1a:	9c01      	ldr	r4, [sp, #4]
 8006d1c:	b914      	cbnz	r4, 8006d24 <_ntoa_format+0x124>
 8006d1e:	e012      	b.n	8006d46 <_ntoa_format+0x146>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006d20:	46ba      	mov	sl, r7
 8006d22:	2420      	movs	r4, #32
 8006d24:	44a2      	add	sl, r4
 8006d26:	9611      	str	r6, [sp, #68]	; 0x44
 8006d28:	4444      	add	r4, r8
 8006d2a:	eb08 0b0a 	add.w	fp, r8, sl
 8006d2e:	461e      	mov	r6, r3
 8006d30:	ebab 0204 	sub.w	r2, fp, r4
    out(buf[--len], buffer, idx++, maxlen);
 8006d34:	f814 0d01 	ldrb.w	r0, [r4, #-1]!
 8006d38:	4633      	mov	r3, r6
 8006d3a:	4649      	mov	r1, r9
 8006d3c:	47a8      	blx	r5
  while (len) {
 8006d3e:	4544      	cmp	r4, r8
 8006d40:	d1f6      	bne.n	8006d30 <_ntoa_format+0x130>
 8006d42:	4633      	mov	r3, r6
 8006d44:	9e11      	ldr	r6, [sp, #68]	; 0x44
  if (flags & FLAGS_LEFT) {
 8006d46:	9a00      	ldr	r2, [sp, #0]
 8006d48:	b1ca      	cbz	r2, 8006d7e <_ntoa_format+0x17e>
    while (idx - start_idx < width) {
 8006d4a:	ebaa 0407 	sub.w	r4, sl, r7
 8006d4e:	42a6      	cmp	r6, r4
 8006d50:	d915      	bls.n	8006d7e <_ntoa_format+0x17e>
 8006d52:	4698      	mov	r8, r3
      out(' ', buffer, idx++, maxlen);
 8006d54:	193a      	adds	r2, r7, r4
 8006d56:	4643      	mov	r3, r8
 8006d58:	4649      	mov	r1, r9
 8006d5a:	3401      	adds	r4, #1
 8006d5c:	2020      	movs	r0, #32
 8006d5e:	47a8      	blx	r5
    while (idx - start_idx < width) {
 8006d60:	42a6      	cmp	r6, r4
 8006d62:	d8f7      	bhi.n	8006d54 <_ntoa_format+0x154>
 8006d64:	1e7b      	subs	r3, r7, #1
 8006d66:	4433      	add	r3, r6
 8006d68:	f1c7 0701 	rsb	r7, r7, #1
 8006d6c:	eba3 030a 	sub.w	r3, r3, sl
 8006d70:	4457      	add	r7, sl
 8006d72:	42b7      	cmp	r7, r6
 8006d74:	bf88      	it	hi
 8006d76:	2300      	movhi	r3, #0
 8006d78:	f10a 0a01 	add.w	sl, sl, #1
 8006d7c:	449a      	add	sl, r3
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
}
 8006d7e:	4650      	mov	r0, sl
 8006d80:	b003      	add	sp, #12
 8006d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 8006d86:	f01c 0001 	ands.w	r0, ip, #1
 8006d8a:	d033      	beq.n	8006df4 <_ntoa_format+0x1f4>
 8006d8c:	f1ba 0f00 	cmp.w	sl, #0
 8006d90:	d13d      	bne.n	8006e0e <_ntoa_format+0x20e>
 8006d92:	f01c 0f0c 	tst.w	ip, #12
 8006d96:	d13a      	bne.n	8006e0e <_ntoa_format+0x20e>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006d98:	4574      	cmp	r4, lr
 8006d9a:	f4bf af5d 	bcs.w	8006c58 <_ntoa_format+0x58>
 8006d9e:	2c1f      	cmp	r4, #31
 8006da0:	f67f af4d 	bls.w	8006c3e <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006da4:	2e20      	cmp	r6, #32
 8006da6:	d92b      	bls.n	8006e00 <_ntoa_format+0x200>
  if (flags & FLAGS_HASH) {
 8006da8:	f01c 0f10 	tst.w	ip, #16
 8006dac:	d09e      	beq.n	8006cec <_ntoa_format+0xec>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 8006dae:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 8006db2:	f04f 0420 	mov.w	r4, #32
 8006db6:	d103      	bne.n	8006dc0 <_ntoa_format+0x1c0>
 8006db8:	45a6      	cmp	lr, r4
 8006dba:	d02a      	beq.n	8006e12 <_ntoa_format+0x212>
 8006dbc:	42b4      	cmp	r4, r6
 8006dbe:	d028      	beq.n	8006e12 <_ntoa_format+0x212>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006dc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006dc2:	2a10      	cmp	r2, #16
 8006dc4:	f43f af7e 	beq.w	8006cc4 <_ntoa_format+0xc4>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006dc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006dca:	2a02      	cmp	r2, #2
 8006dcc:	d185      	bne.n	8006cda <_ntoa_format+0xda>
 8006dce:	2c20      	cmp	r4, #32
 8006dd0:	d08c      	beq.n	8006cec <_ntoa_format+0xec>
 8006dd2:	eb08 0204 	add.w	r2, r8, r4
 8006dd6:	3401      	adds	r4, #1
 8006dd8:	e054      	b.n	8006e84 <_ntoa_format+0x284>
    else if (flags & FLAGS_PLUS) {
 8006dda:	f01c 0f04 	tst.w	ip, #4
 8006dde:	d111      	bne.n	8006e04 <_ntoa_format+0x204>
    else if (flags & FLAGS_SPACE) {
 8006de0:	f01c 0f08 	tst.w	ip, #8
 8006de4:	d120      	bne.n	8006e28 <_ntoa_format+0x228>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006de6:	f01c 0f03 	tst.w	ip, #3
 8006dea:	d083      	beq.n	8006cf4 <_ntoa_format+0xf4>
    for (size_t i = len; i < width; i++) {
 8006dec:	46ba      	mov	sl, r7
  while (len) {
 8006dee:	2c00      	cmp	r4, #0
 8006df0:	d198      	bne.n	8006d24 <_ntoa_format+0x124>
 8006df2:	e7a8      	b.n	8006d46 <_ntoa_format+0x146>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006df4:	4574      	cmp	r4, lr
 8006df6:	f4bf af40 	bcs.w	8006c7a <_ntoa_format+0x7a>
 8006dfa:	2c1f      	cmp	r4, #31
 8006dfc:	f67f af1f 	bls.w	8006c3e <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e00:	2420      	movs	r4, #32
 8006e02:	e73a      	b.n	8006c7a <_ntoa_format+0x7a>
      buf[len++] = '+';  // ignore the space if the '+' exists
 8006e04:	222b      	movs	r2, #43	; 0x2b
 8006e06:	f808 2004 	strb.w	r2, [r8, r4]
 8006e0a:	3401      	adds	r4, #1
 8006e0c:	e753      	b.n	8006cb6 <_ntoa_format+0xb6>
      width--;
 8006e0e:	3e01      	subs	r6, #1
 8006e10:	e7c2      	b.n	8006d98 <_ntoa_format+0x198>
      if (len && (base == 16U)) {
 8006e12:	1e62      	subs	r2, r4, #1
 8006e14:	f43f af3b 	beq.w	8006c8e <_ntoa_format+0x8e>
 8006e18:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006e1a:	2910      	cmp	r1, #16
 8006e1c:	d028      	beq.n	8006e70 <_ntoa_format+0x270>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e1e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006e20:	2902      	cmp	r1, #2
 8006e22:	d02e      	beq.n	8006e82 <_ntoa_format+0x282>
 8006e24:	4614      	mov	r4, r2
 8006e26:	e75a      	b.n	8006cde <_ntoa_format+0xde>
      buf[len++] = ' ';
 8006e28:	2220      	movs	r2, #32
 8006e2a:	f808 2004 	strb.w	r2, [r8, r4]
 8006e2e:	3401      	adds	r4, #1
 8006e30:	e741      	b.n	8006cb6 <_ntoa_format+0xb6>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e32:	f01c 0f20 	tst.w	ip, #32
 8006e36:	d10d      	bne.n	8006e54 <_ntoa_format+0x254>
      buf[len++] = 'x';
 8006e38:	2278      	movs	r2, #120	; 0x78
 8006e3a:	f888 2000 	strb.w	r2, [r8]
 8006e3e:	2401      	movs	r4, #1
 8006e40:	e74d      	b.n	8006cde <_ntoa_format+0xde>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e42:	2c20      	cmp	r4, #32
 8006e44:	f43f af52 	beq.w	8006cec <_ntoa_format+0xec>
 8006e48:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = 'X';
 8006e4c:	2058      	movs	r0, #88	; 0x58
 8006e4e:	3401      	adds	r4, #1
 8006e50:	7010      	strb	r0, [r2, #0]
 8006e52:	e742      	b.n	8006cda <_ntoa_format+0xda>
 8006e54:	2258      	movs	r2, #88	; 0x58
 8006e56:	f888 2000 	strb.w	r2, [r8]
 8006e5a:	2401      	movs	r4, #1
 8006e5c:	e73f      	b.n	8006cde <_ntoa_format+0xde>
      buf[len++] = 'b';
 8006e5e:	2262      	movs	r2, #98	; 0x62
 8006e60:	f888 2000 	strb.w	r2, [r8]
 8006e64:	2401      	movs	r4, #1
 8006e66:	e73a      	b.n	8006cde <_ntoa_format+0xde>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e68:	2800      	cmp	r0, #0
 8006e6a:	bf08      	it	eq
 8006e6c:	2600      	moveq	r6, #0
 8006e6e:	e704      	b.n	8006c7a <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e70:	f01c 0f20 	tst.w	ip, #32
        len--;
 8006e74:	f1a4 0402 	sub.w	r4, r4, #2
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006e78:	d1e6      	bne.n	8006e48 <_ntoa_format+0x248>
 8006e7a:	eb08 0004 	add.w	r0, r8, r4
 8006e7e:	4614      	mov	r4, r2
 8006e80:	e729      	b.n	8006cd6 <_ntoa_format+0xd6>
 8006e82:	4442      	add	r2, r8
      buf[len++] = 'b';
 8006e84:	2062      	movs	r0, #98	; 0x62
 8006e86:	7010      	strb	r0, [r2, #0]
 8006e88:	e727      	b.n	8006cda <_ntoa_format+0xda>
 8006e8a:	bf00      	nop

08006e8c <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8006e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e90:	b093      	sub	sp, #76	; 0x4c
 8006e92:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8006e94:	f89d 4074 	ldrb.w	r4, [sp, #116]	; 0x74
 8006e98:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8006e9a:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 8006e9e:	9409      	str	r4, [sp, #36]	; 0x24
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 8006ea0:	b92d      	cbnz	r5, 8006eae <_ntoa_long+0x22>
    flags &= ~FLAGS_HASH;
 8006ea2:	f02a 0410 	bic.w	r4, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 8006ea6:	f41a 6f80 	tst.w	sl, #1024	; 0x400
    flags &= ~FLAGS_HASH;
 8006eaa:	46a2      	mov	sl, r4
  if (!(flags & FLAGS_PRECISION) || value) {
 8006eac:	d134      	bne.n	8006f18 <_ntoa_long+0x8c>
 8006eae:	f01a 0f20 	tst.w	sl, #32
 8006eb2:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8006eb6:	bf14      	ite	ne
 8006eb8:	f04f 0937 	movne.w	r9, #55	; 0x37
 8006ebc:	f04f 0957 	moveq.w	r9, #87	; 0x57
 8006ec0:	46d8      	mov	r8, fp
 8006ec2:	2700      	movs	r7, #0
 8006ec4:	e002      	b.n	8006ecc <_ntoa_long+0x40>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8006ec6:	2f20      	cmp	r7, #32
 8006ec8:	d015      	beq.n	8006ef6 <_ntoa_long+0x6a>
      value /= base;
 8006eca:	4675      	mov	r5, lr
      const char digit = (char)(value % base);
 8006ecc:	fbb5 fef6 	udiv	lr, r5, r6
 8006ed0:	fb06 5c1e 	mls	ip, r6, lr, r5
 8006ed4:	fa5f f48c 	uxtb.w	r4, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8006ed8:	f1bc 0f09 	cmp.w	ip, #9
 8006edc:	f104 0c30 	add.w	ip, r4, #48	; 0x30
 8006ee0:	bf8a      	itet	hi
 8006ee2:	444c      	addhi	r4, r9
 8006ee4:	fa5f f48c 	uxtbls.w	r4, ip
 8006ee8:	b2e4      	uxtbhi	r4, r4
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8006eea:	42b5      	cmp	r5, r6
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8006eec:	f808 4b01 	strb.w	r4, [r8], #1
 8006ef0:	f107 0701 	add.w	r7, r7, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8006ef4:	d2e7      	bcs.n	8006ec6 <_ntoa_long+0x3a>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 8006ef6:	9c20      	ldr	r4, [sp, #128]	; 0x80
 8006ef8:	9405      	str	r4, [sp, #20]
 8006efa:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8006efc:	f8cd a018 	str.w	sl, [sp, #24]
 8006f00:	e9cd 6403 	strd	r6, r4, [sp, #12]
 8006f04:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8006f06:	f8cd b000 	str.w	fp, [sp]
 8006f0a:	e9cd 7401 	strd	r7, r4, [sp, #4]
 8006f0e:	f7ff fe77 	bl	8006c00 <_ntoa_format>
}
 8006f12:	b013      	add	sp, #76	; 0x4c
 8006f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  size_t len = 0U;
 8006f18:	462f      	mov	r7, r5
 8006f1a:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 8006f1e:	e7ea      	b.n	8006ef6 <_ntoa_long+0x6a>

08006f20 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8006f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f24:	ed2d 8b04 	vpush	{d8-d9}
 8006f28:	b093      	sub	sp, #76	; 0x4c
 8006f2a:	e9dd 4520 	ldrd	r4, r5, [sp, #128]	; 0x80
 8006f2e:	469b      	mov	fp, r3
 8006f30:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 8006f34:	9308      	str	r3, [sp, #32]
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 8006f36:	ea54 0305 	orrs.w	r3, r4, r5
{
 8006f3a:	e9dd 8924 	ldrd	r8, r9, [sp, #144]	; 0x90
 8006f3e:	ee08 0a10 	vmov	s16, r0
 8006f42:	ee08 1a90 	vmov	s17, r1
 8006f46:	ee09 2a10 	vmov	s18, r2
  if (!value) {
 8006f4a:	d106      	bne.n	8006f5a <_ntoa_long_long+0x3a>
    flags &= ~FLAGS_HASH;
 8006f4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 8006f4e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
    flags &= ~FLAGS_HASH;
 8006f50:	f023 0310 	bic.w	r3, r3, #16
 8006f54:	9328      	str	r3, [sp, #160]	; 0xa0
  if (!(flags & FLAGS_PRECISION) || value) {
 8006f56:	0553      	lsls	r3, r2, #21
 8006f58:	d440      	bmi.n	8006fdc <_ntoa_long_long+0xbc>
 8006f5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8006f5c:	f013 0f20 	tst.w	r3, #32
 8006f60:	ab0a      	add	r3, sp, #40	; 0x28
 8006f62:	9309      	str	r3, [sp, #36]	; 0x24
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8006f64:	bf14      	ite	ne
 8006f66:	f04f 0a37 	movne.w	sl, #55	; 0x37
 8006f6a:	f04f 0a57 	moveq.w	sl, #87	; 0x57
 8006f6e:	461f      	mov	r7, r3
 8006f70:	2600      	movs	r6, #0
 8006f72:	e003      	b.n	8006f7c <_ntoa_long_long+0x5c>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8006f74:	2e20      	cmp	r6, #32
 8006f76:	d017      	beq.n	8006fa8 <_ntoa_long_long+0x88>
      value /= base;
 8006f78:	4604      	mov	r4, r0
 8006f7a:	460d      	mov	r5, r1
      const char digit = (char)(value % base);
 8006f7c:	4642      	mov	r2, r8
 8006f7e:	464b      	mov	r3, r9
 8006f80:	4620      	mov	r0, r4
 8006f82:	4629      	mov	r1, r5
 8006f84:	f7fe fd08 	bl	8005998 <__aeabi_uldivmod>
 8006f88:	b2d2      	uxtb	r2, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8006f8a:	2a09      	cmp	r2, #9
 8006f8c:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8006f90:	bf8a      	itet	hi
 8006f92:	4452      	addhi	r2, sl
 8006f94:	b2da      	uxtbls	r2, r3
 8006f96:	b2d2      	uxtbhi	r2, r2
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8006f98:	454d      	cmp	r5, r9
 8006f9a:	bf08      	it	eq
 8006f9c:	4544      	cmpeq	r4, r8
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8006f9e:	f807 2b01 	strb.w	r2, [r7], #1
 8006fa2:	f106 0601 	add.w	r6, r6, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8006fa6:	d2e5      	bcs.n	8006f74 <_ntoa_long_long+0x54>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 8006fa8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8006faa:	9306      	str	r3, [sp, #24]
 8006fac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8006fae:	9305      	str	r3, [sp, #20]
 8006fb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006fb2:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8006fb6:	9b08      	ldr	r3, [sp, #32]
 8006fb8:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8006fbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006fbe:	9300      	str	r3, [sp, #0]
 8006fc0:	ee19 2a10 	vmov	r2, s18
 8006fc4:	ee18 1a90 	vmov	r1, s17
 8006fc8:	ee18 0a10 	vmov	r0, s16
 8006fcc:	465b      	mov	r3, fp
 8006fce:	f7ff fe17 	bl	8006c00 <_ntoa_format>
}
 8006fd2:	b013      	add	sp, #76	; 0x4c
 8006fd4:	ecbd 8b04 	vpop	{d8-d9}
 8006fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006fdc:	ab0a      	add	r3, sp, #40	; 0x28
  size_t len = 0U;
 8006fde:	2600      	movs	r6, #0
 8006fe0:	9309      	str	r3, [sp, #36]	; 0x24
 8006fe2:	e7e1      	b.n	8006fa8 <_ntoa_long_long+0x88>

08006fe4 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
 8006fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    // use null output function
    out = _out_null;
 8006fe8:	4eca      	ldr	r6, [pc, #808]	; (8007314 <_vsnprintf+0x330>)
{
 8006fea:	b091      	sub	sp, #68	; 0x44
 8006fec:	461c      	mov	r4, r3
  }

  while (*format)
 8006fee:	781b      	ldrb	r3, [r3, #0]
 8006ff0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    out = _out_null;
 8006ff2:	f1b1 0a00 	subs.w	sl, r1, #0
{
 8006ff6:	4691      	mov	r9, r2
    out = _out_null;
 8006ff8:	bf14      	ite	ne
 8006ffa:	4683      	movne	fp, r0
 8006ffc:	46b3      	moveq	fp, r6
  while (*format)
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	f000 8279 	beq.w	80074f6 <_vsnprintf+0x512>
 8007004:	f04f 0800 	mov.w	r8, #0
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 8007008:	4618      	mov	r0, r3
 800700a:	e00a      	b.n	8007022 <_vsnprintf+0x3e>
        out('%', buffer, idx++, maxlen);
        format++;
        break;

      default :
        out(*format, buffer, idx++, maxlen);
 800700c:	4642      	mov	r2, r8
 800700e:	464b      	mov	r3, r9
 8007010:	4651      	mov	r1, sl
 8007012:	f108 0801 	add.w	r8, r8, #1
        format++;
 8007016:	3401      	adds	r4, #1
        out(*format, buffer, idx++, maxlen);
 8007018:	47d8      	blx	fp
  while (*format)
 800701a:	7820      	ldrb	r0, [r4, #0]
 800701c:	2800      	cmp	r0, #0
 800701e:	f000 8125 	beq.w	800726c <_vsnprintf+0x288>
    if (*format != '%') {
 8007022:	2825      	cmp	r0, #37	; 0x25
 8007024:	d1f2      	bne.n	800700c <_vsnprintf+0x28>
      format++;
 8007026:	1c63      	adds	r3, r4, #1
    flags = 0U;
 8007028:	2100      	movs	r1, #0
 800702a:	461c      	mov	r4, r3
      switch (*format) {
 800702c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8007030:	f1a0 0220 	sub.w	r2, r0, #32
 8007034:	2a10      	cmp	r2, #16
 8007036:	d80a      	bhi.n	800704e <_vsnprintf+0x6a>
 8007038:	e8df f002 	tbb	[pc, r2]
 800703c:	3809093b 	.word	0x3809093b
 8007040:	09090909 	.word	0x09090909
 8007044:	35090909 	.word	0x35090909
 8007048:	09093209 	.word	0x09093209
 800704c:	2f          	.byte	0x2f
 800704d:	00          	.byte	0x00
    if (_is_digit(*format)) {
 800704e:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8007052:	2b09      	cmp	r3, #9
 8007054:	f240 80eb 	bls.w	800722e <_vsnprintf+0x24a>
    else if (*format == '*') {
 8007058:	282a      	cmp	r0, #42	; 0x2a
 800705a:	f000 8115 	beq.w	8007288 <_vsnprintf+0x2a4>
    width = 0U;
 800705e:	2600      	movs	r6, #0
    if (*format == '.') {
 8007060:	282e      	cmp	r0, #46	; 0x2e
 8007062:	f000 80f4 	beq.w	800724e <_vsnprintf+0x26a>
    precision = 0U;
 8007066:	2700      	movs	r7, #0
    switch (*format) {
 8007068:	f1a0 0368 	sub.w	r3, r0, #104	; 0x68
 800706c:	2b12      	cmp	r3, #18
 800706e:	d82a      	bhi.n	80070c6 <_vsnprintf+0xe2>
 8007070:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007074:	00290152 	.word	0x00290152
 8007078:	0029014a 	.word	0x0029014a
 800707c:	00290022 	.word	0x00290022
 8007080:	00290029 	.word	0x00290029
 8007084:	00290029 	.word	0x00290029
 8007088:	00290029 	.word	0x00290029
 800708c:	002900d8 	.word	0x002900d8
 8007090:	00290029 	.word	0x00290029
 8007094:	00290029 	.word	0x00290029
 8007098:	00d8      	.short	0x00d8
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 800709a:	f041 0101 	orr.w	r1, r1, #1
    } while (n);
 800709e:	e7c4      	b.n	800702a <_vsnprintf+0x46>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 80070a0:	f041 0102 	orr.w	r1, r1, #2
    } while (n);
 80070a4:	e7c1      	b.n	800702a <_vsnprintf+0x46>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 80070a6:	f041 0104 	orr.w	r1, r1, #4
    } while (n);
 80070aa:	e7be      	b.n	800702a <_vsnprintf+0x46>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 80070ac:	f041 0110 	orr.w	r1, r1, #16
    } while (n);
 80070b0:	e7bb      	b.n	800702a <_vsnprintf+0x46>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 80070b2:	f041 0108 	orr.w	r1, r1, #8
    } while (n);
 80070b6:	e7b8      	b.n	800702a <_vsnprintf+0x46>
        if (*format == 'l') {
 80070b8:	7860      	ldrb	r0, [r4, #1]
 80070ba:	286c      	cmp	r0, #108	; 0x6c
 80070bc:	f000 820e 	beq.w	80074dc <_vsnprintf+0x4f8>
        flags |= FLAGS_LONG;
 80070c0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 80070c4:	3401      	adds	r4, #1
    switch (*format) {
 80070c6:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
 80070ca:	2b53      	cmp	r3, #83	; 0x53
 80070cc:	d89e      	bhi.n	800700c <_vsnprintf+0x28>
 80070ce:	a201      	add	r2, pc, #4	; (adr r2, 80070d4 <_vsnprintf+0xf0>)
 80070d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80070d4:	08007329 	.word	0x08007329
 80070d8:	0800700d 	.word	0x0800700d
 80070dc:	0800700d 	.word	0x0800700d
 80070e0:	0800700d 	.word	0x0800700d
 80070e4:	0800700d 	.word	0x0800700d
 80070e8:	0800700d 	.word	0x0800700d
 80070ec:	0800700d 	.word	0x0800700d
 80070f0:	0800700d 	.word	0x0800700d
 80070f4:	0800700d 	.word	0x0800700d
 80070f8:	0800700d 	.word	0x0800700d
 80070fc:	0800700d 	.word	0x0800700d
 8007100:	0800700d 	.word	0x0800700d
 8007104:	0800700d 	.word	0x0800700d
 8007108:	0800700d 	.word	0x0800700d
 800710c:	0800700d 	.word	0x0800700d
 8007110:	0800700d 	.word	0x0800700d
 8007114:	0800700d 	.word	0x0800700d
 8007118:	0800700d 	.word	0x0800700d
 800711c:	0800700d 	.word	0x0800700d
 8007120:	0800700d 	.word	0x0800700d
 8007124:	0800700d 	.word	0x0800700d
 8007128:	0800700d 	.word	0x0800700d
 800712c:	0800700d 	.word	0x0800700d
 8007130:	0800700d 	.word	0x0800700d
 8007134:	0800700d 	.word	0x0800700d
 8007138:	0800700d 	.word	0x0800700d
 800713c:	0800700d 	.word	0x0800700d
 8007140:	0800700d 	.word	0x0800700d
 8007144:	0800700d 	.word	0x0800700d
 8007148:	0800700d 	.word	0x0800700d
 800714c:	0800700d 	.word	0x0800700d
 8007150:	0800700d 	.word	0x0800700d
 8007154:	0800700d 	.word	0x0800700d
 8007158:	0800700d 	.word	0x0800700d
 800715c:	0800700d 	.word	0x0800700d
 8007160:	0800700d 	.word	0x0800700d
 8007164:	0800700d 	.word	0x0800700d
 8007168:	0800700d 	.word	0x0800700d
 800716c:	0800700d 	.word	0x0800700d
 8007170:	0800700d 	.word	0x0800700d
 8007174:	0800700d 	.word	0x0800700d
 8007178:	0800700d 	.word	0x0800700d
 800717c:	0800700d 	.word	0x0800700d
 8007180:	0800700d 	.word	0x0800700d
 8007184:	0800700d 	.word	0x0800700d
 8007188:	0800700d 	.word	0x0800700d
 800718c:	0800700d 	.word	0x0800700d
 8007190:	0800700d 	.word	0x0800700d
 8007194:	0800700d 	.word	0x0800700d
 8007198:	0800700d 	.word	0x0800700d
 800719c:	0800700d 	.word	0x0800700d
 80071a0:	0800729d 	.word	0x0800729d
 80071a4:	0800700d 	.word	0x0800700d
 80071a8:	0800700d 	.word	0x0800700d
 80071ac:	0800700d 	.word	0x0800700d
 80071b0:	0800700d 	.word	0x0800700d
 80071b4:	0800700d 	.word	0x0800700d
 80071b8:	0800700d 	.word	0x0800700d
 80071bc:	0800700d 	.word	0x0800700d
 80071c0:	0800700d 	.word	0x0800700d
 80071c4:	0800700d 	.word	0x0800700d
 80071c8:	0800729d 	.word	0x0800729d
 80071cc:	080073fd 	.word	0x080073fd
 80071d0:	0800729d 	.word	0x0800729d
 80071d4:	0800700d 	.word	0x0800700d
 80071d8:	0800700d 	.word	0x0800700d
 80071dc:	0800700d 	.word	0x0800700d
 80071e0:	0800700d 	.word	0x0800700d
 80071e4:	0800729d 	.word	0x0800729d
 80071e8:	0800700d 	.word	0x0800700d
 80071ec:	0800700d 	.word	0x0800700d
 80071f0:	0800700d 	.word	0x0800700d
 80071f4:	0800700d 	.word	0x0800700d
 80071f8:	0800700d 	.word	0x0800700d
 80071fc:	0800729d 	.word	0x0800729d
 8007200:	080073d1 	.word	0x080073d1
 8007204:	0800700d 	.word	0x0800700d
 8007208:	0800700d 	.word	0x0800700d
 800720c:	0800733d 	.word	0x0800733d
 8007210:	0800700d 	.word	0x0800700d
 8007214:	0800729d 	.word	0x0800729d
 8007218:	0800700d 	.word	0x0800700d
 800721c:	0800700d 	.word	0x0800700d
 8007220:	0800729d 	.word	0x0800729d
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8007224:	7860      	ldrb	r0, [r4, #1]
 8007226:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 800722a:	3401      	adds	r4, #1
        break;
 800722c:	e74b      	b.n	80070c6 <_vsnprintf+0xe2>
  unsigned int i = 0U;
 800722e:	2600      	movs	r6, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007230:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8007234:	eb00 0646 	add.w	r6, r0, r6, lsl #1
  while (_is_digit(**str)) {
 8007238:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 800723c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8007240:	2b09      	cmp	r3, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007242:	f1a6 0630 	sub.w	r6, r6, #48	; 0x30
  while (_is_digit(**str)) {
 8007246:	d9f3      	bls.n	8007230 <_vsnprintf+0x24c>
    if (*format == '.') {
 8007248:	282e      	cmp	r0, #46	; 0x2e
 800724a:	f47f af0c 	bne.w	8007066 <_vsnprintf+0x82>
      if (_is_digit(*format)) {
 800724e:	7860      	ldrb	r0, [r4, #1]
 8007250:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 8007254:	2a09      	cmp	r2, #9
      flags |= FLAGS_PRECISION;
 8007256:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
      format++;
 800725a:	f104 0301 	add.w	r3, r4, #1
      if (_is_digit(*format)) {
 800725e:	f240 80e7 	bls.w	8007430 <_vsnprintf+0x44c>
      else if (*format == '*') {
 8007262:	282a      	cmp	r0, #42	; 0x2a
 8007264:	f000 80f3 	beq.w	800744e <_vsnprintf+0x46a>
      format++;
 8007268:	461c      	mov	r4, r3
 800726a:	e6fc      	b.n	8007066 <_vsnprintf+0x82>
 800726c:	4644      	mov	r4, r8
        break;
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 800726e:	45c1      	cmp	r9, r8
 8007270:	d801      	bhi.n	8007276 <_vsnprintf+0x292>
 8007272:	f109 38ff 	add.w	r8, r9, #4294967295	; 0xffffffff
 8007276:	464b      	mov	r3, r9
 8007278:	4642      	mov	r2, r8
 800727a:	4651      	mov	r1, sl
 800727c:	2000      	movs	r0, #0
 800727e:	47d8      	blx	fp

  // return written chars without terminating \0
  return (int)idx;
}
 8007280:	4620      	mov	r0, r4
 8007282:	b011      	add	sp, #68	; 0x44
 8007284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      const int w = va_arg(va, int);
 8007288:	f855 6b04 	ldr.w	r6, [r5], #4
      if (w < 0) {
 800728c:	7860      	ldrb	r0, [r4, #1]
 800728e:	2e00      	cmp	r6, #0
        flags |= FLAGS_LEFT;    // reverse padding
 8007290:	bfbc      	itt	lt
 8007292:	f041 0102 	orrlt.w	r1, r1, #2
        width = (unsigned int)-w;
 8007296:	4276      	neglt	r6, r6
      format++;
 8007298:	3401      	adds	r4, #1
 800729a:	e6e1      	b.n	8007060 <_vsnprintf+0x7c>
        if (*format == 'x' || *format == 'X') {
 800729c:	2878      	cmp	r0, #120	; 0x78
 800729e:	f000 8122 	beq.w	80074e6 <_vsnprintf+0x502>
 80072a2:	2858      	cmp	r0, #88	; 0x58
 80072a4:	f000 80e1 	beq.w	800746a <_vsnprintf+0x486>
        else if (*format == 'o') {
 80072a8:	286f      	cmp	r0, #111	; 0x6f
 80072aa:	f000 818a 	beq.w	80075c2 <_vsnprintf+0x5de>
        else if (*format == 'b') {
 80072ae:	2862      	cmp	r0, #98	; 0x62
 80072b0:	f000 80e5 	beq.w	800747e <_vsnprintf+0x49a>
        if ((*format != 'i') && (*format != 'd')) {
 80072b4:	2869      	cmp	r0, #105	; 0x69
          flags &= ~FLAGS_HASH;   // no hash for dec format
 80072b6:	f021 0310 	bic.w	r3, r1, #16
          base = 10U;
 80072ba:	f04f 0c0a 	mov.w	ip, #10
        if ((*format != 'i') && (*format != 'd')) {
 80072be:	f040 80e1 	bne.w	8007484 <_vsnprintf+0x4a0>
        if (flags & FLAGS_PRECISION) {
 80072c2:	054a      	lsls	r2, r1, #21
 80072c4:	f140 80e5 	bpl.w	8007492 <_vsnprintf+0x4ae>
          flags &= ~FLAGS_ZEROPAD;
 80072c8:	f023 0301 	bic.w	r3, r3, #1
        if ((*format == 'i') || (*format == 'd')) {
 80072cc:	2869      	cmp	r0, #105	; 0x69
 80072ce:	f000 80e0 	beq.w	8007492 <_vsnprintf+0x4ae>
 80072d2:	2864      	cmp	r0, #100	; 0x64
 80072d4:	f000 80dd 	beq.w	8007492 <_vsnprintf+0x4ae>
          if (flags & FLAGS_LONG_LONG) {
 80072d8:	f413 7200 	ands.w	r2, r3, #512	; 0x200
 80072dc:	f040 8175 	bne.w	80075ca <_vsnprintf+0x5e6>
          else if (flags & FLAGS_LONG) {
 80072e0:	05d8      	lsls	r0, r3, #23
 80072e2:	f100 819a 	bmi.w	800761a <_vsnprintf+0x636>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
 80072e6:	0659      	lsls	r1, r3, #25
 80072e8:	f855 2b04 	ldr.w	r2, [r5], #4
 80072ec:	f100 817f 	bmi.w	80075ee <_vsnprintf+0x60a>
 80072f0:	0618      	lsls	r0, r3, #24
 80072f2:	bf48      	it	mi
 80072f4:	b292      	uxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 80072f6:	2100      	movs	r1, #0
 80072f8:	9200      	str	r2, [sp, #0]
 80072fa:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80072fe:	e9cd c702 	strd	ip, r7, [sp, #8]
 8007302:	4642      	mov	r2, r8
 8007304:	9101      	str	r1, [sp, #4]
 8007306:	e0dd      	b.n	80074c4 <_vsnprintf+0x4e0>
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8007308:	7860      	ldrb	r0, [r4, #1]
 800730a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
        format++;
 800730e:	3401      	adds	r4, #1
        break;
 8007310:	e6d9      	b.n	80070c6 <_vsnprintf+0xe2>
 8007312:	bf00      	nop
 8007314:	08006bfd 	.word	0x08006bfd
        if (*format == 'h') {
 8007318:	7860      	ldrb	r0, [r4, #1]
 800731a:	2868      	cmp	r0, #104	; 0x68
 800731c:	f000 80d9 	beq.w	80074d2 <_vsnprintf+0x4ee>
        flags |= FLAGS_SHORT;
 8007320:	f041 0180 	orr.w	r1, r1, #128	; 0x80
        format++;
 8007324:	3401      	adds	r4, #1
 8007326:	e6ce      	b.n	80070c6 <_vsnprintf+0xe2>
        out('%', buffer, idx++, maxlen);
 8007328:	f108 0601 	add.w	r6, r8, #1
 800732c:	4642      	mov	r2, r8
 800732e:	464b      	mov	r3, r9
 8007330:	4651      	mov	r1, sl
 8007332:	2025      	movs	r0, #37	; 0x25
        format++;
 8007334:	3401      	adds	r4, #1
        out('%', buffer, idx++, maxlen);
 8007336:	46b0      	mov	r8, r6
 8007338:	47d8      	blx	fp
        break;
 800733a:	e66e      	b.n	800701a <_vsnprintf+0x36>
        const char* p = va_arg(va, char*);
 800733c:	462a      	mov	r2, r5
 800733e:	f852 3b04 	ldr.w	r3, [r2], #4
 8007342:	930b      	str	r3, [sp, #44]	; 0x2c
 8007344:	920d      	str	r2, [sp, #52]	; 0x34
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 8007346:	2f00      	cmp	r7, #0
 8007348:	f040 8088 	bne.w	800745c <_vsnprintf+0x478>
  for (s = str; *s && maxsize--; ++s);
 800734c:	7818      	ldrb	r0, [r3, #0]
 800734e:	f06f 0501 	mvn.w	r5, #1
 8007352:	2800      	cmp	r0, #0
 8007354:	f000 8174 	beq.w	8007640 <_vsnprintf+0x65c>
 8007358:	1c6b      	adds	r3, r5, #1
 800735a:	461a      	mov	r2, r3
 800735c:	930c      	str	r3, [sp, #48]	; 0x30
 800735e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007360:	189d      	adds	r5, r3, r2
 8007362:	e001      	b.n	8007368 <_vsnprintf+0x384>
 8007364:	429d      	cmp	r5, r3
 8007366:	d006      	beq.n	8007376 <_vsnprintf+0x392>
 8007368:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800736c:	2a00      	cmp	r2, #0
 800736e:	d1f9      	bne.n	8007364 <_vsnprintf+0x380>
 8007370:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007372:	1a9b      	subs	r3, r3, r2
 8007374:	930c      	str	r3, [sp, #48]	; 0x30
        if (flags & FLAGS_PRECISION) {
 8007376:	f411 6380 	ands.w	r3, r1, #1024	; 0x400
 800737a:	930e      	str	r3, [sp, #56]	; 0x38
 800737c:	d004      	beq.n	8007388 <_vsnprintf+0x3a4>
          l = (l < precision ? l : precision);
 800737e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007380:	42bb      	cmp	r3, r7
 8007382:	bf28      	it	cs
 8007384:	463b      	movcs	r3, r7
 8007386:	930c      	str	r3, [sp, #48]	; 0x30
        if (!(flags & FLAGS_LEFT)) {
 8007388:	f011 0302 	ands.w	r3, r1, #2
 800738c:	930f      	str	r3, [sp, #60]	; 0x3c
 800738e:	f000 80e0 	beq.w	8007552 <_vsnprintf+0x56e>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007392:	2800      	cmp	r0, #0
 8007394:	f000 80cb 	beq.w	800752e <_vsnprintf+0x54a>
 8007398:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800739a:	960b      	str	r6, [sp, #44]	; 0x2c
 800739c:	4642      	mov	r2, r8
 800739e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80073a0:	e000      	b.n	80073a4 <_vsnprintf+0x3c0>
          out(*(p++), buffer, idx++, maxlen);
 80073a2:	4642      	mov	r2, r8
 80073a4:	464b      	mov	r3, r9
 80073a6:	4651      	mov	r1, sl
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80073a8:	b11e      	cbz	r6, 80073b2 <_vsnprintf+0x3ce>
 80073aa:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 80073ae:	b13f      	cbz	r7, 80073c0 <_vsnprintf+0x3dc>
 80073b0:	4667      	mov	r7, ip
          out(*(p++), buffer, idx++, maxlen);
 80073b2:	47d8      	blx	fp
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80073b4:	f815 0f01 	ldrb.w	r0, [r5, #1]!
          out(*(p++), buffer, idx++, maxlen);
 80073b8:	f108 0801 	add.w	r8, r8, #1
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80073bc:	2800      	cmp	r0, #0
 80073be:	d1f0      	bne.n	80073a2 <_vsnprintf+0x3be>
        if (flags & FLAGS_LEFT) {
 80073c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80073c2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80073c4:	2b00      	cmp	r3, #0
 80073c6:	f040 80b2 	bne.w	800752e <_vsnprintf+0x54a>
        const char* p = va_arg(va, char*);
 80073ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
        format++;
 80073cc:	3401      	adds	r4, #1
        break;
 80073ce:	e624      	b.n	800701a <_vsnprintf+0x36>
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80073d0:	2208      	movs	r2, #8
 80073d2:	e9cd 7203 	strd	r7, r2, [sp, #12]
 80073d6:	2300      	movs	r3, #0
 80073d8:	2210      	movs	r2, #16
 80073da:	e9cd 3201 	strd	r3, r2, [sp, #4]
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 80073de:	f041 0121 	orr.w	r1, r1, #33	; 0x21
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80073e2:	9105      	str	r1, [sp, #20]
 80073e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80073e8:	9300      	str	r3, [sp, #0]
 80073ea:	4642      	mov	r2, r8
 80073ec:	464b      	mov	r3, r9
 80073ee:	4651      	mov	r1, sl
 80073f0:	4658      	mov	r0, fp
 80073f2:	f7ff fd4b 	bl	8006e8c <_ntoa_long>
        format++;
 80073f6:	3401      	adds	r4, #1
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80073f8:	4680      	mov	r8, r0
        break;
 80073fa:	e60e      	b.n	800701a <_vsnprintf+0x36>
        if (!(flags & FLAGS_LEFT)) {
 80073fc:	0789      	lsls	r1, r1, #30
 80073fe:	d57d      	bpl.n	80074fc <_vsnprintf+0x518>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007400:	f855 0b04 	ldr.w	r0, [r5], #4
 8007404:	464b      	mov	r3, r9
 8007406:	4642      	mov	r2, r8
 8007408:	b2c0      	uxtb	r0, r0
 800740a:	4651      	mov	r1, sl
 800740c:	47d8      	blx	fp
          while (l++ < width) {
 800740e:	2e01      	cmp	r6, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007410:	f108 0701 	add.w	r7, r8, #1
          while (l++ < width) {
 8007414:	bf88      	it	hi
 8007416:	4446      	addhi	r6, r8
 8007418:	d907      	bls.n	800742a <_vsnprintf+0x446>
            out(' ', buffer, idx++, maxlen);
 800741a:	463a      	mov	r2, r7
 800741c:	464b      	mov	r3, r9
 800741e:	3701      	adds	r7, #1
 8007420:	4651      	mov	r1, sl
 8007422:	2020      	movs	r0, #32
 8007424:	47d8      	blx	fp
          while (l++ < width) {
 8007426:	42b7      	cmp	r7, r6
 8007428:	d1f7      	bne.n	800741a <_vsnprintf+0x436>
 800742a:	46b8      	mov	r8, r7
        format++;
 800742c:	3401      	adds	r4, #1
        break;
 800742e:	e5f4      	b.n	800701a <_vsnprintf+0x36>
  unsigned int i = 0U;
 8007430:	2700      	movs	r7, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007432:	eb07 0787 	add.w	r7, r7, r7, lsl #2
 8007436:	eb00 0747 	add.w	r7, r0, r7, lsl #1
  while (_is_digit(**str)) {
 800743a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800743e:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 8007442:	2a09      	cmp	r2, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007444:	f1a7 0730 	sub.w	r7, r7, #48	; 0x30
  while (_is_digit(**str)) {
 8007448:	d9f3      	bls.n	8007432 <_vsnprintf+0x44e>
 800744a:	461c      	mov	r4, r3
 800744c:	e60c      	b.n	8007068 <_vsnprintf+0x84>
        precision = prec > 0 ? (unsigned int)prec : 0U;
 800744e:	f855 7b04 	ldr.w	r7, [r5], #4
 8007452:	78a0      	ldrb	r0, [r4, #2]
 8007454:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
        format++;
 8007458:	3402      	adds	r4, #2
 800745a:	e605      	b.n	8007068 <_vsnprintf+0x84>
  for (s = str; *s && maxsize--; ++s);
 800745c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800745e:	7818      	ldrb	r0, [r3, #0]
 8007460:	2800      	cmp	r0, #0
 8007462:	f000 80eb 	beq.w	800763c <_vsnprintf+0x658>
 8007466:	1e7d      	subs	r5, r7, #1
 8007468:	e776      	b.n	8007358 <_vsnprintf+0x374>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 800746a:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 800746e:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007470:	f043 0320 	orr.w	r3, r3, #32
          base = 16U;
 8007474:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 8007478:	f53f af26 	bmi.w	80072c8 <_vsnprintf+0x2e4>
 800747c:	e72c      	b.n	80072d8 <_vsnprintf+0x2f4>
          base =  2U;
 800747e:	f04f 0c02 	mov.w	ip, #2
        format++;
 8007482:	460b      	mov	r3, r1
        if ((*format != 'i') && (*format != 'd')) {
 8007484:	2864      	cmp	r0, #100	; 0x64
 8007486:	bf18      	it	ne
 8007488:	4619      	movne	r1, r3
 800748a:	d12e      	bne.n	80074ea <_vsnprintf+0x506>
        if (flags & FLAGS_PRECISION) {
 800748c:	0559      	lsls	r1, r3, #21
 800748e:	f53f af1b 	bmi.w	80072c8 <_vsnprintf+0x2e4>
          if (flags & FLAGS_LONG_LONG) {
 8007492:	0599      	lsls	r1, r3, #22
 8007494:	d476      	bmi.n	8007584 <_vsnprintf+0x5a0>
          else if (flags & FLAGS_LONG) {
 8007496:	05da      	lsls	r2, r3, #23
 8007498:	f100 80b0 	bmi.w	80075fc <_vsnprintf+0x618>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 800749c:	0658      	lsls	r0, r3, #25
 800749e:	f855 2b04 	ldr.w	r2, [r5], #4
 80074a2:	f100 80a2 	bmi.w	80075ea <_vsnprintf+0x606>
 80074a6:	0619      	lsls	r1, r3, #24
 80074a8:	bf48      	it	mi
 80074aa:	b212      	sxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 80074ac:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
 80074b0:	0fd0      	lsrs	r0, r2, #31
 80074b2:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
 80074b6:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80074ba:	e9cd c702 	strd	ip, r7, [sp, #8]
 80074be:	e9cd 1000 	strd	r1, r0, [sp]
 80074c2:	4642      	mov	r2, r8
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 80074c4:	464b      	mov	r3, r9
 80074c6:	4651      	mov	r1, sl
 80074c8:	4658      	mov	r0, fp
 80074ca:	f7ff fcdf 	bl	8006e8c <_ntoa_long>
 80074ce:	4680      	mov	r8, r0
        format++;
 80074d0:	e7ac      	b.n	800742c <_vsnprintf+0x448>
          flags |= FLAGS_CHAR;
 80074d2:	78a0      	ldrb	r0, [r4, #2]
 80074d4:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
          format++;
 80074d8:	3402      	adds	r4, #2
 80074da:	e5f4      	b.n	80070c6 <_vsnprintf+0xe2>
          flags |= FLAGS_LONG_LONG;
 80074dc:	78a0      	ldrb	r0, [r4, #2]
 80074de:	f441 7140 	orr.w	r1, r1, #768	; 0x300
          format++;
 80074e2:	3402      	adds	r4, #2
 80074e4:	e5ef      	b.n	80070c6 <_vsnprintf+0xe2>
          base = 16U;
 80074e6:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 80074ea:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 80074ec:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 80074f0:	f53f aeea 	bmi.w	80072c8 <_vsnprintf+0x2e4>
 80074f4:	e6ea      	b.n	80072cc <_vsnprintf+0x2e8>
  while (*format)
 80074f6:	461c      	mov	r4, r3
 80074f8:	4698      	mov	r8, r3
 80074fa:	e6b8      	b.n	800726e <_vsnprintf+0x28a>
          while (l++ < width) {
 80074fc:	2e01      	cmp	r6, #1
 80074fe:	f240 809b 	bls.w	8007638 <_vsnprintf+0x654>
 8007502:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 8007506:	441e      	add	r6, r3
            out(' ', buffer, idx++, maxlen);
 8007508:	4642      	mov	r2, r8
 800750a:	464b      	mov	r3, r9
 800750c:	f108 0801 	add.w	r8, r8, #1
 8007510:	4651      	mov	r1, sl
 8007512:	2020      	movs	r0, #32
 8007514:	47d8      	blx	fp
          while (l++ < width) {
 8007516:	45b0      	cmp	r8, r6
 8007518:	d1f6      	bne.n	8007508 <_vsnprintf+0x524>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 800751a:	f855 0b04 	ldr.w	r0, [r5], #4
 800751e:	464b      	mov	r3, r9
 8007520:	4632      	mov	r2, r6
 8007522:	b2c0      	uxtb	r0, r0
 8007524:	4651      	mov	r1, sl
 8007526:	f106 0801 	add.w	r8, r6, #1
 800752a:	47d8      	blx	fp
        if (flags & FLAGS_LEFT) {
 800752c:	e77e      	b.n	800742c <_vsnprintf+0x448>
          while (l++ < width) {
 800752e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007530:	429e      	cmp	r6, r3
 8007532:	4645      	mov	r5, r8
 8007534:	f67f af49 	bls.w	80073ca <_vsnprintf+0x3e6>
 8007538:	eb06 0008 	add.w	r0, r6, r8
 800753c:	eba0 0803 	sub.w	r8, r0, r3
            out(' ', buffer, idx++, maxlen);
 8007540:	462a      	mov	r2, r5
 8007542:	464b      	mov	r3, r9
 8007544:	3501      	adds	r5, #1
 8007546:	4651      	mov	r1, sl
 8007548:	2020      	movs	r0, #32
 800754a:	47d8      	blx	fp
          while (l++ < width) {
 800754c:	4545      	cmp	r5, r8
 800754e:	d1f7      	bne.n	8007540 <_vsnprintf+0x55c>
 8007550:	e73b      	b.n	80073ca <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007552:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007554:	4296      	cmp	r6, r2
 8007556:	f102 0301 	add.w	r3, r2, #1
 800755a:	d968      	bls.n	800762e <_vsnprintf+0x64a>
 800755c:	eb06 0508 	add.w	r5, r6, r8
 8007560:	1aad      	subs	r5, r5, r2
            out(' ', buffer, idx++, maxlen);
 8007562:	4642      	mov	r2, r8
 8007564:	464b      	mov	r3, r9
 8007566:	f108 0801 	add.w	r8, r8, #1
 800756a:	4651      	mov	r1, sl
 800756c:	2020      	movs	r0, #32
 800756e:	47d8      	blx	fp
          while (l++ < width) {
 8007570:	45a8      	cmp	r8, r5
 8007572:	d1f6      	bne.n	8007562 <_vsnprintf+0x57e>
 8007574:	1c73      	adds	r3, r6, #1
 8007576:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007578:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800757a:	7818      	ldrb	r0, [r3, #0]
 800757c:	2800      	cmp	r0, #0
 800757e:	f47f af0b 	bne.w	8007398 <_vsnprintf+0x3b4>
 8007582:	e722      	b.n	80073ca <_vsnprintf+0x3e6>
            const long long value = va_arg(va, long long);
 8007584:	3507      	adds	r5, #7
 8007586:	f025 0507 	bic.w	r5, r5, #7
 800758a:	686a      	ldr	r2, [r5, #4]
 800758c:	f855 eb08 	ldr.w	lr, [r5], #8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007590:	9308      	str	r3, [sp, #32]
 8007592:	4670      	mov	r0, lr
 8007594:	4611      	mov	r1, r2
 8007596:	2300      	movs	r3, #0
 8007598:	2800      	cmp	r0, #0
 800759a:	e9cd c304 	strd	ip, r3, [sp, #16]
 800759e:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 80075a2:	f171 0300 	sbcs.w	r3, r1, #0
 80075a6:	e9cd 7606 	strd	r7, r6, [sp, #24]
 80075aa:	9202      	str	r2, [sp, #8]
 80075ac:	db21      	blt.n	80075f2 <_vsnprintf+0x60e>
 80075ae:	e9cd 0100 	strd	r0, r1, [sp]
 80075b2:	4642      	mov	r2, r8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 80075b4:	464b      	mov	r3, r9
 80075b6:	4651      	mov	r1, sl
 80075b8:	4658      	mov	r0, fp
 80075ba:	f7ff fcb1 	bl	8006f20 <_ntoa_long_long>
 80075be:	4680      	mov	r8, r0
 80075c0:	e734      	b.n	800742c <_vsnprintf+0x448>
          base =  8U;
 80075c2:	f04f 0c08 	mov.w	ip, #8
        format++;
 80075c6:	460b      	mov	r3, r1
 80075c8:	e75c      	b.n	8007484 <_vsnprintf+0x4a0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 80075ca:	2200      	movs	r2, #0
 80075cc:	e9cd c204 	strd	ip, r2, [sp, #16]
 80075d0:	e9cd 6307 	strd	r6, r3, [sp, #28]
 80075d4:	3507      	adds	r5, #7
 80075d6:	9202      	str	r2, [sp, #8]
 80075d8:	f025 0507 	bic.w	r5, r5, #7
 80075dc:	9706      	str	r7, [sp, #24]
 80075de:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 80075e2:	4642      	mov	r2, r8
 80075e4:	e9cd 0100 	strd	r0, r1, [sp]
 80075e8:	e7e4      	b.n	80075b4 <_vsnprintf+0x5d0>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 80075ea:	b252      	sxtb	r2, r2
 80075ec:	e75e      	b.n	80074ac <_vsnprintf+0x4c8>
 80075ee:	b2d2      	uxtb	r2, r2
 80075f0:	e681      	b.n	80072f6 <_vsnprintf+0x312>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 80075f2:	f1de 0000 	rsbs	r0, lr, #0
 80075f6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80075fa:	e7d8      	b.n	80075ae <_vsnprintf+0x5ca>
            const long value = va_arg(va, long);
 80075fc:	f855 1b04 	ldr.w	r1, [r5], #4
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007600:	9305      	str	r3, [sp, #20]
 8007602:	2900      	cmp	r1, #0
 8007604:	ea4f 73d1 	mov.w	r3, r1, lsr #31
 8007608:	bfb8      	it	lt
 800760a:	4249      	neglt	r1, r1
 800760c:	e9cd 7603 	strd	r7, r6, [sp, #12]
 8007610:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 8007614:	4642      	mov	r2, r8
 8007616:	9100      	str	r1, [sp, #0]
 8007618:	e754      	b.n	80074c4 <_vsnprintf+0x4e0>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
 800761a:	e9cd 6304 	strd	r6, r3, [sp, #16]
 800761e:	e9cd c702 	strd	ip, r7, [sp, #8]
 8007622:	9201      	str	r2, [sp, #4]
 8007624:	f855 3b04 	ldr.w	r3, [r5], #4
 8007628:	9300      	str	r3, [sp, #0]
 800762a:	4642      	mov	r2, r8
 800762c:	e74a      	b.n	80074c4 <_vsnprintf+0x4e0>
          while (l++ < width) {
 800762e:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007630:	2800      	cmp	r0, #0
 8007632:	f47f aeb1 	bne.w	8007398 <_vsnprintf+0x3b4>
 8007636:	e6c8      	b.n	80073ca <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007638:	4646      	mov	r6, r8
 800763a:	e76e      	b.n	800751a <_vsnprintf+0x536>
  for (s = str; *s && maxsize--; ++s);
 800763c:	900c      	str	r0, [sp, #48]	; 0x30
 800763e:	e69a      	b.n	8007376 <_vsnprintf+0x392>
 8007640:	970c      	str	r7, [sp, #48]	; 0x30
 8007642:	e698      	b.n	8007376 <_vsnprintf+0x392>

08007644 <_out_fct>:
  if (character) {
 8007644:	b110      	cbz	r0, 800764c <_out_fct+0x8>
    ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 8007646:	e9d1 3100 	ldrd	r3, r1, [r1]
 800764a:	4718      	bx	r3
}
 800764c:	4770      	bx	lr
 800764e:	bf00      	nop

08007650 <vsnprintf_>:
  return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
}


int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
{
 8007650:	b530      	push	{r4, r5, lr}
 8007652:	b083      	sub	sp, #12
 8007654:	460d      	mov	r5, r1
 8007656:	4614      	mov	r4, r2
  return _vsnprintf(_out_buffer, buffer, count, format, va);
 8007658:	4601      	mov	r1, r0
 800765a:	9300      	str	r3, [sp, #0]
 800765c:	462a      	mov	r2, r5
 800765e:	4623      	mov	r3, r4
 8007660:	4802      	ldr	r0, [pc, #8]	; (800766c <vsnprintf_+0x1c>)
 8007662:	f7ff fcbf 	bl	8006fe4 <_vsnprintf>
}
 8007666:	b003      	add	sp, #12
 8007668:	bd30      	pop	{r4, r5, pc}
 800766a:	bf00      	nop
 800766c:	08006bf5 	.word	0x08006bf5

08007670 <fctvprintf>:
  va_end(va);
  return ret;
}

int fctvprintf(void (*out)(char character, void* arg), void* arg, const char* format, va_list va)
{
 8007670:	b530      	push	{r4, r5, lr}
 8007672:	b085      	sub	sp, #20
 8007674:	4605      	mov	r5, r0
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007676:	9300      	str	r3, [sp, #0]
{
 8007678:	460c      	mov	r4, r1
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 800767a:	4613      	mov	r3, r2
 800767c:	a902      	add	r1, sp, #8
 800767e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007682:	4803      	ldr	r0, [pc, #12]	; (8007690 <fctvprintf+0x20>)
  const out_fct_wrap_type out_fct_wrap = { out, arg };
 8007684:	e9cd 5402 	strd	r5, r4, [sp, #8]
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007688:	f7ff fcac 	bl	8006fe4 <_vsnprintf>
}
 800768c:	b005      	add	sp, #20
 800768e:	bd30      	pop	{r4, r5, pc}
 8007690:	08007645 	.word	0x08007645

08007694 <_init>:
 8007694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007696:	bf00      	nop
 8007698:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800769a:	bc08      	pop	{r3}
 800769c:	469e      	mov	lr, r3
 800769e:	4770      	bx	lr

080076a0 <_fini>:
 80076a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076a2:	bf00      	nop
 80076a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80076a6:	bc08      	pop	{r3}
 80076a8:	469e      	mov	lr, r3
 80076aa:	4770      	bx	lr
 80076ac:	0000      	movs	r0, r0
	...
